{
  "version": 3,
  "sources": ["../../../sanity/src/presentation/PostMessageTelemetry.tsx"],
  "sourcesContent": ["import {useTelemetry} from '@sanity/telemetry/react'\nimport {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from './types'\n\nexport interface PostMessageTelemetryProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageTelemetry: FC<PostMessageTelemetryProps> = (props) => {\n  const {comlink} = props\n\n  const telemetry = useTelemetry()\n\n  useEffect(() => {\n    return comlink.on('visual-editing/telemetry-log', (message) => {\n      const {event, data} = message\n\n      // SANITY_STUDIO_DEBUG_TELEMETRY ensures noop/in-browser logging for telemetry events\n      // eslint-disable-next-line no-unused-expressions\n      data ? telemetry.log(event, data) : telemetry.log(event)\n    })\n  }, [comlink, telemetry])\n\n  return null\n}\nexport default memo(PostMessageTelemetry)\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AASA,IAAMA,uBAAsDC,CAAA,UAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GAC1D;IAAAC;EAAAA,IAAkBH,OAElBI,YAAkBC,aAAa;AAAC,MAAAC,IAAAC;AAAA,SAAAN,EAAAE,CAAAA,MAAAA,WAAAF,EAAAA,CAAAA,MAAAG,aAEtBE,KAAAA,MACDH,QAAOK,GAAI,gCAA8BC,CAAA,YAAA;AAC9C,UAAA;MAAAC;MAAAC;IAAAA,IAAsBF;AAItBE,WAAOP,UAASQ,IAAKF,OAAOC,IAAI,IAAIP,UAASQ,IAAKF,KAAK;EAAA,CACxD,GACAH,KAAA,CAACJ,SAASC,SAAS,GAACH,EAAAA,CAAAA,IAAAE,SAAAF,EAAAA,CAAAA,IAAAG,WAAAH,EAAAA,CAAAA,IAAAK,IAAAL,EAAAA,CAAAA,IAAAM,OAAAD,KAAAL,EAAA,CAAA,GAAAM,KAAAN,EAAA,CAAA,QARvBY,yBAAUP,IAQPC,EAAoB,GAAC;AAAA;AAI1B,IAAeO,6BAAAA,oBAAKf,oBAAoB;",
  "names": ["PostMessageTelemetry", "props", "$", "_c", "comlink", "telemetry", "useTelemetry", "t0", "t1", "on", "message", "event", "data", "log", "useEffect", "memo"]
}
