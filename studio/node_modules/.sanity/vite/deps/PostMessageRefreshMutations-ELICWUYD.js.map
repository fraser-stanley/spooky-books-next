{
  "version": 3,
  "sources": ["../../../sanity/src/presentation/editor/PostMessageRefreshMutations.tsx"],
  "sourcesContent": ["import {memo, startTransition, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, type SanityDocument, useEditState} from 'sanity'\n\nimport {type ConnectionStatus, type VisualEditingConnection} from '../types'\n\nexport interface PostMessageRefreshMutationsProps {\n  id: string\n  type: string\n  comlink: VisualEditingConnection\n  previewKitConnection: ConnectionStatus\n  loadersConnection: ConnectionStatus\n}\n\nfunction PostMessageRefreshMutations(props: PostMessageRefreshMutationsProps): React.ReactNode {\n  const {comlink, type, previewKitConnection, loadersConnection} = props\n  const id = useMemo(() => getPublishedId(props.id), [props.id])\n  const {draft, published, ready} = useEditState(id, type, 'low')\n  const livePreviewEnabled =\n    previewKitConnection === 'connected' || loadersConnection === 'connected'\n\n  if ((ready && draft) || published) {\n    return (\n      <PostMessageRefreshMutationsInner\n        key={id}\n        comlink={comlink}\n        draft={draft}\n        livePreviewEnabled={livePreviewEnabled}\n        published={published}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface PostMessageRefreshMutationsInnerProps\n  extends Pick<PostMessageRefreshMutationsProps, 'comlink'> {\n  livePreviewEnabled: boolean\n  draft: SanityDocument | null\n  published: SanityDocument | null\n}\nfunction PostMessageRefreshMutationsInner(props: PostMessageRefreshMutationsInnerProps) {\n  const {comlink, draft, published, livePreviewEnabled} = props\n  const [prevDraft, setPrevDraft] = useState(draft)\n  const [prevPublished, setPrevPublished] = useState(published)\n\n  useEffect(() => {\n    if (prevDraft?._rev !== draft?._rev) {\n      startTransition(() => setPrevDraft(draft))\n      if (draft) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(draft),\n        })\n      }\n    }\n    if (prevPublished?._rev !== published?._rev) {\n      startTransition(() => setPrevPublished(published))\n      if (published) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(published),\n        })\n      }\n    }\n  }, [comlink, draft, livePreviewEnabled, prevDraft?._rev, prevPublished?._rev, published])\n\n  return null\n}\n\nfunction parseDocument(document: SanityDocument & {slug?: {current?: string | null}}): {\n  _id: string\n  _type: string\n  _rev: string\n  slug?: {current?: string | null}\n} {\n  const {_id, _type, _rev, slug} = document\n  return {_id, _type, _rev, slug}\n}\n\nexport default memo(PostMessageRefreshMutations)\n"],
  "mappings": "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",
  "names": ["PostMessageRefreshMutations", "props", "$", "_c", "comlink", "type", "previewKitConnection", "loadersConnection", "t0", "t1", "id", "getPublishedId", "draft", "published", "ready", "useEditState", "livePreviewEnabled", "t2", "PostMessageRefreshMutationsInner", "prevDraft", "setPrevDraft", "useState", "prevPublished", "setPrevPublished", "_rev", "startTransition", "post", "source", "document", "parseDocument", "t3", "useEffect", "_id", "_type", "slug", "memo"]
}
