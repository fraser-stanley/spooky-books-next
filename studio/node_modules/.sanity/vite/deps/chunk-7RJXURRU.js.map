{
  "version": 3,
  "sources": ["../../../@sanity/preview-url-secret/src/constants.ts", "../../../sanity/src/presentation/overlays/useSharedState.ts", "../../../sanity/src/presentation/constants.ts", "../../../sanity/src/presentation/i18n/index.ts", "../../../sanity/src/presentation/useDocumentLocations.ts", "../../../sanity/src/presentation/usePresentationTool.ts", "../../../sanity/src/presentation/document/useCurrentPresentationToolName.ts", "../../../sanity/src/presentation/document/LocationsBanner.tsx", "../../../sanity/src/presentation/document/PresentationDocumentHeader.tsx", "../../../sanity/src/presentation/document/PresentationDocumentProvider.tsx", "../../../sanity/src/presentation/fieldActions/openInStructure.ts", "../../../sanity/src/presentation/getIntentState.ts", "../../../sanity/src/presentation/PresentationSpinner.tsx", "../../../sanity/src/presentation/router.ts", "../../../sanity/src/presentation/plugin.tsx", "../../../sanity/src/presentation/usePresentationNavigate.ts", "../../../sanity/src/presentation/usePresentationParams.ts"],
  "sourcesContent": ["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n  VercelProtectionBypassSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2025-02-19'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const urlSearchParamVercelProtectionBypass = 'x-vercel-protection-bypass'\n\n/** @internal */\nexport const urlSearchParamVercelSetBypassCookie = 'x-vercel-set-bypass-cookie'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/** @internal */\nexport const vercelProtectionBypassSchemaType =\n  'sanity.vercelProtectionBypass' satisfies VercelProtectionBypassSchemaType\n\n/** @internal */\nexport const vercelProtectionBypassSchemaId = `${schemaIdPrefix}.vercel-protection-bypass` as const\n\n/** @internal */\nexport const fetchVercelProtectionBypassSecret =\n  /* groq */ `*[_id == \"${vercelProtectionBypassSchemaId}\" && _type == \"${vercelProtectionBypassSchemaType}\"][0].secret` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n\nexport type {VercelSetBypassCookieValue} from './types'\n", "import {type Serializable} from '@sanity/presentation-comlink'\nimport {useContext, useEffect} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\n/** @public */\nexport const useSharedState = (key: string, value: Serializable): undefined => {\n  const context = useContext(PresentationSharedStateContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  const {setValue} = context\n\n  useEffect(() => {\n    setValue(key, value)\n  }, [key, value, setValue])\n\n  return undefined\n}\n", "import {ComposeIcon} from '@sanity/icons'\nimport {apiVersion} from '@sanity/preview-url-secret/constants'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3_000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = apiVersion\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// How often the list over loader queries should be garbage collected\nexport const LOADER_QUERY_GC_INTERVAL = 30_000 // ms\n\n// The interval at which we check if existing popups have been closed\nexport const POPUP_CHECK_INTERVAL = 1000 // ms\n", "import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n", "import {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, of} from 'rxjs'\nimport {\n  type ObjectSchemaType,\n  type PreviewableType,\n  useDocumentPreviewStore,\n  useDocumentStore,\n  usePerspective,\n} from 'sanity'\n\nimport {\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type DocumentLocationsState,\n  type DocumentLocationsStatus,\n} from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nexport function useDocumentLocations(props: {\n  id: string\n  version: string | undefined\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: ObjectSchemaType\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type, version} = props\n  const documentStore = useDocumentStore()\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const {perspectiveStack} = usePerspective()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type.name])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type: type.name, version, perspectiveStack}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      const doc = {_type: 'reference', _ref: id}\n      // Override the preview selection in the schema type to use the user\n      // defined selection defined by the resolver\n      const _type = {...type, preview: {select: resolver.select}} satisfies PreviewableType\n      const options = {perspective: perspectiveStack}\n      return documentPreviewStore\n        .observeForPreview(doc, _type, options)\n        .pipe(map((preview) => resolver.resolve(preview.snapshot || null)))\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, documentPreviewStore, id, resolver, type, version, perspectiveStack])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n", "import {useContext} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {type PresentationContextValue} from './types'\n\nexport function usePresentationTool(throwOnMissingContext?: true): PresentationContextValue\nexport function usePresentationTool(throwOnMissingContext: false): PresentationContextValue | null\nexport function usePresentationTool(throwOnMissingContext = true): PresentationContextValue | null {\n  const presentation = useContext(PresentationContext)\n\n  if (throwOnMissingContext && !presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n", "import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  return usePresentationTool(false)?.name ?? undefined\n}\n", "import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useContext, useState} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type DocumentLocation,\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type PresentationPluginOptions,\n} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  options: PresentationPluginOptions\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  version: string | undefined\n}): ReactNode {\n  const {documentId, options, resolvers, schemaType, showPresentationTitle, version} = props\n\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    version,\n    resolvers,\n    type: schemaType,\n  })\n\n  const isResolving = status === 'resolving'\n\n  const {locations, message, tone} = state\n  const locationsCount = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const presentationName = presentation?.name\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!locationsCount) return\n    setExpanded((v) => !v)\n  }, [locationsCount])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: locationsCount})\n\n  const ToneIcon = tone ? TONE_ICONS[tone] : undefined\n\n  if (!resolvers) return null\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && ToneIcon && (\n              <Box flex=\"none\">\n                <Text size={1}>\n                  <ToneIcon />\n                </Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={locationsCount ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {locationsCount === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l) => {\n                let active = false\n                if (\n                  (options.name || DEFAULT_TOOL_NAME) === presentationName &&\n                  presentation?.params.preview\n                ) {\n                  active = areUrlsMatching(presentation.params.preview, l.href)\n                }\n\n                return (\n                  <LocationItem\n                    active={active}\n                    documentId={documentId}\n                    documentType={schemaType.name}\n                    key={l.href}\n                    node={l}\n                    toolName={options.name || DEFAULT_TOOL_NAME}\n                  />\n                )\n              })}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({}, {preview: node.href})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      key={node.href}\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n\n/**\n * Compares two URLs to determine if they match based on origin, pathname, and search parameters\n * The previewUrl should have all the search parameters that are in the locationUrl\n */\nfunction areUrlsMatching(previewUrlString: string, locationUrlString: string): boolean {\n  try {\n    const previewUrl = new URL(previewUrlString, location.origin)\n    const locationUrl = new URL(locationUrlString, previewUrl.origin)\n\n    // First compare origin and pathname\n    if (previewUrl.origin !== locationUrl.origin || previewUrl.pathname !== locationUrl.pathname) {\n      return false\n    }\n\n    // Then check search params\n    // All search params in locationUrl must exist with the same values in previewUrl\n    const locationParams = new URLSearchParams(locationUrl.search)\n    const previewParams = new URLSearchParams(previewUrl.search)\n\n    for (const [key, value] of locationParams.entries()) {\n      if (previewParams.get(key) !== value) {\n        return false\n      }\n    }\n\n    return true\n  } catch {\n    // If URL parsing fails, URLs don't match\n    return false\n  }\n}\n", "import {rem, Stack} from '@sanity/ui'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType, type PublishedId} from 'sanity'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {LocationsBanner} from './LocationsBanner'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  version: string | undefined\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType, version} = props\n  const context = useContext(PresentationDocumentContext)\n\n  const contextOptions = context?.options || []\n  const resolvers = contextOptions.map((o) => o.resolve?.locations || o.locate)\n  const hasResolvers = resolvers.some(Boolean)\n\n  if ((context && context.options[0] !== options) || !hasResolvers) {\n    return null\n  }\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {contextOptions.map((_options, idx) => (\n          <LocationsBanner\n            key={idx}\n            documentId={documentId}\n            options={_options}\n            resolvers={resolvers[idx]}\n            schemaType={schemaType}\n            showPresentationTitle={contextOptions.length > 1}\n            version={version}\n          />\n        ))}\n      </Stack>\n    </LocationStack>\n  )\n}\n", "import {type ReactNode, useCallback, useContext, useLayoutEffect, useMemo, useState} from 'react'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {type PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): React.JSX.Element {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const registerEffectEvent = useEffectEvent((options: PresentationPluginOptions) =>\n    register(options),\n  )\n  useLayoutEffect(() => registerEffectEvent(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n", "import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type DocumentFieldActionProps,\n  isRecord,\n  pathToString,\n  type Tool,\n  useWorkspace,\n} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME} from '../constants'\n\nfunction useOpenInStructureAction(\n  props: DocumentFieldActionProps,\n): DocumentFieldActionItem | DocumentFieldActionGroup {\n  const {documentId, documentType, path} = props\n  const workspace = useWorkspace()\n  const {navigateIntent} = useRouter()\n  const presentation = useContext(PresentationContext)\n\n  const defaultStructureTool = useMemo(\n    () =>\n      findStructureTool(\n        workspace.tools,\n        documentId,\n        documentType,\n        presentation?.name || DEFAULT_TOOL_NAME,\n      ),\n    [documentId, documentType, workspace.tools, presentation],\n  )\n\n  return {\n    type: 'action',\n    hidden: !presentation || path.length > 0 || !defaultStructureTool,\n    icon: defaultStructureTool?.icon || MasterDetailIcon,\n    title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n    onAction() {\n      navigateIntent('edit', {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n        path: pathToString(path),\n      })\n    },\n    renderAsButton: true,\n  }\n}\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction: useOpenInStructureAction,\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n  presentationToolName?: string,\n): Tool | undefined {\n  const results = tools\n    .filter((t) => t.name !== presentationToolName)\n    .map((t) => {\n      const match = t.canHandleIntent?.(\n        'edit',\n        {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n        },\n        {},\n      )\n\n      return {tool: t, match}\n    })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n", "import {uuid} from '@sanity/uuid'\nimport {getPublishedId} from 'sanity'\nimport {encodeJsonParams, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {type PresentationSearchParams, type PresentationStateParams} from './types'\n\nconst preservedSearchParamKeys: Array<keyof PresentationSearchParams> = ['preview', 'viewport']\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: RouterState | undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  const preservedSearchParams = (routerState?._searchParams || [])\n    // @todo Casting https://github.com/microsoft/TypeScript/issues/14520\n    .filter(([key]) => preservedSearchParamKeys.includes(key as keyof PresentationSearchParams))\n    .reduce((acc, [key, value]) => ({...acc, [key]: value}), {} as Record<string, string>)\n\n  const _searchParams = {\n    ...preservedSearchParams,\n    ...searchParams,\n  }\n\n  if (intent === 'edit' && id) {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      _searchParams.templateParams = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n", "import {Flex, Spinner} from '@sanity/ui'\n\nexport function PresentationSpinner(): React.JSX.Element {\n  return (\n    <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" style={{width: '100%'}}>\n      <Spinner />\n    </Flex>\n  )\n}\n", "import {route} from 'sanity/router'\n\n// eslint-disable-next-line camelcase\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n", "import {type SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  getVersionFromId,\n  type InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport {router} from './router'\nimport {\n  type DocumentLocationResolverObject,\n  type DocumentLocationsState,\n  type DocumentResolver,\n  type PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationToolGrantsCheck'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\n/** @public */\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    // eslint-disable-next-line no-console\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n    const documentVersion = value?._id ? getVersionFromId(value._id) : undefined\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              version={documentVersion}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          <Suspense fallback={<PresentationSpinner />}>{props.renderDefault(props)}</Suspense>\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params.mode === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n        __internalApplicationType: 'sanity/presentation',\n      },\n    ],\n  }\n})\n", "import {useContext} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigateContextValue} from './types'\n\n/** @public */\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n", "import {useContext} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParamsContextValue\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext: false,\n): PresentationParamsContextValue | null\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext = true,\n): PresentationParamsContextValue | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],
  "mappings": "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",
  "names": ["useSharedState", "key", "value", "$", "_c", "context", "useContext", "PresentationSharedStateContext", "Error", "setValue", "t0", "t1", "useEffect", "DEFAULT_TOOL_ICON", "ComposeIcon", "DEFAULT_TOOL_NAME", "DEFAULT_TOOL_TITLE", "EDIT_INTENT_MODE", "MAX_TIME_TO_OVERLAYS_CONNECTION", "API_VERSION", "apiVersion", "MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL", "LOADER_QUERY_GC_INTERVAL", "POPUP_CHECK_INTERVAL", "presentationLocaleNamespace", "presentationUsEnglishLocaleBundle", "defineLocaleResourceBundle", "locale", "namespace", "resources", "INITIAL_STATE", "locations", "useDocumentLocations", "props", "id", "resolvers", "type", "version", "documentStore", "useDocumentStore", "documentPreviewStore", "useDocumentPreviewStore", "perspectiveStack", "usePerspective", "locationsState", "setLocationsState", "useState", "resolver", "name", "locationsStatus", "setLocationsStatus", "undefined", "bb0", "params", "_result", "isObservable", "of", "doc", "_type", "_ref", "preview", "select", "options", "perspective", "t2", "resolve", "snapshot", "observeForPreview", "pipe", "map", "result", "sub", "subscribe", "state", "unsubscribe", "t3", "status", "usePresentationTool", "throwOnMissingContext", "presentation", "PresentationContext", "useCurrentPresentationToolName", "TONE_ICONS", "positive", "InfoOutlineIcon", "caution", "WarningOutlineIcon", "critical", "ErrorOutlineIcon", "LocationsBanner", "documentId", "schemaType", "showPresentationTitle", "isResolving", "message", "tone", "locationsCount", "length", "t", "useTranslation", "presentationName", "expanded", "setExpanded", "_temp", "toggle", "count", "title", "ToneIcon", "Symbol", "for", "margin", "t4", "t5", "transform", "transition", "l", "active", "href", "t6", "t7", "v", "LocationItem", "documentType", "node", "toolName", "currentPresentationToolName", "isCurrentTool", "navigate", "structureParams", "intent", "mode", "presentationLinkProps", "useIntentLink", "handleCurrentToolClick", "onClick", "t8", "t9", "areUrlsMatching", "previewUrlString", "locationUrlString", "previewUrl", "URL", "location", "origin", "locationUrl", "pathname", "locationParams", "URLSearchParams", "search", "previewParams", "entries", "get", "LocationStack", "styled", "Stack", "rem", "PresentationDocumentHeader", "PresentationDocumentContext", "contextOptions", "some", "Boolean", "hasResolvers", "_options", "idx", "o", "locate", "PresentationDocumentProvider", "children", "parent", "parentRegister", "register", "optionsArray", "setOptionsArray", "options_0", "prev", "concat", "prev_0", "filter", "options_1", "registerEffectEvent", "useEffectEvent", "useLayoutEffect", "useOpenInStructureAction", "path", "workspace", "useWorkspace", "navigateIntent", "useRouter", "tools", "findStructureTool", "defaultStructureTool", "icon", "MasterDetailIcon", "hidden", "onAction", "pathToString", "renderAsButton", "openInStructure", "defineDocumentFieldAction", "useAction", "presentationToolName", "results", "match", "canHandleIntent", "tool", "modeMatches", "isRecord", "preservedSearchParamKeys", "getIntentState", "routerState", "payload", "searchParams", "_searchParams", "includes", "reduce", "acc", "window", "getPublishedId", "Object", "templateParams", "encodeJsonParams", "uuid", "PresentationSpinner", "width", "router", "route", "create", "__unsafe_disableScopedSearchParams", "intents", "PresentationTool", "lazy", "BroadcastDisplayedDocument", "defineLocations", "defineDocuments", "presentationTool", "definePlugin", "console", "warn", "hasLocationsResolver", "PresentationDocumentInput", "_id", "getVersionFromId", "documentVersion", "isDocumentSchemaType", "renderDefault", "canHandleCreateIntent", "template", "canHandleEditIntent", "i18n", "bundles", "document", "unstable_fieldActions", "a", "form", "components", "input", "component", "__internalApplicationType", "usePresentationNavigate", "PresentationNavigateContext", "usePresentationParams", "PresentationParamsContext"]
}
