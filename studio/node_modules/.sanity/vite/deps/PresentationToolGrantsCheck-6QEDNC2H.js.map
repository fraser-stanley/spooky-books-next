{
  "version": 3,
  "sources": ["../../../sanity/node_modules/uuid/dist/esm-browser/regex.js", "../../../sanity/node_modules/uuid/dist/esm-browser/validate.js", "../../../sanity/node_modules/uuid/dist/esm-browser/parse.js", "../../../sanity/node_modules/uuid/dist/esm-browser/stringify.js", "../../../sanity/node_modules/uuid/dist/esm-browser/rng.js", "../../../sanity/node_modules/uuid/dist/esm-browser/md5.js", "../../../sanity/node_modules/uuid/dist/esm-browser/v35.js", "../../../sanity/node_modules/uuid/dist/esm-browser/v3.js", "../../../sanity/node_modules/uuid/dist/esm-browser/native.js", "../../../sanity/node_modules/uuid/dist/esm-browser/v4.js", "../../../sanity/node_modules/uuid/dist/esm-browser/sha1.js", "../../../sanity/node_modules/uuid/dist/esm-browser/v5.js", "../../../@sanity/preview-url-secret/src/withoutSecretSearchParams.ts", "../../../@sanity/preview-url-secret/src/generateSecret.ts", "../../../@sanity/preview-url-secret/src/togglePreviewAccessSharing.ts", "../../../path-to-regexp/src/index.ts", "../../../@sanity/preview-url-secret/src/createPreviewSecret.ts", "../../../@sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts", "../../../sanity/src/presentation/features/PostMessageFeatures.tsx", "../../../sanity/src/presentation/machines/presentation-machine.ts", "../../../sanity/src/presentation/overlays/SharedStateProvider.tsx", "../../../sanity/src/presentation/panels/Panel.tsx", "../../../sanity/src/presentation/util/debounce.ts", "../../../sanity/src/presentation/panels/usePanelsStorage.ts", "../../../sanity/src/presentation/panels/util.ts", "../../../sanity/src/presentation/panels/Panels.tsx", "../../../sanity/src/presentation/components/ErrorCard.tsx", "../../../sanity/src/presentation/editor/PresentationPaneRouterProvider.tsx", "../../../sanity/src/presentation/editor/DocumentListPane.tsx", "../../../sanity/src/presentation/editor/DocumentPane.tsx", "../../../sanity/src/presentation/editor/DocumentPanel.tsx", "../../../sanity/src/presentation/editor/usePreviewState.ts", "../../../sanity/src/presentation/editor/ContentEditor.tsx", "../../../sanity/src/presentation/panels/usePanelId.ts", "../../../sanity/src/presentation/panels/PanelResizer.tsx", "../../../sanity/src/presentation/PresentationContent.tsx", "../../../sanity/src/presentation/PresentationNavigateProvider.tsx", "../../../sanity/src/presentation/useLocalState.ts", "../../../sanity/src/presentation/PresentationNavigator.tsx", "../../../sanity/src/presentation/PresentationParamsProvider.tsx", "../../../sanity/src/presentation/PresentationProvider.tsx", "../../../sanity/src/presentation/useAllowPatterns.ts", "../../../sanity/src/presentation/util/encodeStudioPerspective.ts", "../../../sanity/src/presentation/useId.ts", "../../../sanity/src/presentation/preview/IFrame.tsx", "../../../sanity/src/presentation/preview/OpenPreviewButton.tsx", "../../../sanity/src/presentation/useTargetOrigin.ts", "../../../sanity/src/presentation/preview/PreviewLocationInput.tsx", "../../../sanity/src/presentation/preview/SharePreviewMenu.tsx", "../../../sanity/src/presentation/preview/PreviewHeader.tsx", "../../../sanity/src/presentation/preview/Preview.tsx", "../../../sanity/src/presentation/util/warnOnce.ts", "../../../sanity/src/presentation/useDocumentsOnPage.ts", "../../../sanity/src/presentation/useMainDocument.ts", "../../../sanity/src/presentation/util/parse.ts", "../../../sanity/src/presentation/useParams.ts", "../../../sanity/src/presentation/usePopups.ts", "../../../sanity/src/presentation/usePresentationPerspective.ts", "../../../sanity/src/presentation/useStatus.ts", "../../../sanity/src/presentation/PresentationTool.tsx", "../../../sanity/src/presentation/actors/create-preview-secret.ts", "../../../sanity/src/presentation/actors/read-shared-secret.ts", "../../../sanity/src/presentation/actors/resolve-allow-patterns.ts", "../../../sanity/src/presentation/actors/resolve-initial-url.ts", "../../../sanity/src/presentation/actors/resolve-preview-mode.ts", "../../../sanity/src/presentation/actors/resolve-preview-mode-url.ts", "../../../sanity/src/presentation/actors/resolve-url-from-preview-search-param.ts", "../../../sanity/src/presentation/machines/preview-url.ts", "../../../sanity/src/presentation/usePreviewUrlActorRef.ts", "../../../sanity/src/presentation/useReportInvalidPreviewSearchParam.tsx", "../../../sanity/src/presentation/useVercelBypassSecret.ts", "../../../sanity/src/presentation/PresentationToolGrantsCheck.tsx"],
  "sourcesContent": ["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n", "import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n", "import validate from './validate.js';\nfunction parse(uuid) {\n    if (!validate(uuid)) {\n        throw TypeError('Invalid UUID');\n    }\n    let v;\n    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);\n}\nexport default parse;\n", "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "function md5(bytes) {\n    const words = uint8ToUint32(bytes);\n    const md5Bytes = wordsToMd5(words, bytes.length * 8);\n    return uint32ToUint8(md5Bytes);\n}\nfunction uint32ToUint8(input) {\n    const bytes = new Uint8Array(input.length * 4);\n    for (let i = 0; i < input.length * 4; i++) {\n        bytes[i] = (input[i >> 2] >>> ((i % 4) * 8)) & 0xff;\n    }\n    return bytes;\n}\nfunction getOutputLength(inputLength8) {\n    return (((inputLength8 + 64) >>> 9) << 4) + 14 + 1;\n}\nfunction wordsToMd5(x, len) {\n    const xpad = new Uint32Array(getOutputLength(len)).fill(0);\n    xpad.set(x);\n    xpad[len >> 5] |= 0x80 << len % 32;\n    xpad[xpad.length - 1] = len;\n    x = xpad;\n    let a = 1732584193;\n    let b = -271733879;\n    let c = -1732584194;\n    let d = 271733878;\n    for (let i = 0; i < x.length; i += 16) {\n        const olda = a;\n        const oldb = b;\n        const oldc = c;\n        const oldd = d;\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n        a = safeAdd(a, olda);\n        b = safeAdd(b, oldb);\n        c = safeAdd(c, oldc);\n        d = safeAdd(d, oldd);\n    }\n    return Uint32Array.of(a, b, c, d);\n}\nfunction uint8ToUint32(input) {\n    if (input.length === 0) {\n        return new Uint32Array();\n    }\n    const output = new Uint32Array(getOutputLength(input.length * 8)).fill(0);\n    for (let i = 0; i < input.length; i++) {\n        output[i >> 2] |= (input[i] & 0xff) << ((i % 4) * 8);\n    }\n    return output;\n}\nfunction safeAdd(x, y) {\n    const lsw = (x & 0xffff) + (y & 0xffff);\n    const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xffff);\n}\nfunction bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\nfunction md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;\n", "import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n    const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n    const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n    if (typeof namespace === 'string') {\n        namespace = parse(namespace);\n    }\n    if (namespace?.length !== 16) {\n        throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    let bytes = new Uint8Array(16 + valueBytes.length);\n    bytes.set(namespaceBytes);\n    bytes.set(valueBytes, namespaceBytes.length);\n    bytes = hash(bytes);\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\n", "import md5 from './md5.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v3(value, namespace, buf, offset) {\n    return v35(0x30, md5, value, namespace, buf, offset);\n}\nv3.DNS = DNS;\nv3.URL = URL;\nexport default v3;\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "function f(s, x, y, z) {\n    switch (s) {\n        case 0:\n            return (x & y) ^ (~x & z);\n        case 1:\n            return x ^ y ^ z;\n        case 2:\n            return (x & y) ^ (x & z) ^ (y & z);\n        case 3:\n            return x ^ y ^ z;\n    }\n}\nfunction ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction sha1(bytes) {\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    const newBytes = new Uint8Array(bytes.length + 1);\n    newBytes.set(bytes);\n    newBytes[bytes.length] = 0x80;\n    bytes = newBytes;\n    const l = bytes.length / 4 + 2;\n    const N = Math.ceil(l / 16);\n    const M = new Array(N);\n    for (let i = 0; i < N; ++i) {\n        const arr = new Uint32Array(16);\n        for (let j = 0; j < 16; ++j) {\n            arr[j] =\n                (bytes[i * 64 + j * 4] << 24) |\n                    (bytes[i * 64 + j * 4 + 1] << 16) |\n                    (bytes[i * 64 + j * 4 + 2] << 8) |\n                    bytes[i * 64 + j * 4 + 3];\n        }\n        M[i] = arr;\n    }\n    M[N - 1][14] = ((bytes.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n    for (let i = 0; i < N; ++i) {\n        const W = new Uint32Array(80);\n        for (let t = 0; t < 16; ++t) {\n            W[t] = M[i][t];\n        }\n        for (let t = 16; t < 80; ++t) {\n            W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n        }\n        let a = H[0];\n        let b = H[1];\n        let c = H[2];\n        let d = H[3];\n        let e = H[4];\n        for (let t = 0; t < 80; ++t) {\n            const s = Math.floor(t / 20);\n            const T = (ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n            e = d;\n            d = c;\n            c = ROTL(b, 30) >>> 0;\n            b = a;\n            a = T;\n        }\n        H[0] = (H[0] + a) >>> 0;\n        H[1] = (H[1] + b) >>> 0;\n        H[2] = (H[2] + c) >>> 0;\n        H[3] = (H[3] + d) >>> 0;\n        H[4] = (H[4] + e) >>> 0;\n    }\n    return Uint8Array.of(H[0] >> 24, H[0] >> 16, H[0] >> 8, H[0], H[1] >> 24, H[1] >> 16, H[1] >> 8, H[1], H[2] >> 24, H[2] >> 16, H[2] >> 8, H[2], H[3] >> 24, H[3] >> 16, H[3] >> 8, H[3], H[4] >> 24, H[4] >> 16, H[4] >> 8, H[4]);\n}\nexport default sha1;\n", "import sha1 from './sha1.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v5(value, namespace, buf, offset) {\n    return v35(0x50, sha1, value, namespace, buf, offset);\n}\nv5.DNS = DNS;\nv5.URL = URL;\nexport default v5;\n", "import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n", "/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n", "import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(client: SanityClient): Promise<void> {\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n", "import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n", "import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n", "import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n", "export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n", "import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n", "/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  // eslint-disable-next-line no-eq-null\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n", "// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n", "/* eslint-disable no-nested-ternary */\nimport {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n", "/* eslint-disable no-console */\n\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n", "import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n", "import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n", "import {type Path} from 'sanity'\n\nimport {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n", "import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n", "import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n", "import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n", "import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n", "import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n", "import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n", "import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n", "import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n", "import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n", "/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n", "import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n", "import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n", "import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n", "import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n", "import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n", "/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition,no-nested-ternary */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n", "/* eslint-disable no-nested-ternary */\nimport {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          // eslint-disable-next-line react/jsx-no-bind\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n", "/* eslint-disable react/no-unused-prop-types,no-nested-ternary */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            // @ts-expect-error - fix typings\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n", "/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n", "import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n", "import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n", "import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n", "import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n", "import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n", "import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n", "/* eslint-disable max-statements,@typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don't need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({}, {preview})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({}, {preview})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n", "import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n", "import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n", "import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n", "import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n", "import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n", "import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n", "import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n", "import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n", "import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    // eslint-disable-next-line no-nested-ternary\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n", "import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n", "import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n", "import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAO,gBAAQ;;;ACCf,SAAS,SAAS,MAAM;AACpB,SAAO,OAAO,SAAS,YAAY,cAAM,KAAK,IAAI;AACtD;AACA,IAAO,mBAAQ;;;ACHf,SAAS,MAAM,MAAM;AACjB,MAAI,CAAC,iBAAS,IAAI,GAAG;AACjB,UAAM,UAAU,cAAc;AAAA,EAClC;AACA,MAAI;AACJ,SAAO,WAAW,IAAI,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,IAAK,MAAM,KAAM,KAAO,MAAM,IAAK,KAAM,IAAI,MAAO,IAAI,SAAS,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,OAAO,GAAG,IAAI,MAAO,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO,GAAG,IAAI,MAAO,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO,GAAG,IAAI,MAAQ,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,gBAAiB,KAAO,IAAI,aAAe,KAAO,MAAM,KAAM,KAAO,MAAM,KAAM,KAAO,MAAM,IAAK,KAAM,IAAI,GAAI;AACvb;AACA,IAAO,gBAAQ;;;ACPf,IAAM,YAAY,CAAC;AACnB,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,YAAU,MAAM,IAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AACpD;AACO,SAAS,gBAAgB,KAAK,SAAS,GAAG;AAC7C,UAAQ,UAAU,IAAI,SAAS,CAAC,CAAC,IAC7B,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,MACA,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,MACA,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,MACA,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,UAAU,IAAI,SAAS,CAAC,CAAC,IACzB,MACA,UAAU,IAAI,SAAS,EAAE,CAAC,IAC1B,UAAU,IAAI,SAAS,EAAE,CAAC,IAC1B,UAAU,IAAI,SAAS,EAAE,CAAC,IAC1B,UAAU,IAAI,SAAS,EAAE,CAAC,IAC1B,UAAU,IAAI,SAAS,EAAE,CAAC,IAC1B,UAAU,IAAI,SAAS,EAAE,CAAC,GAAG,YAAY;AACjD;;;AC1BA,IAAI;AACJ,IAAM,QAAQ,IAAI,WAAW,EAAE;AAChB,SAAR,MAAuB;AAC1B,MAAI,CAAC,iBAAiB;AAClB,QAAI,OAAO,WAAW,eAAe,CAAC,OAAO,iBAAiB;AAC1D,YAAM,IAAI,MAAM,0GAA0G;AAAA,IAC9H;AACA,sBAAkB,OAAO,gBAAgB,KAAK,MAAM;AAAA,EACxD;AACA,SAAO,gBAAgB,KAAK;AAChC;;;ACVA,SAAS,IAAI,OAAO;AAChB,QAAM,QAAQ,cAAc,KAAK;AACjC,QAAM,WAAW,WAAW,OAAO,MAAM,SAAS,CAAC;AACnD,SAAO,cAAc,QAAQ;AACjC;AACA,SAAS,cAAc,OAAO;AAC1B,QAAM,QAAQ,IAAI,WAAW,MAAM,SAAS,CAAC;AAC7C,WAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK;AACvC,UAAM,CAAC,IAAK,MAAM,KAAK,CAAC,MAAQ,IAAI,IAAK,IAAM;AAAA,EACnD;AACA,SAAO;AACX;AACA,SAAS,gBAAgB,cAAc;AACnC,UAAU,eAAe,OAAQ,KAAM,KAAK,KAAK;AACrD;AACA,SAAS,WAAW,GAAG,KAAK;AACxB,QAAM,OAAO,IAAI,YAAY,gBAAgB,GAAG,CAAC,EAAE,KAAK,CAAC;AACzD,OAAK,IAAI,CAAC;AACV,OAAK,OAAO,CAAC,KAAK,OAAQ,MAAM;AAChC,OAAK,KAAK,SAAS,CAAC,IAAI;AACxB,MAAI;AACJ,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAIA,KAAI;AACR,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,IAAI;AACnC,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAOA;AACb,UAAM,OAAO;AACb,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,MAAM;AAC3C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,GAAG,QAAQ;AAC5C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,QAAQ;AAC5C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,QAAQ;AAC7C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAGA,IAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAGA,IAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,IAAAA,KAAI,MAAMA,IAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAGA,IAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AACnB,IAAAA,KAAI,QAAQA,IAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AAAA,EACvB;AACA,SAAO,YAAY,GAAG,GAAG,GAAGA,IAAG,CAAC;AACpC;AACA,SAAS,cAAc,OAAO;AAC1B,MAAI,MAAM,WAAW,GAAG;AACpB,WAAO,IAAI,YAAY;AAAA,EAC3B;AACA,QAAM,SAAS,IAAI,YAAY,gBAAgB,MAAM,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC;AACxE,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,WAAO,KAAK,CAAC,MAAM,MAAM,CAAC,IAAI,QAAW,IAAI,IAAK;AAAA,EACtD;AACA,SAAO;AACX;AACA,SAAS,QAAQ,GAAG,GAAG;AACnB,QAAM,OAAO,IAAI,UAAW,IAAI;AAChC,QAAM,OAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAC5C,SAAQ,OAAO,KAAO,MAAM;AAChC;AACA,SAAS,cAAc,KAAK,KAAK;AAC7B,SAAQ,OAAO,MAAQ,QAAS,KAAK;AACzC;AACA,SAAS,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC9B,SAAO,QAAQ,cAAc,QAAQ,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC7E;AACA,SAAS,MAAM,GAAG,GAAGA,IAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,OAAQ,IAAIA,KAAM,CAAC,IAAI,GAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACnD;AACA,SAAS,MAAM,GAAG,GAAGA,IAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,OAAQ,IAAI,IAAMA,KAAI,CAAC,GAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACnD;AACA,SAAS,MAAM,GAAG,GAAGA,IAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,OAAO,IAAIA,KAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC1C;AACA,SAAS,MAAM,GAAG,GAAGA,IAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,OAAOA,MAAK,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7C;AACA,IAAO,cAAQ;;;ACpIR,SAAS,cAAc,KAAK;AAC/B,QAAM,SAAS,mBAAmB,GAAG,CAAC;AACtC,QAAM,QAAQ,IAAI,WAAW,IAAI,MAAM;AACvC,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACjC,UAAM,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,EAC/B;AACA,SAAO;AACX;AACO,IAAM,MAAM;AACZ,IAAMC,OAAM;AACJ,SAAR,IAAqB,SAAS,MAAM,OAAO,WAAW,KAAK,QAAQ;AACtE,QAAM,aAAa,OAAO,UAAU,WAAW,cAAc,KAAK,IAAI;AACtE,QAAM,iBAAiB,OAAO,cAAc,WAAW,cAAM,SAAS,IAAI;AAC1E,MAAI,OAAO,cAAc,UAAU;AAC/B,gBAAY,cAAM,SAAS;AAAA,EAC/B;AACA,OAAI,uCAAW,YAAW,IAAI;AAC1B,UAAM,UAAU,kEAAkE;AAAA,EACtF;AACA,MAAI,QAAQ,IAAI,WAAW,KAAK,WAAW,MAAM;AACjD,QAAM,IAAI,cAAc;AACxB,QAAM,IAAI,YAAY,eAAe,MAAM;AAC3C,UAAQ,KAAK,KAAK;AAClB,QAAM,CAAC,IAAK,MAAM,CAAC,IAAI,KAAQ;AAC/B,QAAM,CAAC,IAAK,MAAM,CAAC,IAAI,KAAQ;AAC/B,MAAI,KAAK;AACL,aAAS,UAAU;AACnB,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,UAAI,SAAS,CAAC,IAAI,MAAM,CAAC;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AACA,SAAO,gBAAgB,KAAK;AAChC;;;AChCA,SAAS,GAAG,OAAO,WAAW,KAAK,QAAQ;AACvC,SAAO,IAAI,IAAM,aAAK,OAAO,WAAW,KAAK,MAAM;AACvD;AACA,GAAG,MAAM;AACT,GAAG,MAAMC;;;ACPT,IAAM,aAAa,OAAO,WAAW,eAAe,OAAO,cAAc,OAAO,WAAW,KAAK,MAAM;AACtG,IAAO,iBAAQ,EAAE,WAAW;;;ACE5B,SAAS,GAAG,SAAS,KAAK,QAAQ;AAHlC;AAII,MAAI,eAAO,cAAc,CAAC,OAAO,CAAC,SAAS;AACvC,WAAO,eAAO,WAAW;AAAA,EAC7B;AACA,YAAU,WAAW,CAAC;AACtB,QAAM,OAAO,QAAQ,YAAU,aAAQ,QAAR,qCAAmB,IAAI;AACtD,MAAI,KAAK,SAAS,IAAI;AAClB,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACvD;AACA,OAAK,CAAC,IAAK,KAAK,CAAC,IAAI,KAAQ;AAC7B,OAAK,CAAC,IAAK,KAAK,CAAC,IAAI,KAAQ;AAC7B,MAAI,KAAK;AACL,aAAS,UAAU;AACnB,QAAI,SAAS,KAAK,SAAS,KAAK,IAAI,QAAQ;AACxC,YAAM,IAAI,WAAW,mBAAmB,MAAM,IAAI,SAAS,EAAE,0BAA0B;AAAA,IAC3F;AACA,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,UAAI,SAAS,CAAC,IAAI,KAAK,CAAC;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AACA,SAAO,gBAAgB,IAAI;AAC/B;AACA,IAAOC,cAAQ;;;AC1Bf,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG;AACnB,UAAQ,GAAG;AAAA,IACP,KAAK;AACD,aAAQ,IAAI,IAAM,CAAC,IAAI;AAAA,IAC3B,KAAK;AACD,aAAO,IAAI,IAAI;AAAA,IACnB,KAAK;AACD,aAAQ,IAAI,IAAM,IAAI,IAAM,IAAI;AAAA,IACpC,KAAK;AACD,aAAO,IAAI,IAAI;AAAA,EACvB;AACJ;AACA,SAAS,KAAK,GAAG,GAAG;AAChB,SAAQ,KAAK,IAAM,MAAO,KAAK;AACnC;AACA,SAAS,KAAK,OAAO;AACjB,QAAM,IAAI,CAAC,YAAY,YAAY,YAAY,UAAU;AACzD,QAAM,IAAI,CAAC,YAAY,YAAY,YAAY,WAAY,UAAU;AACrE,QAAM,WAAW,IAAI,WAAW,MAAM,SAAS,CAAC;AAChD,WAAS,IAAI,KAAK;AAClB,WAAS,MAAM,MAAM,IAAI;AACzB,UAAQ;AACR,QAAM,IAAI,MAAM,SAAS,IAAI;AAC7B,QAAM,IAAI,KAAK,KAAK,IAAI,EAAE;AAC1B,QAAM,IAAI,IAAI,MAAM,CAAC;AACrB,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,UAAM,MAAM,IAAI,YAAY,EAAE;AAC9B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,UAAI,CAAC,IACA,MAAM,IAAI,KAAK,IAAI,CAAC,KAAK,KACrB,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,KAC7B,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,IAC9B,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC;AAAA,IACpC;AACA,MAAE,CAAC,IAAI;AAAA,EACX;AACA,IAAE,IAAI,CAAC,EAAE,EAAE,KAAM,MAAM,SAAS,KAAK,IAAK,KAAK,IAAI,GAAG,EAAE;AACxD,IAAE,IAAI,CAAC,EAAE,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;AACtC,IAAE,IAAI,CAAC,EAAE,EAAE,KAAM,MAAM,SAAS,KAAK,IAAK;AAC1C,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,UAAM,IAAI,IAAI,YAAY,EAAE;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,QAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AAAA,IACjB;AACA,aAAS,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG;AAC1B,QAAE,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;AAAA,IAC9D;AACA,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAIC,KAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,YAAM,IAAI,KAAK,MAAM,IAAI,EAAE;AAC3B,YAAM,IAAK,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,GAAGA,IAAG,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,MAAO;AAC7D,UAAI;AACJ,UAAIA;AACJ,MAAAA,KAAI,KAAK,GAAG,EAAE,MAAM;AACpB,UAAI;AACJ,UAAI;AAAA,IACR;AACA,MAAE,CAAC,IAAK,EAAE,CAAC,IAAI,MAAO;AACtB,MAAE,CAAC,IAAK,EAAE,CAAC,IAAI,MAAO;AACtB,MAAE,CAAC,IAAK,EAAE,CAAC,IAAIA,OAAO;AACtB,MAAE,CAAC,IAAK,EAAE,CAAC,IAAI,MAAO;AACtB,MAAE,CAAC,IAAK,EAAE,CAAC,IAAI,MAAO;AAAA,EAC1B;AACA,SAAO,WAAW,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACpO;AACA,IAAO,eAAQ;;;AClEf,SAAS,GAAG,OAAO,WAAW,KAAK,QAAQ;AACvC,SAAO,IAAI,IAAM,cAAM,OAAO,WAAW,KAAK,MAAM;AACxD;AACA,GAAG,MAAM;AACT,GAAG,MAAMC;A;;;;;ACEF,SAAS,0BAA0B,KAAe;AACvD,QAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,aAAA,IAAgB;AACvB,SAAA,aAAa,OAAO,6BAA6B,GACjD,aAAa,OAAO,2BAA2B,GAC/C,aAAa,OAAO,gCAAgC,GACpD,aAAa,OAAO,oCAAoC,GACxD,aAAa,OAAO,mCAAmC,GAChD;AACT;AAQO,SAAS,sBACd,KACA,QACA,YACA,aACK;AACL,QAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,aAAA,IAAgB;AAEvB,SAAI,WACF,aAAa,IAAI,6BAA6B,MAAM,GACpD,aAAa,IAAI,+BAA+B,UAAU,IAG5D,aAAa,IAAI,kCAAkC,WAAW,GAEvD;AACT;;;AC1CO,SAAS,oBAA4B;AAEtC,MAAA,OAAO,SAAW,KAAa;AAE3B,UAAA,QAAQ,IAAI,WAAW,EAAE;AAC/B,WAAO,gBAAgB,KAAK;AAG5B,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ;AAEzB,aAAA,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AAI9C,WAAA,MAAM,KAAK,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,SAAS,EAAE,GAEpE;EAAA;AAGT,SAAO,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,MAAM,CAAC;AAC3C;;;AChBA,eAAsB,2BACpB,SACA,QACA,WACA,QAC2B;AACrB,QAAA,SAAS,QAAQ,WAAW,EAAC,WAAA,CAAW,GACxC,YAAY,kBAAA,GACZ,QAAQ,OAAO,MAAMC,iBAAG,EAAE,IAAI,EAAC,QAAQ,WAAW,WAAW,OAAA,CAAO;AACpE,SAAA,MAAA,OACH,YAAA,EACA,kBAAkB,EAAA,KAACA,mBAAKC,OAAAA,qBAAO,QAAQ,WAAW,OAAO,CAAA,EACzD,MAAM,KAAK,EACX,OAAO,EAAC,IAAA,CAAI,GAER,EAAC,QAAQ,UAAS;AAC3B;AAGA,eAAsB,4BACpB,SACA,QACA,WACA,QACe;AACf,QAAM,SAAS,QAAQ,WAAW,EAAC,WAAW,CAAA,GACxC,QAAQ,OAAO,MAAMD,iBAAG,EAAE,IAAI,EAAC,QAAQ,MAAM,WAAW,OAAA,CAAO;AACrE,QAAM,OACH,YAAY,EACZ,kBAAkB,EAACA,KAAAA,mBAAKC,OAAAA,qBAAO,QAAQ,WAAW,OAAM,CAAC,EACzD,MAAM,KAAK,EACX,OAAO,EAAC,IAAA,CAAI;AACjB;A;;;;;AClBA,SAAS,MAAM,KAAW;AACxB,MAAM,SAAqB,CAAA;AAC3B,MAAI,IAAI;AAER,SAAO,IAAI,IAAI,QAAQ;AACrB,QAAM,OAAO,IAAI,CAAC;AAElB,QAAI,SAAS,OAAO,SAAS,OAAO,SAAS,KAAK;AAChD,aAAO,KAAK,EAAE,MAAM,YAAY,OAAO,GAAG,OAAO,IAAI,GAAG,EAAC,CAAE;AAC3D;;AAGF,QAAI,SAAS,MAAM;AACjB,aAAO,KAAK,EAAE,MAAM,gBAAgB,OAAO,KAAK,OAAO,IAAI,GAAG,EAAC,CAAE;AACjE;;AAGF,QAAI,SAAS,KAAK;AAChB,aAAO,KAAK,EAAE,MAAM,QAAQ,OAAO,GAAG,OAAO,IAAI,GAAG,EAAC,CAAE;AACvD;;AAGF,QAAI,SAAS,KAAK;AAChB,aAAO,KAAK,EAAE,MAAM,SAAS,OAAO,GAAG,OAAO,IAAI,GAAG,EAAC,CAAE;AACxD;;AAGF,QAAI,SAAS,KAAK;AAChB,UAAI,OAAO;AACX,UAAI,IAAI,IAAI;AAEZ,aAAO,IAAI,IAAI,QAAQ;AACrB,YAAM,OAAO,IAAI,WAAW,CAAC;AAE7B;;UAEG,QAAQ,MAAM,QAAQ;UAEtB,QAAQ,MAAM,QAAQ;UAEtB,QAAQ,MAAM,QAAQ;UAEvB,SAAS;UACT;AACA,kBAAQ,IAAI,GAAG;AACf;;AAGF;;AAGF,UAAI,CAAC;AAAM,cAAM,IAAI,UAAU,6BAAA,OAA6B,CAAC,CAAE;AAE/D,aAAO,KAAK,EAAE,MAAM,QAAQ,OAAO,GAAG,OAAO,KAAI,CAAE;AACnD,UAAI;AACJ;;AAGF,QAAI,SAAS,KAAK;AAChB,UAAI,QAAQ;AACZ,UAAI,UAAU;AACd,UAAI,IAAI,IAAI;AAEZ,UAAI,IAAI,CAAC,MAAM,KAAK;AAClB,cAAM,IAAI,UAAU,oCAAA,OAAoC,CAAC,CAAE;;AAG7D,aAAO,IAAI,IAAI,QAAQ;AACrB,YAAI,IAAI,CAAC,MAAM,MAAM;AACnB,qBAAW,IAAI,GAAG,IAAI,IAAI,GAAG;AAC7B;;AAGF,YAAI,IAAI,CAAC,MAAM,KAAK;AAClB;AACA,cAAI,UAAU,GAAG;AACf;AACA;;mBAEO,IAAI,CAAC,MAAM,KAAK;AACzB;AACA,cAAI,IAAI,IAAI,CAAC,MAAM,KAAK;AACtB,kBAAM,IAAI,UAAU,uCAAA,OAAuC,CAAC,CAAE;;;AAIlE,mBAAW,IAAI,GAAG;;AAGpB,UAAI;AAAO,cAAM,IAAI,UAAU,yBAAA,OAAyB,CAAC,CAAE;AAC3D,UAAI,CAAC;AAAS,cAAM,IAAI,UAAU,sBAAA,OAAsB,CAAC,CAAE;AAE3D,aAAO,KAAK,EAAE,MAAM,WAAW,OAAO,GAAG,OAAO,QAAO,CAAE;AACzD,UAAI;AACJ;;AAGF,WAAO,KAAK,EAAE,MAAM,QAAQ,OAAO,GAAG,OAAO,IAAI,GAAG,EAAC,CAAE;;AAGzD,SAAO,KAAK,EAAE,MAAM,OAAO,OAAO,GAAG,OAAO,GAAE,CAAE;AAEhD,SAAO;AACT;AAgBM,SAAUC,OAAM,KAAa,SAA0B;AAA1B,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAA0B;AAC3D,MAAM,SAAS,MAAM,GAAG;AAChB,MAAA,KAAuC,QAAO,UAA9C,WAAQ,OAAA,SAAG,OAAI,IAAE,KAAsB,QAAO,WAA7B,YAAS,OAAA,SAAG,QAAK;AAC1C,MAAM,SAAkB,CAAA;AACxB,MAAI,MAAM;AACV,MAAI,IAAI;AACR,MAAI,OAAO;AAEX,MAAM,aAAa,SAAC,MAAsB;AACxC,QAAI,IAAI,OAAO,UAAU,OAAO,CAAC,EAAE,SAAS;AAAM,aAAO,OAAO,GAAG,EAAE;EACvE;AAEA,MAAM,cAAc,SAAC,MAAsB;AACzC,QAAMC,SAAQ,WAAW,IAAI;AAC7B,QAAIA,WAAU;AAAW,aAAOA;AAC1B,QAAAC,MAA4B,OAAO,CAAC,GAA5B,WAAQA,IAAA,MAAE,QAAKA,IAAA;AAC7B,UAAM,IAAI,UAAU,cAAA,OAAc,UAAQ,MAAA,EAAA,OAAO,OAAK,aAAA,EAAA,OAAc,IAAI,CAAE;EAC5E;AAEA,MAAM,cAAc,WAAA;AAClB,QAAIC,UAAS;AACb,QAAIF;AACJ,WAAQA,SAAQ,WAAW,MAAM,KAAK,WAAW,cAAc,GAAI;AACjE,MAAAE,WAAUF;;AAEZ,WAAOE;EACT;AAEA,MAAM,SAAS,SAACF,QAAa;AAC3B,aAAmB,KAAA,GAAA,cAAA,WAAA,KAAA,YAAA,QAAA,MAAS;AAAvB,UAAMG,QAAI,YAAA,EAAA;AAAe,UAAIH,OAAM,QAAQG,KAAI,IAAI;AAAI,eAAO;;AACnE,WAAO;EACT;AAEA,MAAM,cAAc,SAACC,SAAc;AACjC,QAAM,OAAO,OAAO,OAAO,SAAS,CAAC;AACrC,QAAM,WAAWA,YAAW,QAAQ,OAAO,SAAS,WAAW,OAAO;AAEtE,QAAI,QAAQ,CAAC,UAAU;AACrB,YAAM,IAAI,UACR,8DAAA,OAA+D,KAAa,MAAI,GAAA,CAAG;;AAIvF,QAAI,CAAC,YAAY,OAAO,QAAQ;AAAG,aAAO,KAAA,OAAK,aAAa,SAAS,GAAC,KAAA;AACtE,WAAO,SAAA,OAAS,aAAa,QAAQ,GAAC,KAAA,EAAA,OAAM,aAAa,SAAS,GAAC,MAAA;EACrE;AAEA,SAAO,IAAI,OAAO,QAAQ;AACxB,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAM,UAAU,WAAW,SAAS;AAEpC,QAAI,QAAQ,SAAS;AACnB,UAAI,SAAS,QAAQ;AAErB,UAAI,SAAS,QAAQ,MAAM,MAAM,IAAI;AACnC,gBAAQ;AACR,iBAAS;;AAGX,UAAI,MAAM;AACR,eAAO,KAAK,IAAI;AAChB,eAAO;;AAGT,aAAO,KAAK;QACV,MAAM,QAAQ;QACd;QACA,QAAQ;QACR,SAAS,WAAW,YAAY,MAAM;QACtC,UAAU,WAAW,UAAU,KAAK;OACrC;AACD;;AAGF,QAAM,QAAQ,QAAQ,WAAW,cAAc;AAC/C,QAAI,OAAO;AACT,cAAQ;AACR;;AAGF,QAAI,MAAM;AACR,aAAO,KAAK,IAAI;AAChB,aAAO;;AAGT,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAI,MAAM;AACR,UAAM,SAAS,YAAW;AAC1B,UAAM,SAAO,WAAW,MAAM,KAAK;AACnC,UAAM,YAAU,WAAW,SAAS,KAAK;AACzC,UAAM,SAAS,YAAW;AAE1B,kBAAY,OAAO;AAEnB,aAAO,KAAK;QACV,MAAM,WAAS,YAAU,QAAQ;QACjC,SAAS,UAAQ,CAAC,YAAU,YAAY,MAAM,IAAI;QAClD;QACA;QACA,UAAU,WAAW,UAAU,KAAK;OACrC;AACD;;AAGF,gBAAY,KAAK;;AAGnB,SAAO;AACT;AA+IM,SAAU,MACd,KACA,SAAwE;AAExE,MAAM,OAAc,CAAA;AACpB,MAAM,KAAK,aAAa,KAAK,MAAM,OAAO;AAC1C,SAAO,iBAAoB,IAAI,MAAM,OAAO;AAC9C;AAKM,SAAU,iBACd,IACA,MACA,SAAqC;AAArC,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAAqC;AAE7B,MAAA,KAA8B,QAAO,QAArC,SAAM,OAAA,SAAG,SAAC,GAAS;AAAK,WAAA;EAAA,IAAC;AAEjC,SAAO,SAAU,UAAgB;AAC/B,QAAM,IAAI,GAAG,KAAK,QAAQ;AAC1B,QAAI,CAAC;AAAG,aAAO;AAEP,QAAG,OAAgB,EAAC,CAAA,GAAX,QAAU,EAAC;AAC5B,QAAM,SAAS,uBAAO,OAAO,IAAI;2BAExBC,IAAC;AACR,UAAI,EAAEA,EAAC,MAAM;;AAEb,UAAM,MAAM,KAAKA,KAAI,CAAC;AAEtB,UAAI,IAAI,aAAa,OAAO,IAAI,aAAa,KAAK;AAChD,eAAO,IAAI,IAAI,IAAI,EAAEA,EAAC,EAAE,MAAM,IAAI,SAAS,IAAI,MAAM,EAAE,IAAI,SAAC,OAAK;AAC/D,iBAAO,OAAO,OAAO,GAAG;QAC1B,CAAC;aACI;AACL,eAAO,IAAI,IAAI,IAAI,OAAO,EAAEA,EAAC,GAAG,GAAG;;;AAVvC,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAG;cAAxB,CAAC;;AAcV,WAAO,EAAE,MAAM,OAAO,OAAM;EAC9B;AACF;AAKA,SAAS,aAAa,KAAW;AAC/B,SAAO,IAAI,QAAQ,6BAA6B,MAAM;AACxD;AAKA,SAAS,MAAM,SAAiC;AAC9C,SAAO,WAAW,QAAQ,YAAY,KAAK;AAC7C;AAqBA,SAAS,eAAe,MAAc,MAAY;AAChD,MAAI,CAAC;AAAM,WAAO;AAElB,MAAM,cAAc;AAEpB,MAAI,QAAQ;AACZ,MAAI,aAAa,YAAY,KAAK,KAAK,MAAM;AAC7C,SAAO,YAAY;AACjB,SAAK,KAAK;;MAER,MAAM,WAAW,CAAC,KAAK;MACvB,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,SAAS;KACV;AACD,iBAAa,YAAY,KAAK,KAAK,MAAM;;AAG3C,SAAO;AACT;AAKA,SAAS,cACP,OACA,MACA,SAA8C;AAE9C,MAAM,QAAQ,MAAM,IAAI,SAAC,MAAI;AAAK,WAAA,aAAa,MAAM,MAAM,OAAO,EAAE;EAAlC,CAAwC;AAC1E,SAAO,IAAI,OAAO,MAAA,OAAM,MAAM,KAAK,GAAG,GAAC,GAAA,GAAK,MAAM,OAAO,CAAC;AAC5D;AAKA,SAAS,eACP,MACA,MACA,SAA8C;AAE9C,SAAO,eAAeC,OAAM,MAAM,OAAO,GAAG,MAAM,OAAO;AAC3D;AAoCM,SAAU,eACd,QACA,MACA,SAAmC;AAAnC,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAAmC;AAGjC,MAAA,KAME,QAAO,QANT,SAAM,OAAA,SAAG,QAAK,IACd,KAKE,QAAO,OALT,QAAK,OAAA,SAAG,OAAI,IACZ,KAIE,QAAO,KAJT,MAAG,OAAA,SAAG,OAAI,IACV,KAGE,QAAO,QAHT,SAAM,OAAA,SAAG,SAAC,GAAS;AAAK,WAAA;EAAA,IAAC,IACzB,KAEE,QAAO,WAFT,YAAS,OAAA,SAAG,QAAK,IACjB,KACE,QAAO,UADT,WAAQ,OAAA,SAAG,KAAE;AAEf,MAAM,aAAa,IAAA,OAAI,aAAa,QAAQ,GAAC,KAAA;AAC7C,MAAM,cAAc,IAAA,OAAI,aAAa,SAAS,GAAC,GAAA;AAC/C,MAAI,QAAQ,QAAQ,MAAM;AAG1B,WAAoB,KAAA,GAAA,WAAA,QAAA,KAAA,SAAA,QAAA,MAAQ;AAAvB,QAAM,QAAK,SAAA,EAAA;AACd,QAAI,OAAO,UAAU,UAAU;AAC7B,eAAS,aAAa,OAAO,KAAK,CAAC;WAC9B;AACL,UAAM,SAAS,aAAa,OAAO,MAAM,MAAM,CAAC;AAChD,UAAM,SAAS,aAAa,OAAO,MAAM,MAAM,CAAC;AAEhD,UAAI,MAAM,SAAS;AACjB,YAAI;AAAM,eAAK,KAAK,KAAK;AAEzB,YAAI,UAAU,QAAQ;AACpB,cAAI,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AACpD,gBAAM,MAAM,MAAM,aAAa,MAAM,MAAM;AAC3C,qBAAS,MAAA,OAAM,QAAM,MAAA,EAAA,OAAO,MAAM,SAAO,MAAA,EAAA,OAAO,MAAM,EAAA,OAAG,QAAM,KAAA,EAAA,OAAM,MAAM,SAAO,MAAA,EAAA,OAAO,QAAM,GAAA,EAAA,OAAI,GAAG;iBACjG;AACL,qBAAS,MAAA,OAAM,QAAM,GAAA,EAAA,OAAI,MAAM,SAAO,GAAA,EAAA,OAAI,QAAM,GAAA,EAAA,OAAI,MAAM,QAAQ;;eAE/D;AACL,cAAI,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AACpD,kBAAM,IAAI,UACR,mBAAA,OAAmB,MAAM,MAAI,+BAAA,CAA+B;;AAIhE,mBAAS,IAAA,OAAI,MAAM,SAAO,GAAA,EAAA,OAAI,MAAM,QAAQ;;aAEzC;AACL,iBAAS,MAAA,OAAM,MAAM,EAAA,OAAG,QAAM,GAAA,EAAA,OAAI,MAAM,QAAQ;;;;AAKtD,MAAI,KAAK;AACP,QAAI,CAAC;AAAQ,eAAS,GAAA,OAAG,aAAW,GAAA;AAEpC,aAAS,CAAC,QAAQ,WAAW,MAAM,MAAA,OAAM,YAAU,GAAA;SAC9C;AACL,QAAM,WAAW,OAAO,OAAO,SAAS,CAAC;AACzC,QAAM,iBACJ,OAAO,aAAa,WAChB,YAAY,QAAQ,SAAS,SAAS,SAAS,CAAC,CAAC,IAAI,KACrD,aAAa;AAEnB,QAAI,CAAC,QAAQ;AACX,eAAS,MAAA,OAAM,aAAW,KAAA,EAAA,OAAM,YAAU,KAAA;;AAG5C,QAAI,CAAC,gBAAgB;AACnB,eAAS,MAAA,OAAM,aAAW,GAAA,EAAA,OAAI,YAAU,GAAA;;;AAI5C,SAAO,IAAI,OAAO,OAAO,MAAM,OAAO,CAAC;AACzC;AAcM,SAAU,aACd,MACA,MACA,SAA8C;AAE9C,MAAI,gBAAgB;AAAQ,WAAO,eAAe,MAAM,IAAI;AAC5D,MAAI,MAAM,QAAQ,IAAI;AAAG,WAAO,cAAc,MAAM,MAAM,OAAO;AACjE,SAAO,eAAe,MAAM,MAAM,OAAO;AAC3C;;;ACznBA,eAAsB,oBACpB,SACA,QACA,WACA,QACA,KAAK,WAAA,GACuC;AAC5C,QAAM,SAAS,QAAQ,WAAW,EAAC,WAAA,CAAW;AAE1C,MAAA;AACF,UAAM,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,MAAO,UAAU,GACnD,MAAM,UAAU,EAAE,IAClB,YAAY,kBAAkB,GAC9B,QAAQ,OAAO,MAAM,GAAG,EAAE,IAAI,EAAC,QAAQ,WAAW,QAAQ,WAAW,OAAA,CAAO;AAC5E,WAAA,MAAA,OAAO,YAAA,EAAc,gBAAgB,EAAC,KAAK,OAAO,WAAA,CAAW,EAAE,MAAM,KAAK,EAAE,OAAO,EAAC,IAAA,CAAI,GAEvF,EAAC,QAAQ,WAAW,UAAS;EAAA,UAAA;AAEhC,QAAA;AAEF,YAAM,OAAO,OAAO,EAAC,OAAO,0BAAA,CAA0B;IAAA,SAC/C,KAAK;AAEJ,cAAA,MAAM,oCAAoC,GAAG;IAAA;EACvD;AAEJ;;;ACRgB,SAAA,iCACd,QACA,UACY;AACZ,MAAI,aAAa,IAAI,gBAAgB,GACjC,WAAsB,CAAC;AACZ,iBAAA,YAAY,iBAAgC,QAAqB;AAC9E,UAAM,EAAC,QAAQ,SAAA,IAAY,MAAM,OAAO;MACtC;MACA,CAAC;MACD;QACE,gBAAgB;QAChB;QACA,KAAK;MAAA;IAET;AACI,UAAM,QAAQ,QAAQ,MACxB,WAAW,WAER,OAAO,WACV,SAAS,MAAM;EAAA;AAGnB,QAAM,eAAe,OAAO,KAAK,OAAA,EAAS,UAAU;IAClD,MAAM,CAAC,UAAU;AACX,YAAM,SAAS,cACjB,WAAW,MAAA,GACX,aAAa,IAAI,gBAAgB,GAC7B,MAAM,KAAK,KAAK,CAACC,SAAQ,SAAS,SAASA,IAAG,CAAC,KACjD,YAAY,MAAM,IAAI,WAAW,MAAM;IAG7C;;IAEA,OAAO,CAAC,WAAW,QAAQ,MAAM,MAAM;EAAA,CACxC;AAED,SAAA,YAAY,MAAM,WAAW,MAAM,GAE5B,MAAM;AACE,iBAAA,YAAA,GACb,WAAW,MAAM;EACnB;AACF;;;AC5DA,IAAMC,sBAAoDC,CAAA,UAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GACxD;IAAAC;EAAAA,IAAkBH;AAAK,MAAAI,IAAAC;AAAA,SAAAJ,EAAAA,CAAAA,MAAAE,WAEbC,KAAAA,MACDD,QAAOG,GAAI,2BAAyBC,OAIzC,GACDF,KAAAA,CAACF,OAAO,GAACF,EAAAA,CAAAA,IAAAE,SAAAF,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,CAAAA,IAAAI,OAAAD,KAAAH,EAAA,CAAA,GAAAI,KAAAJ,EAAA,CAAA,QANZO,yBAAUJ,IAMPC,EAAS,GAAC;AAAA;AAKf,IAAeI,4BAAAA,oBAAKV,mBAAmB;AAdmB,SAAAQ,UAAA;AAAA,SAAA;IAAAG,UAAA;MAAAC,YAAA;IAAA;EAAA;AAAA;ACMnD,IAAMC,sBAAsBC,MAAM;EACvCC,OAAO,CAAC;EAKRC,SAAS;;EACP;EAEFC,QAAQ;;EACN;EAEFC,QAAQ;;EAAA;AAGV,CAAC,EAAEC,cAAc;;;EAGfC,IAAI;EACJC,SAAS;IACPC,KAAK;IACLC,OAAO;IACPC,8BAA8B;EAChC;EAEAjB,IAAI;IACF,iBAAiB;MACfS,SAASS,OAAO;QAACH,KAAK;MAAA,CAAK;MAC3BI,QAAQ;IAAA;EAEZ;EAEAC,QAAQ;IACNJ,OAAO;MACLK,aACE;MACFC,MAAM,CAAC,OAAO;IAChB;IACAC,SAAS;MACPvB,IAAI;QACF,iBAAiB;UACfmB,QAAQ;QAAA;MAEZ;MACAG,MAAM,CAAC,MAAM;IACf;IACAE,QAAQ;MACNxB,IAAI;QACF,kCAAkC;UAChCS,SAASS,OAAO;YACdD,8BAA8BA,CAAC;cAACQ;YAAAA,MAAWA,MAAMC;UAClD,CAAA;QACH;QACA,kBAAkB;UAChBP,QAAQ;QACV;QACA,iBAAiB;UACfA,QAAQ;QAAA;MAEZ;MAEAC,QAAQ;QACNO,MAAM,CAAC;QACPC,YAAY;UACV5B,IAAI;YACF,iBAAiB;cACfmB,QAAQ;YAAA;UAEZ;UACAG,MAAM,CAAC,MAAM;QACf;QACAO,WAAW;UACT7B,IAAI;YACF,iBAAiB;cACfmB,QAAQ;YAAA;UAEZ;UACAG,MAAM,CAAC,MAAM;QAAA;MAEjB;MACAQ,SAAS;IAAA;EAEb;EACAA,SAAS;AACX,CAAC;AApFM,ICAMC,sBAIT,SAAArC,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GACF;IAAAC;IAAAmC;EAAAA,IAA4BtC;AAAKI,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEcpC,KAAA,CAAA,GAAEH,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAjDwC,QAAAA,kBAAoBC,sBAA2BtC,EAAE;AAAC,MAAAC,IAAAsC;AAAA1C,IAAAA,CAAAA,MAAAE,WAExCE,KAAAA,MACDF,mCAAOG,GAAK,+BAA6B,OAAA;IAAAsC,OAC/BH,YAAWI;EAAA,KAE3BF,KAAAA,CAACxC,OAAO,GAACF,EAAAA,CAAAA,IAAAE,SAAAF,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAJZO,yBAAUH,IAIPsC,EAAS;AAACG,MAAAA;AAAA7C,IAAAA,CAAAA,MAAAE,WAGX2C,KAAAA,CAAAC,KAAAC,UAAA;AACEP,gBAAWI,QAASE,GAAG,IAAIC,OAC3B7C,mCAAO8C,KAAO,6BAA2B;MAAAF;MAAAC;IAAAA;EAAA,GAC1C/C,EAAAA,CAAAA,IAAAE,SAAAF,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAJH,QAAAiD,WAAiBJ;AAMhBK,MAAAA;AAAAlD,IAAAA,CAAAA,MAAAE,WAGCgD,KAAAC,CAAA,UAAA;AACEjD,uCAAO8C,KAAO,6BAA2B;MAAAF,KAAGA;IAAG,IAAA,OACxCN,YAAWI,QAASE,KAAG;EAAA,GAC/B9C,EAAAA,CAAAA,IAAAE,SAAAF,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAJH,QAAAoD,cAAoBF;AAMnB,MAAAG,IAAAC;AAAAtD,IAAAoD,CAAAA,MAAAA,eAAApD,EAAAA,CAAAA,MAAAiD,YAGQK,KAAA;IAAAF;IAAAH;EAAAA,GAAuBjD,EAAAA,CAAAA,IAAAoD,aAAApD,EAAAA,CAAAA,IAAAiD,UAAAjD,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA,GAAAqD,KAAvBC;AADT,QAAAnC,UAAgBkC;AAGfE,MAAAA;AAAA,SAAAvD,EAAAqC,EAAAA,MAAAA,YAAArC,EAAAA,EAAAA,MAAAmB,WAGCoC,SAAA,wBAAA,+BAAA,UAAA,EAAgDpC,OAAAA,SAC7CkB,SAAAA,CACH,GAA0CrC,EAAAA,EAAAA,IAAAqC,UAAArC,EAAAA,EAAAA,IAAAmB,SAAAnB,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA,GAF1CuD;AAE0C;ADvCvC,IEFDC,SAAOC,GAAOC;;;;;AFEb,IEIMC,QAAuC,SAAAxD,IAAA;AAAAH,QAAAA,QAAAC,iCAAA,EAAA,GAAU;IAAAoC;IAAAuB,aAAAxD;IAAAc;IAAA2C;IAAAC;IAAAC,OAAArB;EAAAA,IAAAvC,IAE5DyD,cAAAxD,OAAkB4D,SAAAA,OAAlB5D,IAIA2D,QAAArB,OAASsB,SAAAA,IAATtB,IAEAvB,cAAgB8C,0BAAAC,yBAAoC;AAAC,MAEjD/C,YAAgB;AAAA,UACZgD,MAAM,iEAAiE;AAG/E,QAAA;IAAAC;IAAAC;IAAAC;EAAAA,IAA4DnD;AAAO0B,MAAAA;AAAA7C,IAAAoE,CAAAA,MAAAA,iBAAApE,EAAAA,CAAAA,MAAAkB,MAErD2B,KAAAuB,cAAclD,EAAE,GAAClB,EAAAA,CAAAA,IAAAoE,eAAApE,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAA/B,QAAAuE,QAAc1B;AAAiB,MAAAK,IAAAG;AAAArD,IAAA4D,CAAAA,MAAAA,eAAA5D,EAAAkB,CAAAA,MAAAA,MAAAlB,EAAA8D,CAAAA,MAAAA,YAAA9D,EAAAA,CAAAA,MAAA6D,YAAA7D,EAAA,CAAA,MAAA+D,SAAA/D,EAAA,CAAA,MAAAqE,mBAAArE,EAAA,CAAA,MAAAsE,qBAEfpB,KAAAA,OACdmB,gBAAgBnD,IAAE;IAAAA;IAAAsD,MAEV;IAAOZ;IAAAE,UAEHA,YAAgB;IAAAD,UAChBA,YAAa;IAAAE;EAExB,CAAA,GAAC,MAAA;AAGAO,sBAAkBpD,EAAE;EAAC,IAEtBmC,KAACnC,CAAAA,IAAI0C,aAAaG,OAAOD,UAAUD,UAAUQ,iBAAiBC,iBAAiB,GAACtE,EAAAA,CAAAA,IAAA4D,aAAA5D,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAA8D,UAAA9D,EAAAA,CAAAA,IAAA6D,UAAA7D,EAAAA,CAAAA,IAAA+D,OAAA/D,EAAAA,CAAAA,IAAAqE,iBAAArE,EAAAA,CAAAA,IAAAsE,mBAAAtE,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,OAAAH,KAAAlD,EAAA,EAAA,GAAAqD,KAAArD,EAAA,EAAA,QAbnFyE,+BAAgBvB,IAabG,EAAgF;AAACC,MAAAA;AAAA,SAAAtD,EAAAqC,EAAAA,MAAAA,YAAArC,EAAAA,EAAAA,MAAAuE,SAE7EjB,SAAC,wBAAAE,QAAYe,EAAAA,OAAe,SAAE,CAAA,GAAOvE,EAAAA,EAAAA,IAAAqC,UAAArC,EAAAA,EAAAA,IAAAuE,OAAAvE,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA,GAArCsD;AAAqC;ACnD9BoB,SAAAA,SACdC,IACAC,SACG;AACCC,MAAAA;AACJ,SAAQ,IAAIC,SAAwB;AAClCC,iBAAaF,KAAK,GAClBA,QAAQG,WAAW,MAAM;AACpBC,SAAAA,MAAMN,IAAIG,IAAI;IAAA,GAChBF,OAAO;EACZ;AACF;ACNA,IAAMM,UAAU;AAAhB,IAIMC,gBAAgBA,MAEbC,KAAKC,MAAMC,aAAaC,QAAQL,OAAO,KAAK,IAAI;AANzD,IAQMM,gBAAiBC,CAA4B,SAAA;AACjDH,eAAaI,QAAQR,SAASE,KAAKO,UAAUF,IAAI,CAAC;AACpD;AAVA,IAYMG,kBAAmBC,CAChBA,WAAAA,OAAOC,IAAKC,CAAAA,UAAU,CAACA,MAAM7E,IAAI6E,MAAMhC,KAAK,EAAEiC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG;AAGnE,SAAAC,mBAAA;AAAAjG,QAAAA,QAAAC,iCAAA,CAAA;AAAAE,MAAAA;AAMH+F,QAAAA,MAAAC,UAQAC,MAAAC;AAQCjG,MAAAA;AAAA,MAAAJ,EAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,GAAA;AAED+D,UAAAA,eAAqB5B,SAAS0B,KAAAA,GAAQ;AAC/B,SAAA;MAAAF;MAAAE;MAAAE;IAAAA,GAINtG,EAAAA,CAAAA,IAAAI;EAAA;AAAAA,SAAAJ,EAAA,CAAA;AAJDG,SAAAA,KAAOC,IApBFD;AAyBD;AA9BD,SAAAkG,SAAAE,UAAAC,QAAA;AAeD,QAAAC,WAAetB,cAAAA,GACfhC,QAAYyC,gBAAgBC,QAAM,GAClCJ,OAAA;IAAA,GACKiB;IAAM,CACR5D,KAAG,GAAG0D;EAAM;AAEfhB,gBAAcC,IAAI;AAAC;AArBlB,SAAAU,SAAAN,QAAA;AAOD,QAAAa,SAAevB,cAAAA,GACfrC,MAAY8C,gBAAgBC,MAAM;AAAC,SAC5Bc,MAAAC,QAAcF,OAAO5D,GAAG,CAAC,KAAK4D,OAAO5D,GAAG,EAAA+D,KAAAvG,OAA4B,IAAC0D,SAExE0C,OAAO5D,GAAG;AAAC;AAXd,SAAAxC,QAAAwG,KAAA;AAAA,SAS8DA,QAAY;AAAA;ACrBjF,SAASC,aAAahB,OAAqBiB,WAAmBC,gBAAwB;AAC9E,QAAA;IAACnD,UAAUoD;IAAYrD,UAAUsD;EAAU,IAAIpB,OAC/CjC,WAAWoD,cAAc,OAAO,MAAOA,aAAaD,iBAAkB,KACtEpD,WAAYsD,aAAaF,iBAAkB;AACjD,SAAOG,KAAKC,IAAIvD,UAAUsD,KAAKE,IAAIzD,UAAUmD,SAAS,CAAC;AACzD;AAGO,SAASO,cACdC,OACAP,gBACAQ,aACAC,YACAC,aACAC,kBACU;AACJ,QAAA;IAAC/B;IAAQW,QAAQqB;EAAAA,IAAcF,aAC/B;IAACnB,QAAQsB;EAAAA,IAAiBF,kBAE1BpB,SAASsB,iBAAiBD,YAC1BE,aAAa,CAAC,GAAGvB,MAAM;AAE7B;AACQwB,UAAAA,cAAaR,QAAQ,IAAIE,aAAaD,aACtCQ,SAAQpC,OAAOqC,UAAWnC,CAAAA,UAAUA,MAAM7E,OAAO8G,YAAW9G,EAAE,GAC9DiH,QAAQ3B,OAAOyB,MAAK,GACpBjB,YAAYD,aAAaiB,aAAYG,QAAQf,KAAKgB,IAAIZ,KAAK,GAAGP,cAAc;AAClF,QAAIkB,UAAUnB;AACLR,aAAAA;AAETgB,YAAQA,QAAQ,IAAIW,QAAQnB,YAAYA,YAAYmB;EAAAA;AAGtD,MAAIE,eAAe,GACfL,aAAaR,QAAQ,IAAIC,cAAcC,YACvCO,QAAQpC,OAAOqC,UAAWnC,CAAAA,UAAUA,MAAM7E,OAAO8G,WAAW9G,EAAE;AAGrD,aAAA;AACL6E,UAAAA,QAAQF,OAAOoC,KAAK,GACpBE,QAAQ3B,OAAOyB,KAAK,GAEpBK,iBAAiBlB,KAAKgB,IAAIZ,KAAK,IAAIJ,KAAKgB,IAAIC,YAAY,GAExDrB,YAAYD,aAAahB,OAAOoC,QAAQG,gBAAgBrB,cAAc;AAExEkB,QAAAA,UAAUnB,cACZqB,gBAAgBF,QAAQnB,WACxBe,WAAWE,KAAK,IAAIjB,WAGlBqB,aAAaE,YAAY,EAAE,EAAEC,cAAcpB,KAAKgB,IAAIZ,KAAK,EAAEe,YAAY,EAAE,GAAGvE,QAAW;MACrFyE,SAAS;IACV,CAAA,KAAK;AAEN;AAIJ,QAAIjB,QAAQ,GAAA;AACV,UAAI,EAAES,QAAQ;AACZ;IAAA,WAEO,EAAEA,SAASpC,OAAO6C;AAC3B;EAAA;AAIAL,SAAAA,iBAAiB,IACZ7B,UAGTwB,aAAaR,QAAQ,IAAIE,aAAaD,aACtCQ,QAAQpC,OAAOqC,UAAWnC,CAAAA,UAAUA,MAAM7E,OAAO8G,WAAW9G,EAAE,GAC9D6G,WAAWE,KAAK,IAAIzB,OAAOyB,KAAK,IAAII,cAE7BN;AACT;AAEgBY,SAAAA,cAAc9C,QAAwB3E,IAAYsF,QAA0B;AACtFX,MAAAA,OAAO6C,WAAW,EAAU,QAAA;AAE1BT,QAAAA,QAAQpC,OAAOqC,UAAWnC,CAAUA,UAAAA,MAAM7E,OAAOA,EAAE,GACnDiH,QAAQ3B,OAAOyB,KAAK;AAG1B,SAAIE,SAAS,OAAa,MAEnBA,MAAMI,YAAY,EAAE;AAC7B;AAEO,SAASK,UACd9G,OACA+G,eACAC,gBAAwB,GACxBC,2BAA2C,MACnC;AACR,QAAMC,gBAAgBlH,MAAMmH,SAGtBC,iBADOH,4BAA4BF,cAAcM,sBAAAA,GAC5BC;AAE3B,SAAOJ,gBAAgBE,gBAAgBJ;AACzC;AAEO,SAASO,QAAQC,SAAiE;AACvF,SAAOA,QAAQ9E,SAAS;AAC1B;AAEO,SAAS+E,UAAUD,SAAmE;AAC3F,SAAOA,QAAQ9E,SAAS;AAC1B;AAEO,SAASgF,kBAAkBC,UAA4D;AAC5F,SAAO9C,MAAM+C,KAAKD,SAASE,OAAQ,CAAA,EAAEC,KAAK,CAAC;IAAC7F,OAAO8F;EAAAA,GAAI;IAAC9F,OAAO+F;EACzDD,MAAAA,KAAK,QAAQC,KAAK,OAAa,IAC/BD,KAAK,OAAa,KAClBC,KAAK,OAAa,IACfD,IAAIC,CACZ;AACH;AAEgBC,SAAAA,eACdlE,QACAmE,kBACA/C,gBACU;AAEV,QAAMgD,QAAQD,iBAAiBE,OAAO,CAACD,QAAO9B,UAAU8B,SAAQ9B,OAAO,CAAC,GAClE3B,SAAS,CAAC,GAAGwD,gBAAgB,EAAElE,IAAKqC,CAAWA,UAAAA,QAAQ8B,QAAS,GAAG;AAEzE,MAAIE,iBAAiB;AAErB,WAASlC,QAAQ,GAAGA,QAAQpC,OAAO6C,QAAQT,SAAS;AAClD,UAAMlC,QAAQF,OAAOoC,KAAK,GACpBE,QAAQ3B,OAAOyB,KAAK,GACpBjB,YAAYD,aAAahB,OAAOoC,OAAOlB,cAAc;AACvDkB,aAASnB,cACXmD,kBAAkBhC,QAAQnB,WAC1BR,OAAOyB,KAAK,IAAIjB;EAAAA;AAIhBmD,MAAAA,eAAeC,QAAQ,CAAC,MAAM;AAChC,aAASnC,QAAQ,GAAGA,QAAQpC,OAAO6C,QAAQT,SAAS;AAC5ClC,YAAAA,QAAQF,OAAOoC,KAAK;AAEtB,UAAA;QAACnE;QAAUD;MAAAA,IAAYkC;AAE3BlC,iBAAYA,WAAWoD,iBAAkB,KACrCnD,YAAY,SACdA,WAAYA,WAAWmD,iBAAkB;AAG3C,YAAMkB,QAAQf,KAAKC;;QAEjBvD,YAA8B;QAC9BsD,KAAKE,IAAIzD,UAAU2C,OAAOyB,KAAK,IAAIkC,cAAc;MACnD;AAEA,UAAIhC,UAAU3B,OAAOyB,KAAK,MACxBkC,kBAAkBhC,QAAQ3B,OAAOyB,KAAK,GACtCzB,OAAOyB,KAAK,IAAIE,OAEZf,KAAKgB,IAAI+B,cAAc,EAAEC,QAAQ,CAAC,MAAM;AAC1C;IAAA;AAMD5D,SAAAA;AACT;AAEO,SAAS6D,iBAAiBxE,QAAkC;AAC7DyE,MAAAA,qBAAqBzE,OAAO6C,QAC5B6B,sBAAsB;AAE1B,QAAMC,kBAAkB3E,OAAOC,IAAKC,CAC9BA,UAAAA,MAAMnC,eACR2G,uBAAuBxE,MAAMnC,aAC7B0G,sBAAsB,GACfvE,MAAMnC,eAER,IACR,GAEK6G,eAAeF,sBAAsBD;AAM3C,SALeE,gBAAgB1E,IAAKqC,CAAAA,UAC9BA,UAAU,OAAasC,eACpBtC,KACR;AAGH;ACvKA,IAAMuC,gBAAgBjH,GAAOC;;;;;;;AAA7B,IAQaiH,SAA+C,SAAAxK,IAAA;AAAAH,QAAAA,QAAAC,iCAAA,EAAA,GAAU;IAAAoC;EAAAlC,IAAAA,IACpEyK,eAAiBnI,sBAAA,IAAkC;AAACrC,MAAAA;AAAAJ,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAECnC,KAAAyK,oBAAAA,IAAAA,GAAS7K,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAA9D,QAAA,CAAAyJ,UAAAqB,WAAA,QAAgCC,wBAAqB3K,EAAS;AAAC,MAAAsC,IAAAG;AAAA7C,IAAAA,CAAAA,MAAAyJ,YAElC5G,KAAA2G,kBAAkBC,QAAQ,EAACuB,OAAA3B,OAAe,GAACrJ,EAAAA,CAAAA,IAAAyJ,UAAAzJ,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAAA0C,KAA3CG;AAA7B,QAAAgD,SAAenD;AAAsEQ,MAAAA;AAAAlD,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEtCW,KAAA,CAAA,GAAElD,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAAjD,QAAA,CAAAwG,QAAAyE,SAAA,QAA4BF,wBAAmB7H,EAAE,GACjD,CAAAgI,eAAAC,gBAAA,QAA0CJ,wBAAAA,IAA4B;AAAC1H,MAAAA;AAAArD,IAAAyJ,CAAAA,MAAAA,YAAAzJ,EAAAA,CAAAA,MAAA6F,UAAA7F,EAAA,CAAA,MAAAwG,UAEjCnD,KAAA;IAAAoG;IAAA5D;IAAAW;EAAAA,GAIrCxG,EAAAA,CAAAA,IAAAyJ,UAAAzJ,EAAAA,CAAAA,IAAA6F,QAAA7F,EAAAA,CAAAA,IAAAwG,QAAAxG,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA;AAJDoL,QAAAA,gBAAkB3I,sBAAoBY,EAIrC;AAACC,MAAAA;AAAAtD,IAAAkL,CAAAA,MAAAA,iBAAAlL,EAAAA,CAAAA,MAAA6F,UAAA7F,EAAA,EAAA,MAAAwG,UAGAlD,KAAApC,CAAA,QAAA;IAAAmK,UAEc1C,cAAc9C,QAAQ3E,IAAIsF,MAAM;IAAC8E,eAC5BJ,kBAAsB,OAAAlH,SAAe;EAAA,IAEvDhE,EAAAA,CAAAA,IAAAkL,eAAAlL,EAAAA,CAAAA,IAAA6F,QAAA7F,EAAAA,EAAAA,IAAAwG,QAAAxG,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AANH,QAAAoE,gBAAsBd;AAQrBC,MAAAA;AAAAvD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEmCgB,KAAAA,CAAAgI,MAAA9F,SAAA;AAClCqF,gBAAWU,CAAA,SAAA;AACLA,UAAAA,KAAIC,IAAKvK,IAAE;AAAUsK,eAAAA;AACzBE,YAAAA,OAAA,IAAAb,IAAqBW,IAAI;AACrBpF,aAAAA,KAAAA,IAAKlF,MAAIuE,IAAI,GACViG;IAAAA,CACR;EAAA,GACF1L,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA;AAPD,QAAAqE,kBAAwBd;AAOlBoI,MAAAA;AAAA3L,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KACgCoJ,KAAAC,CAAA,SAAA;AACpCd,gBAAWe,CAAA,WAAA;AAAA,UAAA,CACJL,OAAIC,IAAKvK,IAAE;AAAUsK,eAAAA;AAC1BM,YAAAA,SAAA,IAAAjB,IAAqBW,MAAI;AACrBO,aAAAA,OAAAA,OAAQ7K,IAAE,GACPwK;IAAAA,CACR;EAAA,GACF1L,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA;AAPD,QAAAsE,oBAA0BqH;AAOpBK,MAAAA;AAAAhM,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEmCyJ,KAAA;IAAA/E,gBAAAgF,OAAAC;IAAAC,YAAA;IAAAzE,YAAA;IAAAD,aAAA;IAAA2E,cAAA;IAAAC,aAAA;IAAAC,QAAA;IAAA9F,QAAA,CAAA;EAAA,GASxCxG,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AATDuM,QAAAA,cAAgB9J,sBAAyBuJ,EASxC;AAACQ,MAAAA;AAAAxM,IAAAA,EAAAA,MAAAyJ,YAGA+C,MAAAA,CAAAC,MAAA3K,UAAA;AACE,UAAA4K,cAAoBlD,kBAAkBC,QAAQ,GAC9CxB,QAAcyE,YAAWxE,UAAAyE,CAAmBA,OAAAA,GAAEzL,OAAQA,IAAE,GAExD0L,UAAgBnD,SAAQvD,IAAKhF,IAAE;AAAC,QAC5B,CAAC0L,WAAO,CAAKrD,UAAUqD,OAAO;AAAC;AACnCC,UAAAA,gBAAsBD,QAAOD,GAAA/J;AACxBiK,sBAELN,QAAO3J,UAAA;MAAAwJ,cACSnE;MAAKR,aACNiF,YAAWxC,OAAA,CAAA4C,KAAAC,MAAAC,MACL3D,QAAQsD,IAAE,KAAKK,IAAI/E,QAAQ0E,OAAKG,KAAG,IAEtD;MAACpF,YACWgF,YAAWxC,OAAA,CAAA+C,OAAAC,MAAAC,QACJL,UAAG,QAAazD,QAAQsD,IAAE,KAAKK,MAAI/E,QAAQ0E,OAAKG,OAAG,IAEtE;MAAC7F,gBAAAgF,OAAAC;MAAAI,QAEOxK,MAAKsL;MAAAjB,YACDvD,UAAU9G,OAAO+K,aAAa;MAACR,aAC9BQ,cAAa1D,sBAAuB;MAAC3C,QAC1C4E,UAASxI,QAAA4D;IAAAA,GAGnB2E,iBAAiBjK,IAAE;EAAC,GACrBlB,EAAAA,EAAAA,IAAAyJ,UAAAzJ,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA;AA5BH,QAAAqN,gBAAsBb;AA8BrBc,MAAAA;AAAAtN,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEgC+K,MAAAA,MAAA;AAC/BnC,qBAAAA,IAAqB;EAAA,GACtBnL,EAAAA,EAAAA,IAAAsN,OAAAA,MAAAtN,EAAA,EAAA;AAFD,QAAAuN,eAAqBD;AAEfE,MAAAA;AAAAxN,IAAAA,EAAAA,MAAAyJ,YAGJ+D,MAAAA,CAAAC,MAAAC,YAAA;AACOC,YAAAA,eAAAA,GACL7L,QAAK8L,gBAAiB;AAEtB,UAAA;MAAA3G;MAAAkF;MAAA1E;MAAAC;MAAA2E;IAAAA,IAA2EE,QAAO3J;AAG9E6E,QAAAA,eAAW,QAAYC,cAAkB;AAAA;AAI7CmG,UAAAA,YAAgBpE,SAAQvD,IAAKhF,IAAE;AAAC,QAC5B,CAAC0L,aAAO,CAAKrD,UAAUqD,SAAO;AAAC;AACnCkB,UAAAA,kBAAsBlB,UAAOD,GAAA/J;AAAW,QAAA,CACnCiK;AAAa;AAElB,UAAAkB,SAAenF,UAAU9G,SAAO+K,iBAAeV,YAAYE,WAAW;AAAC,QAEnE0B,WAAY;AAAA;AAIhB,UAAA;MAAAvH,QAAAqB;IAAAA,IAA6BuD,UAASxI,SACtCoL,OAAapD,SAAQhI,QAAAuG,sBAAAA,GACrB3B,QAAeuG,SAASC,KAAI7F,QAAa,KAEzCJ,aAAmBR,cACjBC,OACAP,gBACAQ,aACAC,YACA0D,UAASxI,SACT2J,QAAO3J,OACT;AAEsBiF,eAAUhB,KAAAA,CAAAoH,WAAAC,QAAwBD,cAAclG,WAAWiF,GAAC,CAAC,KAGjF/B,UAAUlD,UAAU;EAAC,GAExB/H,EAAAA,EAAAA,IAAAyJ,UAAAzJ,EAAAA,EAAAA,IAAAwN,OAAAA,MAAAxN,EAAA,EAAA;AAzCH,QAAAmO,OAAaX;AA2CZ,MAAAY,KAAAC;AAAArO,IAAAyJ,EAAAA,MAAAA,YAAAzJ,EAAAA,EAAAA,MAAA6F,UAAA7F,EAAA,EAAA,MAAAwG,UAGe4H,MAAAA,MAAA;AACLxL,cAAAA,QAAA6G,WAAoBA,UAC7B2B,UAASxI,QAAAiD,SAAkBA,QAC3BuF,UAASxI,QAAA4D,SAAkBA;EAAAA,GAC1B6H,MAAC5E,CAAAA,UAAU5D,QAAQW,MAAM,GAACxG,EAAAA,EAAAA,IAAAyJ,UAAAzJ,EAAAA,EAAAA,IAAA6F,QAAA7F,EAAAA,EAAAA,IAAAwG,QAAAxG,EAAAA,EAAAA,IAAAoO,KAAApO,EAAAA,EAAAA,IAAAqO,QAAAD,MAAApO,EAAA,EAAA,GAAAqO,MAAArO,EAAA,EAAA,QAJ7ByE,+BAAgB2J,KAIbC,GAA0B;AAE7B,QAAAC,UAAgBrI,iBAAiB;AAAC,MAAAsI,KAAAC;AAAAxO,IAAA6F,EAAAA,MAAAA,UAAA7F,EAAAA,EAAAA,MAAAsO,WAGlBC,MAAAA,MAAA;AAEd,UAAA;MAAA/H,QAAAiI;IAAAA,IAAiBrD,UAASxI;AAEtB4D,QAAAA,SAAMkC,WAAY7C,OAAM6C;AAAO;AAInCgG,UAAAA,eAAqBJ,QAAOpI,IAAKL,MAAM;AAAC,QAEpC6I,cAAY;AACd,YAAAC,wBAA8B5E,eAAelE,QAAQ6I,cAAYzC,OAAAC,UAAmB;AACpFjB,gBAAU0D,qBAAqB;AAAC;IAAA;AAIlCC,UAAAA,gBAAsBvE,iBAAiBxE,MAAM;AAC7CoF,cAAU2D,aAAa;EACtBJ,GAAAA,MAAA,CAACF,SAASzI,MAAM,GAAC7F,EAAAA,EAAAA,IAAA6F,QAAA7F,EAAAA,EAAAA,IAAAsO,SAAAtO,EAAAA,EAAAA,IAAAuO,KAAAvO,EAAAA,EAAAA,IAAAwO,QAAAD,MAAAvO,EAAA,EAAA,GAAAwO,MAAAxO,EAAA,EAAA,QAlBpByE,+BAAgB8J,KAkBbC,GAAiB;AAAC,MAAAK,KAAAC;AAAA9O,IAAA6F,EAAAA,MAAAA,UAAA7F,EAAAA,EAAAA,MAAAsO,WAAAtO,EAAA,EAAA,MAAAwG,UAGXqI,MAAAA,MAAA;AACHrI,WAAMkC,UACX4F,QAAOhI,aAAcT,QAAQW,MAAM;EAAA,GAClCsI,MAACR,CAAAA,SAASzI,QAAQW,MAAM,GAACxG,EAAAA,EAAAA,IAAA6F,QAAA7F,EAAAA,EAAAA,IAAAsO,SAAAtO,EAAAA,EAAAA,IAAAwG,QAAAxG,EAAAA,EAAAA,IAAA6O,KAAA7O,EAAAA,EAAAA,IAAA8O,QAAAD,MAAA7O,EAAA,EAAA,GAAA8O,MAAA9O,EAAA,EAAA,QAH5BO,yBAAUsO,KAGPC,GAAyB;AAAC,MAAAC,KAAAC;AAAAhP,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEbwM,MAAAA,MAAA;AACdE,UAAAA,iBAAAA,IAAAC,eAAA,MAAA;AAEE,YAAA;QAAArJ,QAAAU;QAAAC,QAAA2I;MAAAA,IAAqC/D,UAASxI,SAE9CwM,eAAmBrF,eAAelE,UAAQgC,cAAUoE,OAAAC,UAAmB;AAEjDrE,mBAAUhB,KAAAA,CAAAwI,aAAAC,QAAwBrB,gBAAclG,aAAWiF,GAAC,CAAC,KAEjF/B,UAAUlD,YAAU;IAAA,CAAC;AAIzBkH,WAAAA,eAAcM,QAAS3E,SAAQhI,OAAS,GAAC,MAAA;AAGvCqM,qBAAcO,WAAY;IAAC;EAAA,GAE5BR,MAAA,CAAA,GAAEhP,EAAAA,EAAAA,IAAA+O,KAAA/O,EAAAA,EAAAA,IAAAgP,QAAAD,MAAA/O,EAAA,EAAA,GAAAgP,MAAAhP,EAAA,EAAA,QAlBLyE,+BAAgBsK,KAkBbC,GAAE;AAAC,MAAAS,KAAAC;AAAA1P,IAAA,EAAA,MAAAkL,iBAAAlL,EAAAmO,EAAAA,MAAAA,QAAAnO,EAAAoE,EAAAA,MAAAA,iBAAApE,EAAAA,EAAAA,MAAAqN,iBAGGqC,MAAA;IAAAxE;IAAAiD;IAAA/J;IAAAC;IAAAgJ;IAAAE;IAAAjJ;EAAA,GAQNtE,EAAAA,EAAAA,IAAAkL,eAAAlL,EAAAA,EAAAA,IAAAmO,MAAAnO,EAAAA,EAAAA,IAAAoE,eAAApE,EAAAA,EAAAA,IAAAqN,eAAArN,EAAAA,EAAAA,IAAA0P,OAAAA,MAAA1P,EAAA,EAAA,GAAAyP,MARMC;AADT,QAAAvO,UAAgBsO;AAmBfE,MAAAA;AAAA3P,IAAAA,EAAAA,MAAAqC,YAIGsN,UAAC,wBAAA,eAAA,EAAmB/E,KAAAA,UAAkB,SAAA,CAAE,GAAgB5K,EAAAA,EAAAA,IAAAqC,UAAArC,EAAAA,EAAAA,IAAA2P,OAAAA,MAAA3P,EAAA,EAAA;AAAA4P,MAAAA;AAAA,SAAA5P,EAAAmB,EAAAA,MAAAA,WAAAnB,EAAAA,EAAAA,MAAA2P,OAD1DC,UAAA,wBAAA,0BAAA,UAAA,EAA2CzO,OAAAA,SACzCwO,UAAAA,IACF,CAAA,GAAqC3P,EAAAA,EAAAA,IAAAmB,SAAAnB,EAAAA,EAAAA,IAAA2P,KAAA3P,EAAAA,EAAAA,IAAA4P,OAAAA,MAAA5P,EAAA,EAAA,GAFrC4P;AAEqC;AC3PlC,SAAAC,UAAA9P,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA;AAAAoC,MAAAA,UAAAyN,SAAAC,kBAAAC,SAAAC;AAAAjQ,IAAAA,CAAAA,MAAAD,SAQL;IAAAsC;IAAAyN;IAAAE;IAAAD;IAAA,GAAAE;EAAAA,IAAqElQ,OAAKC,EAAAA,CAAAA,IAAAD,OAAAC,EAAAA,CAAAA,IAAAqC,UAAArC,EAAAA,CAAAA,IAAA8P,SAAA9P,EAAAA,CAAAA,IAAA+P,kBAAA/P,EAAAA,CAAAA,IAAAgQ,SAAAhQ,EAAAA,CAAAA,IAAAiQ,cAAA5N,WAAArC,EAAA,CAAA,GAAA8P,UAAA9P,EAAA,CAAA,GAAA+P,mBAAA/P,EAAA,CAAA,GAAAgQ,UAAAhQ,EAAA,CAAA,GAAAiQ,YAAAjQ,EAAA,CAAA;AAE1E,QAAA;IAAAkQ;EAAAA,IAAYC,eAAAC,2BAA0C;AAACjQ,MAAAA;AAAAH,IAAAA,CAAAA,MAAAkQ,KAGR/P,KAAA+P,EAAE,8BAA8B,GAAClQ,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,IAAAgQ,CAAAA,MAAAA,WAAAhQ,EAAAA,CAAAA,MAAAG,MAA9EC,SAAC,wBAAA,QAAA,EAAY,MAAA,SAAiB4P,SAAAA,SAAe,MAAA7P,GAAqC,CAAA,GAAAH,EAAAA,CAAAA,IAAAgQ,SAAAhQ,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,EAAAA,IAAAI,MAAAA,KAAAJ,EAAA,EAAA;AADpF,QAAAqQ,cACEjQ;AACDsC,MAAAA;AAAA1C,IAAAA,EAAAA,MAAAkQ,KAMSxN,KAAAwN,EAAE,iCAAiC,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,EAAA;AAAA6C,MAAAA;AAAA7C,IAAA+P,EAAAA,MAAAA,oBAAA/P,EAAAA,EAAAA,MAAA0C,MAJ5CG,SAAAA,wBAAC,QACM,EAAA,MAAA,SACA,MAAA,YACIkN,SAAAA,kBACH,MAAArN,GACN,CAAA,GAAA1C,EAAAA,EAAAA,IAAA+P,kBAAA/P,EAAAA,EAAAA,IAAA0C,IAAA1C,EAAAA,EAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,EAAA;AANJ,QAAAsQ,uBACEzN;AAMDK,MAAAA;AAAAlD,IAAAA,EAAAA,MAAAkQ,KASchN,KAAAgN,EAAE,kBAAkB,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,EAAA;AAAAqD,MAAAA;AAAArD,IAAAA,EAAAA,MAAAkD,MADxBG,SAAC,wBAAA,MAAA,EAAW,MAAA,GAAU,QAAA,YACnBH,UAAAA,GAAAA,CACH,GAAOlD,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAAAtD,IAAAA,EAAAA,MAAA8P,WACPxM,SAAC,wBAAA,MAAA,EAAK,OAAA,MAAY,MAAA,GACfwM,UAAAA,QAAAA,CACH,GAAO9P,EAAAA,EAAAA,IAAA8P,SAAA9P,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAAAuD,MAAAA;AAAAvD,IAAAqD,EAAAA,MAAAA,MAAArD,EAAAA,EAAAA,MAAAsD,MANTC,SAAC,yBAAA,OAAa,EAAA,OAAC,GACbF,UAAAA;IAAAA;IAGAC;EAAAA,EAGF,CAAA,GAAQtD,EAAAA,EAAAA,IAAAqD,IAAArD,EAAAA,EAAAA,IAAAsD,IAAAtD,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA;AAAA2L,MAAAA;AAAA3L,IAAA,EAAA,MAAAsQ,wBAAAtQ,EAAA+P,EAAAA,MAAAA,oBAAA/P,EAAAgQ,EAAAA,MAAAA,WAAAhQ,EAAAA,EAAAA,MAAAqQ,eAIP1E,KAAAqE,WAAWD,uBACV,yBAAC,QAAc,EAAA,OAAA,GACF,UAAA;IAAA;IAAA;IAEb,CAAA,IACEC,cACD,wBAAA,KAAA,EAAA,UAAA,YAAA,CAAiB,IAChBD,uBACD,wBAAA,KAAA,EAAKO,UAAAA,qBAAAA,CAAqB,IACrB,MAAAtQ,EAAAA,EAAAA,IAAAsQ,sBAAAtQ,EAAAA,EAAAA,IAAA+P,kBAAA/P,EAAAA,EAAAA,IAAAgQ,SAAAhQ,EAAAA,EAAAA,IAAAqQ,aAAArQ,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA;AAAAgM,MAAAA;AAAAhM,IAAAqC,EAAAA,MAAAA,YAAArC,EAAAA,EAAAA,MAAAuD,MAAAvD,EAAA,EAAA,MAAA2L,MAvBdK,SAAAA,wBAAC,MAAW,EAAA,OAAA,UAAgB,QAAA,QAAe,SAAA,UACzC,cAAA,wBAACuE,WAAAA,EAAmB,SAAC,GAAS,QAAA,UAAgB,OAAA,GAC5C,cAAC,yBAAA,OAAA,EAAa,OAAA,GACZhN,UAAAA;IAAAA;IAAAA;IAWCoI;EAAAA,EAAAA,CAUH,EAAA,CACF,EACF,CAAA,GAAO3L,EAAAA,EAAAA,IAAAqC,UAAArC,EAAAA,EAAAA,IAAAuD,IAAAvD,EAAAA,EAAAA,IAAA2L,IAAA3L,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AAAAwM,MAAAA;AAAA,SAAAxM,EAAAiQ,EAAAA,MAAAA,aAAAjQ,EAAAA,EAAAA,MAAAgM,MA3BTQ,UAAC,wBAAA,MAAA,EAAY,QAAA,QAAM,GAAKyD,WACtBjE,UAAAA,GAAAA,CA2BF,GAAOhM,EAAAA,EAAAA,IAAAiQ,WAAAjQ,EAAAA,EAAAA,IAAAgM,IAAAhM,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA,GA5BPwM;AA4BO;AC3CX,SAASgE,kBAAkBC,SAAkC,CAAA,GAAY;AACvE,QAAMC,QAAQC,OAAOC,QAAQH,MAAM,EAChC3K,IAAI,CAAC,CAAChD,KAAKC,KAAK,MAAM,GAAGD,GAAG,IAAIC,KAAK,EAAE,EACvCiD,KAAK,GAAG;AAEX,SAAO0K,MAAMhI,SAAS,IAAIgI,KAAK,KAAK;AACtC;AAEA,SAASG,6BAA6BC,YAAgD;AACpF,QAAMC,UAAU,CACd,WACA,WACA,eACA,WACA,OACA,SACA,YACA,MAAM,GAGFC,iBAAiBL,OAAOC,QAAQE,UAAU,EAC7C9F,OAAO,CAAC,CAAClI,GAAG,MAAMiO,QAAQE,SAASnO,GAAG,CAAC,EACvCoH,OAAO,CAACgH,KAAK,CAACpO,KAAKC,KAAK,MACnBA,SAASiB,OAAkBkN,MACxB;IAAC,GAAGA;IAAK,CAACpO,GAAG,GAAGC;EAAK,GAC3B,CAAA,CAAE;AAEP,SAAOyN,kBAAkBQ,cAAc;AACzC;AAEA,IAAMG,eAAWC,0BAAW,SAAArR,OAAAsR,KAAA;AAAArR,QAAAA,QAAAC,iCAAA,EAAA;AAAA,MAAAgQ,WAAAqB;AAAAtR,IAAAA,CAAAA,MAAAD,SAI1B;IAAAuR;IAAA,GAAArB;EAAAA,IAAqClQ,OAAKC,EAAAA,CAAAA,IAAAD,OAAAC,EAAAA,CAAAA,IAAAiQ,WAAAjQ,EAAAA,CAAAA,IAAAsR,iBAAArB,YAAAjQ,EAAA,CAAA,GAAAsR,eAAAtR,EAAA,CAAA;AAAAG,MAAAA;AAAAH,IAAAA,CAAAA,MAAAsR,gBAOrBnR,KAAAwQ,OAAAC,QAAeU,YAAY,GAACtR,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,IAAAA,CAAAA,MAAAG,MAFtCC,KAAA;IAAAoE,MAAAR;IAAAuN,eAEUpR;EAA4B,GAC5CH,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAA0C,MAAAA;AAAA,SAAA1C,EAAAqR,CAAAA,MAAAA,OAAArR,EAAAA,CAAAA,MAAAiQ,aAAAjQ,EAAA,CAAA,MAAAI,MANHsC,SAAC,wBAAA,WAAA,EACKuN,GAAAA,WACCoB,KACE,OAAAjR,IAIA4D,OAAAA,OAAAA,CACP,GAAAhE,EAAAA,CAAAA,IAAAqR,KAAArR,EAAAA,CAAAA,IAAAiQ,WAAAjQ,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,EAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,EAAA,GARF0C;AAQE,CAEL;AAhBD,IAkBM8O,yBAAqBJ,0BAAW,SAAArR,OAAAsR,KAAA;AAAArR,QAAAA,QAAAC,iCAAA,EAAA;AAAAwR,MAAAA,YAAAC,cAAAzB,WAAAqB;AAAAtR,MAAAA,EAAAA,CAAAA,MAAAD,OAAA;AAIpC,UAAA;MAAA0R,YAAAtR;MAAAuR,cAAAtR;MAAAuR;MAAAC;MAAAN,cAAA5O;MAAA,GAAAG;IAAAA,IASI9C;AATJI,iBAAAA,KAAAuR,eAAAtR,KAAAkR,eAAA5O,KAAAuN,YAAApN,IASS7C,EAAAA,CAAAA,IAAAD,OAAAC,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0R,cAAA1R,EAAAA,CAAAA,IAAAiQ,WAAAjQ,EAAAA,CAAAA,IAAAsR;EAAA;AAAAG,iBAAAzR,EAAA,CAAA,GAAA0R,eAAA1R,EAAA,CAAA,GAAAiQ,YAAAjQ,EAAA,CAAA,GAAAsR,eAAAtR,EAAA,CAAA;AAAAG,MAAAA;AAAAH,IAAAA,CAAAA,MAAAsR,gBASYnR,KAAAwQ,OAAAC,QAAeU,YAAY,GAACtR,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,IAAAyR,CAAAA,MAAAA,cAAAzR,EAAAA,CAAAA,MAAA0R,gBAAA1R,EAAA,CAAA,MAAAG,MAHtCC,KAAA;IAAAc,IACDuQ;IAAUjN,MACRkN;IAAYH,eACHpR;EAAAA,GAChBH,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0R,cAAA1R,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,EAAAA,IAAAI,MAAAA,KAAAJ,EAAA,EAAA;AAAA0C,MAAAA;AAAA,SAAA1C,EAAAqR,EAAAA,MAAAA,OAAArR,EAAAA,EAAAA,MAAAiQ,aAAAjQ,EAAA,EAAA,MAAAI,MAPHsC,SAAC,wBAAA,WAAA,EACKuN,GAAAA,WACCoB,KACE,OAAAjR,IAKA4D,OAAAA,OAAAA,CACP,GAAAhE,EAAAA,EAAAA,IAAAqR,KAAArR,EAAAA,EAAAA,IAAAiQ,WAAAjQ,EAAAA,EAAAA,IAAAI,IAAAJ,EAAAA,EAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,EAAA,GATF0C;AASE,CAEL;AAEM,SAAAmP,+BAAA9R,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAQL;IAAAoC;IAAAyP;IAAAC;IAAAT;IAAAU;EAAAA,IAA2EjS,OAE3E;IAAA4C,OAAAsP;IAAAC;EAAAA,IAAmDC,UAAU;AAAChS,MAAAA;AAAAH,IAAA,CAAA,MAAAiS,YAAAV,iBAEzBpR,KAAAwQ,OAAAyB,YAAmBH,YAAWV,iBAAA,CAAoB,CAAA,GAACvR,EAAA,CAAA,IAAAiS,YAAAV,eAAAvR,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAxFqS,QAAAA,qBAA2BC,UAAUnS,EAAmD;AAACC,MAAAA;AAAAJ,IAAAkS,CAAAA,MAAAA,wBAAAlS,EAAAA,CAAAA,MAAAqS,sBAAArS,EAAA,CAAA,MAAAiS,eAGvF7R,KAAA0Q,CAAA,eAAA;AACE,UAAAyB,OAAaL,qBAAqBD,WAAW,GAC7CO,KAAW3B,6BAAA;MAAA,GACNwB;MAAkB,GAClBvB;IAAAA,CACJ;AACM,WAAA,GAAGyB,IAAI,GAAGC,EAAE;EAAA,GACpBxS,EAAAA,CAAAA,IAAAkS,sBAAAlS,EAAAA,CAAAA,IAAAqS,oBAAArS,EAAAA,CAAAA,IAAAiS,aAAAjS,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AARH,QAAAyS,uBAA6ErS;AAU5E,MAAAsC,IAAAG;AAAA7C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAOYM,KAAA,CAAA,GAAE7C,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAEH,QAAAkD,KAAA6O;AAAsB1O,MAAAA;AAAArD,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGZc,KAAA,CAAA,GAAErD,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA;AAAAsD,MAAAA;AAAAtD,IAAAgS,CAAAA,MAAAA,QAAAhS,EAAAA,CAAAA,MAAAsR,gBACThO,KAAAoP,CAAA,mBAAA;AACT,UAAA;MAAAC;MAAA,GAAA1C;IAAgCyC,IAAAA,gBAChCrB,MAAYW,6BAAIY,KAAAC,CAAAA,MAAcA,EAACC,QAASH,WAAWI,eAAeF,EAACC,GAAI,MAAMH;AAAQ,WACjFtB,UAEA,wBAAC,WAAS,EAAA,GACJpB,WACG,OAAA;MAAA/O,IACDyR;MAAOnO,MACL6M,IAAG2B;MAAAzB,eACMZ,OAAAC,QAAeU,YAAY;IAE5C,EAAA,CAAA,QAIC,wBAAA,OAAA,EAASrB,GAAAA,UAAa,CAAA;EAC9BjQ,GAAAA,EAAAA,CAAAA,IAAAgS,MAAAhS,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAAA,MAAAuD,IAAAoI;AAAA3L,IAAAA,EAAAA,MAAAsR,gBACS/N,KAAA0P,CAAAA,sBAAoB,wBAAA,UAAA,EAAQ,GAAKA,eAA6B3B,aAAAA,CAAgB,GACpE3F,KAAAuH,CAAAA,yBACjB,wBAAA,oBAAA,EAAkB,GAAKR,kBAA8BpB,aAAAA,CAAgB,GACvEtR,EAAAA,EAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAAuD,IAAAvD,EAAAA,EAAAA,IAAA2L,OAAApI,KAAAvD,EAAA,EAAA,GAAA2L,KAAA3L,EAAA,EAAA;AAAAgM,MAAAA;AAAAhM,IAAAA,EAAAA,MAAA8R,qBAsBU9F,KAAAmH,CAAA,iBAAA;AAGQ,sBAAA;MAAA,GACZrC;MAAUsC,SACJtC,aAAUsC,WAAApP;IAAAA,CACW;EAAC,GAClChE,EAAAA,EAAAA,IAAA8R,mBAAA9R,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AAAAwM,MAAAA;AAAAxM,IAAAA,EAAAA,MAAAyS,wBAAAzS,EAAAkD,EAAAA,MAAAA,MAAAlD,EAAAsD,EAAAA,MAAAA,MAAAtD,EAAA,EAAA,MAAAuD,MAAAvD,EAAAA,EAAAA,MAAA2L,MAAA3L,EAAA,EAAA,MAAAgM,MA5DIQ,MAAA;IAAAvE,OAAA;IAAAoL,YAAA;IAAAC,cAAA;IAAAC,SAII1Q;IAAE4N,QAEHvN;IAAsBsQ,kBAAA;IAAAC,aAAA;IAAAC,kBAGZrQ;IAAEsQ,WACTrQ;IAiBV6N,UACS5N;IAA8EiO,oBACpE7F;IAEnBiI,mBAAAtT;IAAAuT,sBAAA1N;IAAA2N,qBAAAzN;IAAA0N,gBAAAC;IAAAC,cAAAC;IAAAC,kBAAAC;IAAAC,SAAAC;IAAAC,WAsBUvI;IAOVwI,YAAAC;IAAAC,gBAAAC;IAAAlC;EAQFzS,GAAAA,EAAAA,EAAAA,IAAAyS,sBAAAzS,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAsD,IAAAtD,EAAAA,EAAAA,IAAAuD,IAAAvD,EAAAA,EAAAA,IAAA2L,IAAA3L,EAAAA,EAAAA,IAAAgM,IAAAhM,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA,GApED0C,KAAO8J;AADT,QAAArL,UAAwCuB;AAsE0C4K,MAAAA;AAAA,SAAAtN,EAAAqC,EAAAA,MAAAA,YAAArC,EAAAA,EAAAA,MAAAmB,WAE3EmM,UAAA,wBAAA,kBAAA,UAAA,EAAmCnM,OAAAA,SAAUkB,SAAAA,CAAS,GAA6BrC,EAAAA,EAAAA,IAAAqC,UAAArC,EAAAA,EAAAA,IAAAmB,SAAAnB,EAAAA,EAAAA,IAAAsN,OAAAA,MAAAtN,EAAA,EAAA,GAAnFsN;AAAmF;AAlGrF,SAAAqH,OAAAC,YAAAC,cAAAC,WAAA;AA4FCC,UAAAC,KAAa,kBAAkBJ,YAAYC,cAAcI,SAAO;AAAC;AA5FlE,SAAAR,OAAAlB,SAAA;AAyFCyB,UAAAA,KAAa,cAAczB,OAAO;AAAC;AAzFpC,SAAAe,SAAAY,QAAA;AA8ECF,UAAAA,KAAa,WAAWE,MAAM;AAAC;AA9EhC,SAAAd,SAAAe,QAAA;AA2ECH,UAAAA,KAAa,oBAAoBI,MAAI;AAAC;AA3EvC,SAAAlB,WAAA;AAwECa,UAAAC,KAAa,cAAc;AAAC;AAxE7B,SAAAhB,SAAAoB,MAAA;AAqECJ,UAAAA,KAAa,kBAAkBI,IAAI;AAAC;AArErC,SAAA/O,SAAA4O,SAAA;AAkECD,UAAAA,KAAa,uBAAuBC,OAAO;AAAC;AAlE7C,SAAA9O,WAAA;AA+DC4O,UAAAC,KAAa,sBAAsB;AAAC;AA/DrC,SAAA1U,UAAA;AAAA6D,QAAAA,IAAAA,MA4DiB,mCAAmC;AAAA;ACrI3D,IAAMkR,aAAa5R,GAAO6R,UAAU;;;AAApC,IAIM9R,OAAOC,GAAO8R,IAAI;;;;;;AAJxB,IAWMC,gBAAc/R,GAAOgS,IAAI;;;AAIxB,SAAAC,iBAAA3V,OAAA;;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAML;IAAA0V;IAAA7D;IAAAR;IAAAU;EAAAA,IAAmEjS,OAEnE;IAAAmQ;EAAAA,IAAYC,eAAAC,2BAA0C,GACtD;IAAAwF;EAAAA,IAAkBC,oBAAoB;AAAC,MAAA1V,IAAAC;AAAAJ,MAAAA,EAAA2V,CAAAA,QAAAA,4DAAAG,aAAAH,mBAAA7C,QAAA9S,EAAA,CAAA,MAAAgS,MAAA;AAAAtP,QAAAA;AAAA1C,MAAA2V,CAAAA,QAAAA,4DAAAG,aAAAH,mBAAA7C,QAKzBpQ,MAAAmQ,CAAOE,MAAAA;;AAAAA,4BAAeF,EAACC,GAAI,QAAM6C,MAAAA,uDAAiBG,aAAjBH,gBAAAA,IAAiB7C;OAAe9S,EAAA2V,CAAAA,KAAAA,4DAAAG,aAAAH,mBAAA7C,KAAA9S,EAAAA,CAAAA,IAAA0C,OAAAA,MAAA1C,EAAA,CAAA,GAD3EI,KAAA4R,KAAIhH,OACMtI,GAAiE,EAACoD,IAAAxF,OACzC,GAACN,EAAA2V,CAAAA,KAAAA,4DAAAG,aAAAH,mBAAA7C,KAAA9S,EAAAA,CAAAA,IAAAgS,MAAAhS,EAAAA,CAAAA,IAAAI;EAAA;AAAAA,SAAAJ,EAAA,CAAA;AAFpCI,OAAAA;AAFJ,QAAA2V,MAAY5V;AAMX,MAAAuC,IAAAG;AAAA7C,IAAAA,CAAAA,MAAA+V,OAKYlT,KAAA;IAAAmI,QACC;IAAayF,QAAA;MAAAsF;IAAAA;EAAA,GAGtB/V,EAAAA,CAAAA,IAAA+V,KAAA/V,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAAAkD,MAAAA;AAAAlD,IAAAA,CAAAA,MAAAkQ,KAEMhN,KAAAgN,EAAE,wCAAwC,GAAClQ,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAAAqD,MAAAA;AAAArD,IAAA6C,CAAAA,MAAAA,MAAA7C,EAAAA,EAAAA,MAAAkD,MAR7CG,KAAA;IAAAnC,IACD;IAAO+T,SACFpS;IAIRmT,gBACe;IAAEC,OACX/S;IAA2CsB,MAC5C;EAAA,GACPxE,EAAAA,CAAAA,IAAA6C,IAAA7C,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA,GAAA0C,KAVMW;AADT,QAAA+R,OAAwD1S,IAexD,CAAAwT,aAAAC,cAAA,QAAsCpL,wBAAAA,IAGxB;AAACzH,MAAAA;AAAAtD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEiBe,KAAAA,MAAM6S,eAAAA,IAAmB,GAACnW,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAA1D,QAAAoW,cAAoB9S,IAEpB,CAAAyO,eAAA,QAA0BhH,wBAAA5E,QAAmB;AAAC5C,MAAAA;AAAAvD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGpCgB,KAAAA,MAAM4S,eAAAA,IAAmB,GAACnW,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA;AAAA2L,MAAAA;AAAA3L,MAAAA,EAAAA,EAAAA,MAAAgS,QAAErG,KAAAA,CAACqG,IAAI,GAAChS,EAAAA,EAAAA,IAAAgS,MAAAhS,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA,OAA5CO,yBAAUgD,IAA4BoI,EAAM,GAExCuK,aAAW;AAAAlK,QAAAA;AAAAhM,MAAAA,EAAAA,MAAAkQ,KAEkBlE,MAAAkE,EAAE,+BAA+B,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAgM,OAAAA,MAAAhM,EAAA,EAAA;AAAAwM,QAAAA;AAAAxM,MAAA4V,EAAAA,MAAAA,WAAA5V,EAAAA,EAAAA,MAAAkW,eAAAlW,EAAA,EAAA,MAAAkQ,KAC5D1D,OAAAoJ,eAEC,wBAAC,MAAc,EAAA,UAAA,QAAgB,SAAA,GAAW,QAAC,GAAO,MAAA,YAChD,cAAA,yBAAC,OAAa,EAAA,OAAA,GACZ,UAAA;UAAA,wBAAC,OAAA,EAAM,OAAA,MAAY,MAAC,GACjB1F,UAAAA,EAAE,0BAA0B,EAAA,CAC/B;UAAA,wBACCsF,eAAkB,EAAA,MAAC,GAAGU,UAAAA,YAAW7U,MAAAyO,QAAe,CAAA;IAAA,EAAA,CACnD,EAAA,CACF,GACD9P,EAAAA,EAAAA,IAAA4V,SAAA5V,EAAAA,EAAAA,IAAAkW,aAAAlW,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAwM,QAAAA,OAAAxM,EAAA,EAAA;AAAAsN,QAAAA;AAAA,WAAAtN,EAAAwM,EAAAA,MAAAA,QAAAxM,EAAAA,EAAAA,MAAAgM,OAXHsB,UAAAA,wBAAC,WAAgB,EAAA,MAAC,GAAW,SAAAtB,KAA6CoK,SAAAA,aACvE5J,UAAAA,KAAAA,CAWH,GAAYxM,EAAAA,EAAAA,IAAAwM,MAAAxM,EAAAA,EAAAA,IAAAgM,KAAAhM,EAAAA,EAAAA,IAAAsN,OAAAA,MAAAtN,EAAA,EAAA,GAZZsN;EAAAA;AAYYtB,MAAAA;AAAAhM,IAAAA,EAAAA,MAAAoV,QAcNpJ,SAAC,wBAAA,MAAA,EAAe,WAAA,UAAe,MAAC,GAC9B,cAAC,wBAAAqK,eAAA,EACQ,OAAC,GACD,QAAA,SACDjB,MAEE,SAAA,QAAA,CAEZ,EAAA,CAAA,GAAOpV,EAAAA,EAAAA,IAAAoV,MAAApV,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AAAAwM,MAAAA;AAAA,SAAAxM,EAAA8R,EAAAA,MAAAA,qBAAA9R,EAAA,EAAA,MAAAgS,QAAAhS,EAAAsR,EAAAA,MAAAA,gBAAAtR,EAAA,EAAA,MAAA+R,mBAAA/R,EAAAA,EAAAA,MAAAgM,MAjBfQ,UAAAA,wBAAC,eAAuB2J,EAAAA,SAAa,gBACnC,cAAA,wBAAC,YACC,EAAA,cAAA,wBAAC,uBACC,EAAA,cAAA,wBAAC,gCAAA,EACoBrE,mBACFC,iBACHT,cACRU,MAENhG,UASF,GAAA,CAAA,EAAA,CACF,EACF,CAAA,EACF,CAAA,GAAgBhM,EAAAA,EAAAA,IAAA8R,mBAAA9R,EAAAA,EAAAA,IAAAgS,MAAAhS,EAAAA,EAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAA+R,iBAAA/R,EAAAA,EAAAA,IAAAgM,IAAAhM,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA,GArBhBwM;AAqBgB;AAtFb,SAAArG,WAAA;AAAA,SAAA,CAAA;AAAA;AAAA,SAAA7F,QAAAgW,KAAA;AAeavD,SAAAA,eAAeF,IAACC,GAAI;AAAC;ACjCzC,IAAM0C,cAAc/R,GAAOgS,IAAI;;;AAIxB,SAAAc,cAAAxW,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAQL;IAAAwR;IAAAC;IAAA8E;IAAA1E;IAAAR;IAAAS;EAAAA,IACEhS,OACF;IAAA6R;IAAA6E;EAAAA,IAAmC1E,iBAEnC;IAAA7B;EAAAA,IAAYC,eAAAC,2BAA0C,GACtD;IAAAwF;EAAAA,IAAkBC,oBAAoB;AAAC,MAAA1V,IAAAC;AAAAJ,IAAAA,CAAAA,MAAAyW,kBASbrW,KAAAsW,iBAAiBD,cAAc,GAACzW,EAAAA,CAAAA,IAAAyW,gBAAAzW,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAA0C,MAAAA;AAAA1C,IAAA,CAAA,MAAAyR,cAAAzR,EAAA0R,CAAAA,MAAAA,gBAAA1R,EAAAI,CAAAA,MAAAA,MAAAJ,EAAAA,CAAAA,MAAA4R,YAJ7ClP,KAAA;IAAAxB,IACHuQ;IAAUjN,MACRkN;IAAYE;IAAA+E,oBAEEvW;EAAAA,GACrBJ,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0R,cAAA1R,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA4R,UAAA5R,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAA6C,MAAAA;AAAA7C,IAAAyR,CAAAA,MAAAA,cAAAzR,EAAAA,CAAAA,MAAA0C,MAPIG,KAAA;IAAA3B,IACDuQ;IAAUwD,SACLvS;IAKRuT,OACM;IAAEzR,MACH;EAAA,GACPxE,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0C,IAAA1C,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAAAG,KAVM0C;AADT,QAAA+T,mBAA2CzW,IAe3C,CAAA+V,aAAAC,cAAA,QAAsCpL,wBAAAA,IAGxB;AAAC7H,MAAAA;AAAAlD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEiBW,KAAAA,MAAMiT,eAAAA,IAAmB,GAACnW,EAAAA,EAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,EAAA;AAA1D,QAAAoW,cAAoBlT;AAA2CG,MAAAA;AAAArD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGrDc,KAAAA,MAAA;AACR8S,mBAAAA,IAAmB;EAAA,GACpBnW,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAA8C,MAA9CtD,EAAAyR,EAAAA,MAAAA,cAAAzR,EAAAA,EAAAA,MAAA0R,gBAAA1R,EAAA,EAAA,MAAA+R,mBAAEzO,KAACmO,CAAAA,YAAYC,cAAcK,eAAe,GAAC/R,EAAAA,EAAAA,IAAAyR,YAAAzR,EAAAA,EAAAA,IAAA0R,cAAA1R,EAAAA,EAAAA,IAAA+R,iBAAA/R,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA,OAF9CO,yBAAU8C,IAEPC,EAA2C,GAE1C4S,aAAW;AAAA3S,QAAAA;AAAAvD,MAAAA,EAAAA,MAAAkQ,KAEkB3M,MAAA2M,EAAE,0BAA0B,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAuD,OAAAA,MAAAvD,EAAA,EAAA;AAAA2L,QAAAA;AAAA3L,MAAA4V,EAAAA,MAAAA,WAAA5V,EAAAA,EAAAA,MAAAkW,eAAAlW,EAAA,EAAA,MAAAkQ,KACvDvE,MAAAiK,eAEC,wBAAC,MAAc,EAAA,UAAA,QAAgB,SAAA,GAAW,QAAC,GAAO,MAAA,YAChD,cAAA,yBAAC,OAAa,EAAA,OAAA,GACZ,UAAA;UAAA,wBAAC,OAAA,EAAM,OAAA,MAAY,MAAC,GACjB1F,UAAAA,EAAE,0BAA0B,EAAA,CAC/B;UAAA,wBACC,aAAkB,EAAA,MAAC,GAAGgG,UAAAA,YAAW7U,MAAAyO,QAAe,CAAA;IAAA,EAAA,CACnD,EAAA,CACF,GACD9P,EAAAA,EAAAA,IAAA4V,SAAA5V,EAAAA,EAAAA,IAAAkW,aAAAlW,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA2L,OAAAA,MAAA3L,EAAA,EAAA;AAAAgM,QAAAA;AAAA,WAAAhM,EAAAuD,EAAAA,MAAAA,OAAAvD,EAAAA,EAAAA,MAAA2L,OAXHK,UAAAA,wBAAC,WAAgB,EAAA,MAAC,GAAW,SAAAzI,KAAwC6S,SAAAA,aAClEzK,UAAAA,IAAAA,CAWH,GAAY3L,EAAAA,EAAAA,IAAAuD,KAAAvD,EAAAA,EAAAA,IAAA2L,KAAA3L,EAAAA,EAAAA,IAAAgM,OAAAA,MAAAhM,EAAA,EAAA,GAZZgM;EAAAA;AAYYzI,MAAAA;AAAAvD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAMOgB,KAAA;IAAAsT,QAAS;EAAA,GAAO7W,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA;AAAA2L,MAAAA;AAAA3L,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAMXoJ,SAAC,wBAAA,qBAAA,CAAsB,CAAA,GAAA3L,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA;AAAAgM,MAAAA;AAAAhM,IAAAwW,EAAAA,MAAAA,eAAAxW,EAAAA,EAAAA,MAAA4W,oBAA3C5K,SAAC,wBAAA,wBAAA,EAAmB,UAAAL,IAClB,cAAA,wBAACmL,cAAAA,EAES,SAAA,YACD,OAAC,GACD,QAAA,YACDF,MAAe,kBACRJ,YAEjB,CAAA,EAAA,CAAA,GAAWxW,EAAAA,EAAAA,IAAAwW,aAAAxW,EAAAA,EAAAA,IAAA4W,kBAAA5W,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AAAAwM,MAAAA;AAAAxM,SAAAA,EAAA,EAAA,MAAA8R,qBAAA9R,EAAAsR,EAAAA,MAAAA,gBAAAtR,EAAA+R,EAAAA,MAAAA,mBAAA/R,EAAAA,EAAAA,MAAAgM,MAhBjBQ,UAAA,wBAAC,eAAuB2J,EAAAA,SAAa,gBACnC,cAAA,wBAAC,YAAkB,EAAA,OAAA5S,IACjB,cAAA,wBAAC,gCACe+N,EAAAA,cACKQ,mBACFC,iBAEjB/F,UAAAA,GAUF,CAAA,EACF,CAAA,EACF,CAAA,GAAgBhM,EAAAA,EAAAA,IAAA8R,mBAAA9R,EAAAA,EAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAA+R,iBAAA/R,EAAAA,EAAAA,IAAAgM,IAAAhM,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA,GAnBhBwM;AAmBgB;ACjGb,SAAAuK,cAAAhX,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GAQL;IAAAwR;IAAAC;IAAA8E;IAAA1E;IAAAR;IAAAS;EAAAA,IACEhS;AAAKI,MAAAA;AAAA,SAAAH,EAAAA,CAAAA,MAAAyR,cAAAzR,EAAA0R,CAAAA,MAAAA,gBAAA1R,EAAAwW,CAAAA,MAAAA,eAAAxW,EAAA,CAAA,MAAA8R,qBAAA9R,EAAAA,CAAAA,MAAAsR,gBAAAtR,EAAA,CAAA,MAAA+R,mBAEL5R,SAAC,wBAAA6W,uBAAA,EACC,cAAC,wBAAAT,eAAA,EACa9E,YACEC,cACD8E,aACM1E,mBACLR,cACGS,gBAErB,CAAA,EAAA,CAAA,GAAwB/R,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0R,cAAA1R,EAAAA,CAAAA,IAAAwW,aAAAxW,EAAAA,CAAAA,IAAA8R,mBAAA9R,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAA+R,iBAAA/R,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA,GATxBG;AASwB;ACXb8W,SAAAA,gBAAAxF,YAAAyF,aAAA;AAAA,QAAAlX,QAAAC,iCAAA,CAAA,GACbkX,uBAA6BC,wBAAwB;AAACjX,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KACDpC,KAAA,CAAA,GAAEH,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAvD,QAAA,CAAAqX,SAAAC,UAAA,QAA8BvM,wBAAuB5K,EAAE,GACvD;IAAAoX;EAAAA,IAA2BC,eAAe;AAAC,MAAApX,IAAAsC;AAAA,SAAA1C,EAAA,CAAA,MAAAyR,cAAAzR,EAAAmX,CAAAA,MAAAA,wBAAAnX,EAAAuX,CAAAA,MAAAA,oBAAAvX,EAAAA,CAAAA,MAAAkX,eACjC9W,KAAAA,MAAA;AAAA,QAAA,CACH8W;AAAU;AAGfO,UAAAA,eAAqBC,4BACnBP,sBACAD,aACAzF,YACA8F,gBACF,EAACI,UAAAhV,CAAA,UAAA;AACC2U,iBAAW3U,KAAK;IAAA,CACjB;AAAC,WAAA,MAAA;AAGA8U,mDAAYG;IAAA;EAAA,GAEblV,KAAAA,CAACyU,sBAAsBD,aAAYzF,YAAY8F,gBAAgB,GAACvX,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAAmX,sBAAAnX,EAAAA,CAAAA,IAAAuX,kBAAAvX,EAAAA,CAAAA,IAAAkX,aAAAlX,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAhBnEO,yBAAUH,IAgBPsC,EAAgE,GAE5D2U;AAAO;ACbT,SAAAQ,cAAA9X,OAAA;;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAUL;IAAAwR;IAAAC;IAAAiE;IAAAa;IAAA1E;IAAAE;IAAAV;IAAAS;EAAAA,IASIhS,OAEJ;IAAAmQ;EAAYC,IAAAA,eAAAC,2BAA0C,GACtD0H,SAAeC,UAAU;AAAC5X,MAAAA;AAAAH,IAAA2V,CAAAA,QAAAA,4DAAAG,aAAAH,mBAAA7C,QAAA9S,EAAA2V,CAAAA,QAAAA,4DAAAG,aAAAH,mBAAA3C,UAAAhT,EAAAA,CAAAA,MAAAsR,gBAIxBnR,KAAA6X,CAAAA,YAAAA;;AAEK,uCAAA,WAAA,EACKjY,GAAAA,SACG,OAAA;MAAAmB,KACDyU,MAAAA,uDAAiBG,aAAjBH,gBAAAA,IAAiB7C;MAAAtO,OACfmR,MAAAA,uDAAiBG,aAAjBH,gBAAAA,IAAiB3C;MAAAzB,eACRZ,OAAAC,QAAeU,YAAY;IAAC,EAAA,CAE7C;KAELtR,EAAA2V,CAAAA,KAAAA,4DAAAG,aAAAH,mBAAA7C,KAAA9S,EAAA2V,CAAAA,KAAAA,4DAAAG,aAAAH,mBAAA3C,OAAAhT,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAbH,QAAAiY,mBAAyB9X;AAexB,MAAAC,IAAAsC;AAAA1C,IAAA2V,CAAAA,QAAAA,4DAAAG,aAAAH,mBAAA3C,UAAAhT,EAAA,CAAA,MAAA8X,UAGOpV,KAAAoV,OAAM5R,MAAKyP,4DAAiBG,aAAjBH,mBAAiB3C,UAAqB,MAAM,GAAChT,EAAA2V,CAAAA,KAAAA,4DAAAG,aAAAH,mBAAA3C,OAAAhT,EAAAA,CAAAA,IAAA8X,QAAA9X,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA,GAAAI,KAAxDsC;AADRwU,QAAAA,cAAmB9W,IAKnB8X,eAAqBjB,kBAAgBtB,4DAAiBG,aAAjBH,mBAAiB7C,QAAmB,IAAIoE,WAAU;AAACrU,MAAAA;AAAA,OAAA;AAGjF8S,QAAAA,EAAAA,uDAAiBG,WAAA;AAAY,WAAA;AAAWqC,YAAAA;IAAAA;AAAAjV,QAAAA;AAAAlD,MAAA2V,CAAAA,MAAAA,kBAAAG,YAAA9V,EAAA,CAAA,MAAAkY,aAAAE,YAIrClV,MAAAmV,4BAAA;MAAAD,UACQF,aAAYE;MAAAE,UACZ3C,kBAAiBG;IAAAA,CAC5B,GAAC9V,EAAA,CAAA,IAAA2V,kBAAAG,UAAA9V,EAAA,CAAA,IAAAkY,aAAAE,UAAApY,EAAAA,CAAAA,IAAAkD,OAAAA,MAAAlD,EAAA,CAAA;AAAAqD,QAAAA;AAAArD,MAAAA,EAAAA,MAAAkQ,KAKK7M,MAAA6M,EAAE,qBAAqB,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAqD,OAAAA,MAAArD,EAAA,EAAA;AAAAsD,QAAAA;AAAAtD,MAAAA,EAAAA,MAAAqD,OAF7BC,UAAC,wBAAA,MAAA,EAAc,SAAA,GAAW,QAAA,GAAW,QAAA,GACnC,cAAA,wBAAC,MAAA,EAAK,OAAA,MAAY,MAAC,GAAS,QAAA,UACzBD,UAAAA,IACH,CAAA,EACF,CAAA,GAAOrD,EAAAA,EAAAA,IAAAqD,KAAArD,EAAAA,EAAAA,IAAAsD,OAAAA,MAAAtD,EAAA,EAAA;AAAAuD,QAAAA;AAAAvD,MAAAkX,EAAAA,MAAAA,eAAAlX,EAAAA,EAAAA,MAAAkD,OAAAlD,EAAA,EAAA,MAAAsD,OAXXC,SAAC,wBAAA,sBAAA,EACKL,GAAAA,KAIQgU,YAAAA,aAEV,QAAA5T,IAMF,CAAA,GAAAtD,EAAAA,EAAAA,IAAAkX,aAAAlX,EAAAA,EAAAA,IAAAkD,KAAAlD,EAAAA,EAAAA,IAAAsD,KAAAtD,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA,GAdJ6C,KACEU;EAAAA;AAJJ,QAAA8T,UAAgBxU;AAmBoC,MAEhD4O,cAAcC,cAAY;AAAAxO,QAAAA;AAAA,WAAAlD,EAAAA,EAAAA,MAAAyR,cAAAzR,EAAA0R,EAAAA,MAAAA,gBAAA1R,EAAAwW,EAAAA,MAAAA,eAAAxW,EAAA,EAAA,MAAA8R,qBAAA9R,EAAAA,EAAAA,MAAAsR,gBAAAtR,EAAA,EAAA,MAAA+R,mBAE1B7O,UAAC,wBAAA,eAAA,EACauO,YACEC,cACD8E,aACM1E,mBACLR,cACGS,gBACjB,CAAA,GAAA/R,EAAAA,EAAAA,IAAAyR,YAAAzR,EAAAA,EAAAA,IAAA0R,cAAA1R,EAAAA,EAAAA,IAAAwW,aAAAxW,EAAAA,EAAAA,IAAA8R,mBAAA9R,EAAAA,EAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAA+R,iBAAA/R,EAAAA,EAAAA,IAAAkD,OAAAA,MAAAlD,EAAA,EAAA,GAPFkD;EAAAA;AAOEA,MAAAA;AAAAlD,IAAA,EAAA,MAAAiY,oBAAAjY,EAAA2V,EAAAA,MAAAA,qBAAA3V,EAAAqX,EAAAA,MAAAA,WAAArX,EAAAA,EAAAA,MAAAkQ,KAMDhN,KAAAyS,yBACE,wBAAA,MAAA,EAAc,SAAC,GAAQ,MAAAA,kBAAiBG,WAAY,YAAY,WAC9DH,UAAAA,kBAAiBG,eACf,wBAAA,aAAA,EACC,sBAAmB,MAEf,IAAAmC,kBACI,WAAA,KACA,QAAC,GACF,QAAA,UACF,MAAA,WAEJZ,UAAAA,QACH,CAAA,QAEA,wBAAC,MAAc,EAAA,SAAA,GAAW,QAAA,GAAQ,MAAA,WAChC,cAAA,yBAAC,MAAU,EAAA,KAAA,GACT,UAAA;QAAC,wBAAA,KAAA,EAAS,MAAA,QACR,cAAC,wBAAA,MAAA,EAAW,MAAC,GACX,cAAA,wBAAC,oBAAkB,CAAA,CAAA,EACrB,CAAA,EAAA,CACF;QACC,wBAAA,KAAA,EAAU,MAAA,GACT,cAAC,wBAAA,MAAA,EAAW,MAAA,GACV,cAAC,wBAAA,WAAA,EACInH,GACK,SAAA,8BACI,YAAA;MAAAuF,MAAO;IAAA,GACX,QAAA;MAAAlD,MAAOoD,kBAAiBpD;IAAAA,EAEpC,CAAA,EAAA,CAAA,EACF,CAAA;EACF,EAAA,CAAA,EACF,CAAA,EAAA,CAEJ,GACDvS,EAAAA,EAAAA,IAAAiY,kBAAAjY,EAAAA,EAAAA,IAAA2V,mBAAA3V,EAAAA,EAAAA,IAAAqX,SAAArX,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,EAAA;AAAAqD,MAAAA;AAAArD,IAAA,EAAA,MAAA2V,qBAAA3V,EAAA8R,EAAAA,MAAAA,qBAAA9R,EAAAgS,EAAAA,MAAAA,QAAAhS,EAAAA,EAAAA,MAAAsR,gBAEDjO,SAAC,wBAAA,kBAAA,EACoBsS,mBACA7D,mBACLR,cACRU,KACN,CAAA,GAAAhS,EAAAA,EAAAA,IAAA2V,mBAAA3V,EAAAA,EAAAA,IAAA8R,mBAAA9R,EAAAA,EAAAA,IAAAgS,MAAAhS,EAAAA,EAAAA,IAAAsR,cAAAtR,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAAA,SAAAtD,EAAAkD,EAAAA,MAAAA,MAAAlD,EAAAA,EAAAA,MAAAqD,MA5CJC,SAAA,yBAAC,MAAA,EAAe,WAAA,UAAe,MAAC,GAAS,QAAA,QACtCJ,UAAAA;IAAAA;IAsCDG;EAAAA,EAMF,CAAA,GAAOrD,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,IAAArD,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA,GA7CPsD;AA6CO;ACrJJ,SAAAiV,WAAArX,IAAA;AAAAlB,QAAAA,QAAAC,iCAAA,CAAA;AAAAE,MAAAA;AAAAH,IAAAA,CAAAA,MAAAkB,MACsBf,KAAAA,MAAMe,MAAMsX,YAAK,GAACxY,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAA7C,QAAA,CAAAyY,OAAA,QAAkB1N,wBAAS5K,EAAkB;AACtCsY,SAAAA;AAAO;ACShB,IAAMC,UAAUjV,GAAOC;;;AAAvB,IAGMiV,eAAelV,GAAOC;;;;;;;YAShB,CAAC;EAACkV;AAAS,MAAOA,YAAY,SAAS,WAAY;;;;;;;;;;;;;IAa3D,CAAC;EAACA;AAAS,MACX,CAACA,aACD;;;;;;;;;;;;;;;;;;;GAmBD;;AA9CH,IAiDaC,eAIR,SAAA1Y,IAAA;AAAAH,QAAAA,QAAAC,iCAAA,EAAA,GAAU;IAAAiB,IAAA4X;IAAA/U;IAAAgV,UAAA3Y;EAAAD,IAAAA,IAAoB4Y,WAAA3Y,OAAgB4D,SAAAA,QAAhB5D,IACjCuM,SAAWlK,sBAAA,IAA2B,GAEtCtB,cAAgB8C,0BAAAC,yBAAoC;AAAC,MAEjD/C,YAAgB;AAAA,UACZgD,MAAM,iEAAiE;AAG/EjD,QAAAA,KAAWqX,WAAWO,MAAM,GAE5B;IAAA5N;IAAAiD;IAAAd;IAAAE;IAAAlJ;IAAAC;EAAAA,IACEnD,SAEF6X,aAAmB9N,kBAAkBhK;AAAE,MAEnCC,YAAgB;AAAA,UACZgD,MAAM,iEAAiE;AAACzB,MAAAA;AAAA1C,IAAAkB,CAAAA,MAAAA,MAAAlB,EAAAA,CAAAA,MAAAqN,iBAI9E3K,KAAAZ,CAAA,UAAA;AACgBZ,kBAAAA,IAAIY,MAAKmX,WAAY;EACpCjZ,GAAAA,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAAqN,eAAArN,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAHH,QAAAkZ,cAAoBxW;AAKnBG,MAAAA;AAAA7C,IAAAmO,CAAAA,MAAAA,QAAAnO,EAAAA,CAAAA,MAAAkB,MAGC2B,KAAAsW,CAAA,MAAA;AACEhL,SAAKjN,IAAIiY,CAAC;EACXnZ,GAAAA,EAAAA,CAAAA,IAAAmO,MAAAnO,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAHH,QAAAoZ,SAAevW;AAKdK,MAAAA;AAAAlD,IAAAA,CAAAA,MAAAuN,gBAE8BrK,KAAAA,MAAA;AAC3BN,OAAAA,QAAAyW,KAAe,GACjB9L,aAAa;EAAC,GACfvN,EAAAA,CAAAA,IAAAuN,cAAAvN,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAHD,QAAAsZ,aAAmBpW;AAGD,MAAAG,IAAAC;AAAAtD,IAAA,CAAA,MAAA+Y,YAAA/Y,EAAAgZ,CAAAA,MAAAA,cAAAhZ,EAAAoZ,EAAAA,MAAAA,UAAApZ,EAAAA,EAAAA,MAAAsZ,cAERjW,KAAAA,MAAA;AAAA,QACJ,CAAC2V,cAAcD;AAAQ;AAwB3B,UAAAQ,sBAAAA,WAnBA;AACE,YAAAC,YAAA1D,SAAA2D,KAAAlV,OACAmV,gBAAA5D,SAAA6D,gBAAApV,OAEA;QAAAqV;MAAAA,IAAiBF,eACjB;QAAAG;MAAAA,IAAqBL;AAErBE,aAAAA,cAAaE,SAAU,aACvBJ,UAASK,aAAc,QAAM,MAAA;AAGvBD,iBAAQF,cAAaE,SAAUA,SAC9BF,cAAaI,eAAgB,QAAQ,GAEtCD,aAAYL,UAASK,aAAcA,aAClCL,UAASM,eAAgB,aAAa;MAAC;IAAA,EAIF;AAC9C7N,WAAAA,OAAA8N,iBAAwB,aAAaX,MAAM,GAC3CnN,OAAA8N,iBAAwB,WAAWT,UAAU,GAC7CrN,OAAA8N,iBAAwB,eAAeT,UAAU,GAAC,MAAA;AAIhDC,0BAAAA,GACAtN,OAAA+N,oBAA2B,aAAaZ,MAAM,GAC9CnN,OAAA+N,oBAA2B,WAAWV,UAAU,GAChDrN,OAAA+N,oBAA2B,eAAeV,UAAU;IAAC;EAAA,GAEtDhW,KAAAA,CAACyV,UAAUC,YAAYI,QAAQE,UAAU,GAACtZ,EAAAA,CAAAA,IAAA+Y,UAAA/Y,EAAAA,CAAAA,IAAAgZ,YAAAhZ,EAAAA,EAAAA,IAAAoZ,QAAApZ,EAAAA,EAAAA,IAAAsZ,YAAAtZ,EAAAA,EAAAA,IAAAqD,IAAArD,EAAAA,EAAAA,IAAAsD,OAAAD,KAAArD,EAAA,EAAA,GAAAsD,KAAAtD,EAAA,EAAA,QArC7CO,yBAAU8C,IAqCPC,EAA0C;AAAC,MAAAC,IAAAoI;AAAA3L,IAAA,EAAA,MAAAkB,MAAAlB,EAAA+D,EAAAA,MAAAA,SAAA/D,EAAAqE,EAAAA,MAAAA,mBAAArE,EAAAA,EAAAA,MAAAsE,qBAE9Bf,KAAAA,OACdc,gBAAgBnD,IAAE;IAAAA;IAAA6C;IAAAS,MAAoB;IAASmI;EAAK,CAAA,GAAC,MAAA;AAGnDrI,sBAAkBpD,EAAE;EAAA,IAErByK,KAAAA,CAACzK,IAAI6C,OAAOM,iBAAiBC,iBAAiB,GAACtE,EAAAA,EAAAA,IAAAkB,IAAAlB,EAAAA,EAAAA,IAAA+D,OAAA/D,EAAAA,EAAAA,IAAAqE,iBAAArE,EAAAA,EAAAA,IAAAsE,mBAAAtE,EAAAA,EAAAA,IAAAuD,IAAAvD,EAAAA,EAAAA,IAAA2L,OAAApI,KAAAvD,EAAA,EAAA,GAAA2L,KAAA3L,EAAA,EAAA,QANlDyE,+BAAgBlB,IAMboI,EAA+C;AAAC,MAAAa,KAAAR;AAAAhM,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAK7CyJ,SAAQ,wBAAA,QAAA,CAAA,CAAA,GACRQ,UAAQ,wBAAA,QAAA,CAAA,CAAA,GAAAxM,EAAAA,EAAAA,IAAAwM,KAAAxM,EAAAA,EAAAA,IAAAgM,OAAAQ,MAAAxM,EAAA,EAAA,GAAAgM,KAAAhM,EAAA,EAAA;AAAAsN,MAAAA;AAAAtN,IAAAA,EAAAA,MAAA+Y,YAFVzL,UAAC,yBAAA,cAAA,EAAwByL,WAAAA,UACvB/M,UAAAA;IAAAA;IACAQ;EACF,EAAA,CAAA,GAAexM,EAAAA,EAAAA,IAAA+Y,UAAA/Y,EAAAA,EAAAA,IAAAsN,OAAAA,MAAAtN,EAAA,EAAA;AAAAwN,MAAAA;AAAA,SAAAxN,EAAAkZ,EAAAA,MAAAA,eAAAlZ,EAAAA,EAAAA,MAAAsN,OAJjBE,UAAAA,wBAAC,SAAqB0L,EAAAA,aAAkBvM,KAAAA,IACtCW,UAAAA,IAIF,CAAA,GAAUtN,EAAAA,EAAAA,IAAAkZ,aAAAlZ,EAAAA,EAAAA,IAAAsN,KAAAtN,EAAAA,EAAAA,IAAAwN,OAAAA,MAAAxN,EAAA,EAAA,GALVwN;AAKU;AAjJd,ICuBMyM,6BAMFla,CAAA,UAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GACF;IAAAwR;IAAAyI;IAAAC;EAAAA,IAA6Dpa;AAAKI,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAG9DpC,SAAAA,wBAAC,cAAA,EAAoB,OAAA,EAAA,CAAK,GAAAH,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,IAAAA,CAAAA,MAAAma,oBAAAna,EAAAD,CAAAA,MAAAA,MAAAsC,YAMtBjC,SAAC,wBAAA,wBAAkC+Z,EAAAA,WAAe,kBAC/Cpa,UAAKsC,MAAAA,SAAAA,CACR,GAAyBrC,EAAAA,CAAAA,IAAAma,kBAAAna,EAAA,CAAA,IAAAD,MAAAsC,UAAArC,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAA0C,MAAAA;AAAA,SAAA1C,EAAAyR,CAAAA,MAAAA,cAAAzR,EAAAA,CAAAA,MAAAka,wBAAAla,EAAA,CAAA,MAAAI,MAT/BsC,SACEvC,yBAAAA,6BAAAA,EAAAA,UAAAA;IAAAA;QACC,wBAAA,OAAA,EAAS,IAAA,WAAoB,UAAA,KAAY,OAAC,GACzC,cAAC,wBAAA,sCAAA,EACasR,YACUyI,sBAEtB9Z,UAAAA,GAAAA,CAGF,EACF,CAAA;EAAA,EAAA,CAAQ,GACPJ,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAAka,sBAAAla,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA,GAZH0C;AAYG;AD5CP,ICgDa0X,sBAAmEra,CAAA,UAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAC9E;IAAAwR;IAAA4I;IAAA3I;IAAAyI;IAAAxE;IAAAa;IAAA1E;IAAAR;IAAA4I;IAAAnI;EAAAA,IAWIhS;AAAKI,MAAAA;AAAAH,IAAA,CAAA,MAAAyR,cAAAzR,EAAA,CAAA,MAAA0R,gBAAA1R,EAAA,CAAA,MAAAqa,mBAAAra,EAAA2V,CAAAA,MAAAA,qBAAA3V,EAAAwW,CAAAA,MAAAA,eAAAxW,EAAA8R,CAAAA,MAAAA,qBAAA9R,EAAAsR,CAAAA,MAAAA,gBAAAtR,EAAAA,CAAAA,MAAA+R,mBAQL5R,SAAC,wBAAA,eAAA,EACasR,YACEC,cACKiE,mBACNa,aACM1E,mBACbuI,MAAc,iBACN/I,cACGS,gBAAAA,CACjB,GAAA/R,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,CAAAA,IAAA0R,cAAA1R,EAAAA,CAAAA,IAAAqa,iBAAAra,EAAAA,CAAAA,IAAA2V,mBAAA3V,EAAAA,CAAAA,IAAAwW,aAAAxW,EAAAA,CAAAA,IAAA8R,mBAAA9R,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAA+R,iBAAA/R,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,SAAAA,EAAA,CAAA,MAAAyR,cAAAzR,EAAAma,EAAAA,MAAAA,oBAAAna,EAAAka,EAAAA,MAAAA,wBAAAla,EAAAA,EAAAA,MAAAG,MAdJC,SAAC,wBAAA,4BAAA,EACaqR,YACM0I,kBACID,sBAEtB/Z,UAAAA,GAUF,CAAA,GAA6BH,EAAAA,CAAAA,IAAAyR,YAAAzR,EAAAA,EAAAA,IAAAma,kBAAAna,EAAAA,EAAAA,IAAAka,sBAAAla,EAAAA,EAAAA,IAAAG,IAAAH,EAAAA,EAAAA,IAAAI,MAAAA,KAAAJ,EAAA,EAAA,GAf7BI;AAe6B;AD9EjC,IETaka,+BAIT,SAAAva,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GACF;IAAAoC;IAAAkY,UAAAC;EAAAA,IAAwCza;AAAKI,MAAAA;AAAAH,IAAAA,CAAAA,MAAAwa,aAG3Cra,KAAAA,CAAAkX,SAAAjX,QAAA;AACEoa,eADQpa,QAAoB4D,SAAAA,SAApB5D,QACgB,CAAA,GAAEiX,UAAO;MAAAA;IAAA,IAAA,CAAA,CAAiB;EAAC,GACpDrX,EAAAA,CAAAA,IAAAwa,WAAAxa,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAHH,QAAAua,WAAiBpa;AAKhBC,MAAAA;AAAA,SAAAJ,EAAAqC,CAAAA,MAAAA,YAAArC,EAAAA,CAAAA,MAAAua,YAGCna,SAAA,wBAAA,4BAAA,UAAA,EAA6Cma,OAAAA,UAC1ClY,SAAAA,CACH,GAAuCrC,EAAAA,CAAAA,IAAAqC,UAAArC,EAAAA,CAAAA,IAAAua,UAAAva,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA,GAFvCI;AAEuC;ACpBpCqa,SAAAA,cAAA3X,KAAA4X,cAAA;AAAA1a,QAAAA,QAAAC,iCAAA,CAAA;AAAAE,MAAAA;AAAAH,IAAA0a,CAAAA,MAAAA,gBAAA1a,EAAAA,CAAAA,MAAA8C,OACiC3C,KAAAA,MACpCiF,KAAAC,MAAWC,aAAAC,QAAqBzC,GAAG,KAAKsC,KAAAO,UAAe+U,YAAY,CAAC,GAAC1a,EAAAA,CAAAA,IAAA0a,cAAA1a,EAAAA,CAAAA,IAAA8C,KAAA9C,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AADvE,QAAA,CAAA+C,OAAAE,QAAA,QAA0B8H,wBAAY5K,EAEtC;AAAC,MAAAC,IAAAsC;AAAA1C,IAAA8C,CAAAA,MAAAA,OAAA9C,EAAAA,CAAAA,MAAA+C,SAES3C,KAAAA,MAAA;AACRkF,iBAAAI,QAAqB5C,KAAKsC,KAAAO,UAAe5C,KAAK,CAAC;EAC9CL,GAAAA,KAAA,CAACI,KAAKC,KAAK,GAAC/C,EAAAA,CAAAA,IAAA8C,KAAA9C,EAAAA,CAAAA,IAAA+C,OAAA/C,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAFfO,yBAAUH,IAEPsC,EAAY;AAACG,MAAAA;AAAA7C,SAAAA,EAAAA,CAAAA,MAAA+C,SAETF,KAAA,CAACE,OAAOE,QAAQ,GAACjD,EAAAA,CAAAA,IAAA+C,OAAA/C,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAAjB6C;AAAiB;ACQnB,SAAA8X,yBAAA5a,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAGL;IAAA2a;EAAAA,IAA6B7a,OAE7B8a,oBAAA,CAAA,EAA4BD,yDAAkBE,YAC9CC,CAAAA,mBAAAC,mBAAA,IAAiDP,cAC/C,0BACAI,iBACF,GACAI,mBAAyBJ,oBAAoBE,oBAAyB;AAAA5a,MAAAA;AAAA,OAAA;AAAA,QAAA,CAE/D0a,mBAAiB;AAAE7W,WAAAA;AAAgBmU,YAAAA;IAAAA;AAAA/X,QAAAA;AAAAJ,MAAAA,CAAAA,MAAAgb,uBAEjC5a,MAAAA,MAAM4a,oBAAmB1a,OAAsB,GAACN,EAAAA,CAAAA,IAAAgb,qBAAAhb,EAAAA,CAAAA,IAAAI,OAAAA,MAAAJ,EAAA,CAAA,GAAvDG,KAAOC;EAAAA;AAHT,QAAA8a,kBAAwB/a;AAIoBC,MAAAA;AAAAJ,IAAAib,CAAAA,MAAAA,oBAAAjb,EAAAA,CAAAA,MAAA4a,sBAG1Cxa,KAAAA,WAAA;AAAA,eAAA,wBAAA,6BAAA,EACY6a,UAAoB,wBAAA,wBAAC,WAAcL,EAAAA,GAAAA,mBAAAA,CAAAA,EAAAA,CAAuB;EACrE5a,GAAAA,EAAAA,CAAAA,IAAAib,kBAAAjb,EAAAA,CAAAA,IAAA4a,oBAAA5a,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAHH,QAAAmb,YAAkB/a;AAKjBsC,MAAAA;AAAA1C,IAAAib,CAAAA,MAAAA,oBAAAjb,EAAAA,CAAAA,MAAAkb,mBAEOxY,KAAA;IAAAuY;IAAAC;EAAmClb,GAAAA,EAAAA,CAAAA,IAAAib,kBAAAjb,EAAAA,CAAAA,IAAAkb,iBAAAlb,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAA6C,MAAAA;AAAA,SAAA7C,EAAAmb,CAAAA,MAAAA,aAAAnb,EAAAA,CAAAA,MAAA0C,MAApCG,KAAA,CAACH,IAAqCyY,SAAS,GAACnb,EAAAA,CAAAA,IAAAmb,WAAAnb,EAAAA,CAAAA,IAAA0C,IAAA1C,EAAAA,EAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,EAAA,GAAhD6C;AAAgD;AAxBlD,SAAAvC,QAAAyB,SAAA;AAAA,SAAA,CAc4CA;AAAO;AAa1D,SAAAqZ,mBAAArb,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAEE;IAAA4D;IAAAC;IAAAgX,WAAAM;EAAAA,IAA4Drb,OAE5Dsb,oBAA0BxX,YAAgB,QAAIC,YAAgB,QAAID,aAAaC;AAAQ3D,MAAAA;AAAAH,IAAAA,CAAAA,MAAAob,uBAIjFjb,SAAA,wBAACib,qBAAA,CAAA,CAAqB,GAAApb,EAAAA,CAAAA,IAAAob,qBAAApb,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAAI,MAAAA;AAAAJ,IAAA8D,CAAAA,MAAAA,YAAA9D,EAAAA,CAAAA,MAAA6D,YAAA7D,EAAA,CAAA,MAAAG,MADxBC,SAAA,wBAAC,OAAA,EAAS,IAAA,aAAsByD,UAAoBC,UAAiB,OAAA,GACnE3D,UAAAA,GAAAA,CACF,GAAQH,EAAAA,CAAAA,IAAA8D,UAAA9D,EAAAA,CAAAA,IAAA6D,UAAA7D,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAA0C,MAAAA;AAAA1C,IAAAA,CAAAA,MAAAqb,qBACR3Y,SAAC,wBAAA,cAAA,EAAoB,OAAC,GAAY2Y,UAAgB,kBAAA,CAAK,GAAArb,EAAAA,CAAAA,IAAAqb,mBAAArb,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAA6C,MAAAA;AAAA7C,SAAAA,EAAAI,CAAAA,MAAAA,MAAAJ,EAAAA,CAAAA,MAAA0C,MAJzDG,SACEzC,yBAAAA,6BAAAA,EAAAA,UAAAA;IAAAA;IAGAsC;EAAAA,EAAuD,CAAA,GACtD1C,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,IAAA1C,EAAAA,EAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,EAAA,GALH6C;AAKG;AAGP,IAAMyY,gBAAY9a,oBAAK4a,kBAAkB;AAAzC,ICvDaG,6BAIT,SAAAxb,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GACF;IAAAoC;IAAAoO;EAAAA,IAA2B1Q;AAAKI,MAAAA;AAE8BsQ,OAAAA;AAA9D,QAAAtP,UAAgBhB;AAA+DC,MAAAA;AAAA,SAAAJ,EAAAqC,CAAAA,MAAAA,YAAArC,EAAAA,CAAAA,MAAAmB,WAG7Ef,SAAA,wBAAA,0BAAA,UAAA,EAA2Ce,OAAAA,SACxCkB,SAAAA,CACH,GAAqCrC,EAAAA,CAAAA,IAAAqC,UAAArC,EAAAA,CAAAA,IAAAmB,SAAAnB,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA,GAFrCI;AAEqC;AD2CzC,IEjDaob,uBAST,SAAAzb,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GACF;IAAAoC;IAAAuT;IAAA6F;IAAAlB;IAAA9J;IAAAa;IAAAS;EAAAA,IAAmFhS;AAAK,MAAAI,IAAAC;AAAAJ,IAAAA,CAAAA,MAAA4V,WAAA5V,EAAAyb,CAAAA,MAAAA,QAAAzb,EAAAua,CAAAA,MAAAA,YAAAva,EAAA,CAAA,MAAAyQ,UAAAzQ,EAAAA,CAAAA,MAAAsR,gBAAAtR,EAAA,CAAA,MAAA+R,mBAG/E3R,KAAA;IAAAwV;IAAA6F;IAAAlB;IAAA9J;IAAAa;IAAAS;EAON/R,GAAAA,EAAAA,CAAAA,IAAA4V,SAAA5V,EAAAA,CAAAA,IAAAyb,MAAAzb,EAAAA,CAAAA,IAAAua,UAAAva,EAAAA,CAAAA,IAAAyQ,QAAAzQ,EAAAA,CAAAA,IAAAsR,cAAAtR,EAAAA,CAAAA,IAAA+R,iBAAA/R,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA,GAAAG,KAPMC;AADT,QAAAe,UAAgBhB;AAUfuC,MAAAA;AAAA,SAAA1C,EAAAqC,CAAAA,MAAAA,YAAArC,EAAAA,CAAAA,MAAAmB,WAEMuB,SAAA,wBAAA,oBAAA,UAAA,EAAqCvB,OAAAA,SAAUkB,SAAAA,CAAS,GAA+BrC,EAAAA,CAAAA,IAAAqC,UAAArC,EAAAA,CAAAA,IAAAmB,SAAAnB,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA,GAAvF0C;AAAuF;AC9BzF,SAAAgZ,iBAAAC,eAAA;AACLC,QAAAA,gBAAsBC,YAAYF,eAAarb,OAAuC;AAAC,MAAA,CAClFqG,MAAAC,QAAcgV,aAAa;AAACE,UAAAA,IAAAA,UACX,gCAAgC;AAE/CF,SAAAA;AAAa;AALf,SAAAtb,QAAAqC,OAAA;AAAA,SACuDA,MAAKxB,QAAA4a;AAAA;ACH5D,SAASC,wBAAwBC,mBAA8C;AACpF,SAAOtV,MAAMC,QAAQqV,iBAAiB,IAAIA,kBAAkBjW,KAAK,GAAG,IAAIiW;AAC1E;ACHO,SAAAC,QAAA;AAAA,QAAAlc,QAAAC,iCAAA,CAAA,GACLiB,SAAWib,cAAAA,OAAW;AAAChc,MAAAA;AAAAH,SAAAA,EAAAA,CAAAA,MAAAkB,MAEhBf,KAAAe,GAAEkb,WAAY,GAAG,IAAIlb,GAAEmb,QAAA,YAAqB,MAAgB,IAAInb,IAAElB,EAAAA,CAAAA,IAAAkB,IAAAlB,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA,GAAlEG;AAAkE;ACYpE,IAAMmc,aAASlL,0BACpB,SAAArR,OAAAwc,cAAA;AAAAvc,QAAAA,QAAAC,iCAAA,EAAA,GACE;IAAAuc;IAAAra;IAAAsa;IAAAC;IAAAC;IAAAC;IAAArY;EAAuExE,IAAAA,OAEvEsR,UAAY5O,sBAAA,IAAqC;AAACtC,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAIhDpC,KAAAA,MAAMkR,IAAGzO,SAAQ5C,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA,OAFnB6c,mCACEN,cACApc,EACF;AAAC,MAAAC,IAAAsC;AAAA1C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAMSnC,KAAAA,MAAA;AAAA,QACHiR,CAAAA,IAAGzO;AAAA;AAGR,UAAAka,WAAiBzL,IAAGzO,SACpBma,aAAAA,WAAA;AACMD,mBAAQhH,SAAAkH,iBAIZF,SAAQG,cAAAC,IAAAA,WAA8B,aAAW;QAAAC,SAAA;QAAAC,YAAA;MAAA,CAAA,CAAoC;IAAC;AAExFnR,WAAAA,OAAA8N,iBAAwB,QAAQgD,UAAU,GAAC,MAAA;AAEzC/C,aAAAA,oBAA2B,QAAQ+C,UAAU;IAAC;EAAA,GAE/Cra,KAAA,CAAA,GAAE1C,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAhBLO,yBAAUH,IAgBPsC,EAAE;AAEL,QAAA2a,qBAA2BnB,MAAM;AAACrZ,MAAAA;AAAA7C,IAAAuE,CAAAA,MAAAA,SAAAvE,EAAAA,CAAAA,MAAAqd,sBAKrBxa,KAAA;IAAA,GACF0B;IAAK8Y;EAETrd,GAAAA,EAAAA,CAAAA,IAAAuE,OAAAvE,EAAAA,CAAAA,IAAAqd,oBAAArd,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAAAkD,MAAAA;AAAAlD,IAAAA,CAAAA,MAAAwc,WAAAxc,EAAAmC,CAAAA,MAAAA,WAAAnC,EAAAyc,CAAAA,MAAAA,UAAAzc,EAAA,CAAA,MAAA2c,OAAA3c,EAAAA,EAAAA,MAAA6C,MAAA7C,EAAA,EAAA,MAAA4c,YAJH1Z,SAAAA,wBAAC,eACQ,EAAA,OAAAL,IAIE2Z,SACAra,SACDsa,QACHpL,KACAsL,KACKC,SAAAA,CACV,GAAA5c,EAAAA,CAAAA,IAAAwc,SAAAxc,EAAAA,CAAAA,IAAAmC,SAAAnC,EAAAA,CAAAA,IAAAyc,QAAAzc,EAAAA,CAAAA,IAAA2c,KAAA3c,EAAAA,EAAAA,IAAA6C,IAAA7C,EAAAA,EAAAA,IAAA4c,UAAA5c,EAAAA,EAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,EAAA;AAAAqD,MAAAA;AAAArD,IAAAA,EAAAA,MAAA0c,gBACDrZ,KAAAqZ,oBAAAA,wBAAiB,eAAgB,CAAA,CAAA,GAAA1c,EAAAA,EAAAA,IAAA0c,cAAA1c,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAAAtD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAClCe,SAAC,wBAAA,sBAAA,CAAuB,CAAA,GAAAtD,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAAAuD,MAAAA;AAAAvD,SAAAA,EAAAkD,EAAAA,MAAAA,MAAAlD,EAAAA,EAAAA,MAAAqD,MAd1BE,SACEL,yBAAAA,6BAAAA,EAAAA,UAAAA;IAAAA;IAYCG;IACDC;EAAAA,EAAwB,CAAA,GACvBtD,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,IAAArD,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA,GAfHuD;AAeG,CAGT;AAtDO,IAwDD+Z,gBAAgBC,OAAOC,OAAO/Z,GAAOga;;;;;;CAM1C;AA9DM,IAgEDC,gBAAgBja,GAAOka,GAAG;;;;;AAhEzB,IAsEDC,uBAAuBC;;;;;;;;;;;;;;AC1EtB,SAAAC,kBAAA/d,OAAA;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAQL;IAAA8d;IAAAC;IAAAC;IAAAC;IAAAC;EAAAA,IAA4Fpe;AAAKI,MAAAA;AAG/F,QAAAiB,MAAAA,IAAAgd,IAAoBH,sBAAsBD,yBAAyBG,YAAY;AAC/E/c,MAAGkQ,aAAAlL,IAAAiY,kCAAoDrC,wBAAwBkC,WAAW,CAAC;AAC3F,QAAA;IAAAI;IAAAC;EAAAA,IAA2Bnd;AAE3BjB,OAAO,GAAG6d,qBAAqB,GAAGM,QAAQ,GAAGC,MAAM;AALrD,QAAAC,kBAAwBre,IAQxB;IAAA+P;EAAAA,IAAYC,eAAAC,2BAA0C;AAAChQ,MAAAA;AAAAJ,IAAAA,CAAAA,MAAA+d,aAGrD3d,KAAA0B,CAAA,UAAA;AACEA,UAAK6L,eAAgB,GACrBoQ,UAAUjc,MAAK2c,cAAAC,IAAmB;EAAC,GACpC1e,EAAAA,CAAAA,IAAA+d,WAAA/d,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAJH,QAAA2e,kBAAwBve;AAMvBsC,MAAAA;AAAA1C,IAAAA,CAAAA,MAAAkQ,KAK4BxN,KAAAwN,EAAE,+BAA+B,GAAClQ,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAA6C,MAAAA;AAAA7C,IAAAA,CAAAA,MAAA0C,MAAlDG,SAAC,wBAAA,MAAA,EAAW,MAAA,GAAIH,UAAAA,GAAAA,CAAmC,GAAO1C,EAAAA,CAAAA,IAAA0C,IAAA1C,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAAAkD,MAAAA;AAAAlD,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAC/CW,KAAAA,CAAC,cAAc,GAAClD,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAAAqD,MAAAA;AAAArD,IAAAA,CAAAA,MAAAkQ,KAMtB7M,KAAA6M,EAAE,+BAA+B,GAAClQ,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA;AAAAsD,MAAAA;AAAAtD,IAAA2e,CAAAA,MAAAA,mBAAA3e,EAAAA,EAAAA,MAAAwe,mBAAAxe,EAAA,EAAA,MAAAqD,MAFhDC,SAAC,wBAAA,QAAA,EACI,IAAA,KACS,cAAAD,IACNub,MAAAA,YACD,MAAA,SACCJ,MAAAA,iBACF,KAAA,UACG,QAAA,UACO,cAAA,MAELG,SAAAA,gBACT,CAAA,GAAA3e,EAAAA,CAAAA,IAAA2e,iBAAA3e,EAAAA,EAAAA,IAAAwe,iBAAAxe,EAAAA,EAAAA,IAAAqD,IAAArD,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAAAuD,MAAAA;AAAA,SAAAvD,EAAA6C,EAAAA,MAAAA,MAAA7C,EAAAA,EAAAA,MAAAsD,MAlBJC,SAAC,wBAAA,SAAA,EACC,SAAM,MACG,SAAAV,IACW,oBAAAK,IACV,WAAA,UACV,QAAK,MAELI,UAAAA,GAAAA,CAYF,GAAUtD,EAAAA,EAAAA,IAAA6C,IAAA7C,EAAAA,EAAAA,IAAAsD,IAAAtD,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA,GAnBVuD;AAmBU;ACzDP,SAAAsb,gBAAAlD,eAAA;AACLwC,QAAAA,eAAqBtC,YAAYF,eAAarb,OAA6C;AAAC,MAAA,CACvF6d;AAAYrC,UAAAA,IAAAA,UACK,0BAA0B;AAEzCqC,SAAAA;AAAY;AALd,SAAA7d,QAAAqC,OAAA;;AACsDA,UAAAA,WAAKxB,QAAA2d,eAALnc,mBAAKoc;AAAA;ACc3D,SAAAC,qBAAAjf,OAAA;;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GASL;IAAAgf,UAAA9e;IAAA+e;IAAAC,SAAA/e;IAAAgf;IAAAC;IAAAtc;IAAA4Y;EAAAA,IAAoF5b,OAA7Ekf,WAAA9e,OAAY6D,SAAAA,IAAZ7D,IAAwBgf,UAAA/e,OAAW4D,SAAAA,IAAX5D,IAC/B2b,eAAqBL,iBAAiBC,aAAa,GACnDwC,eAAqBU,gBAAgBlD,aAAa,GAElD;IAAAzL;EAAAA,IAAYC,eAAAC,2BAA0C,GACtD;IAAAkP,UAAA5c;EAAA,MAAyB6c,wBAAmB,MAAnBA,mBAAoBC,oBAAuB,CAAA,GAA7DF,WAAA5c,OAAcsB,SAAH,MAAXtB,IAEP+c,eAAiBhd,sBAAA,IAAoC,GACrD,CAAAid,cAAAC,eAAA,QAAwC5U,wBAAA/G,MAAsC,GAC9E,CAAA4b,gBAAAC,iBAAA,QAA4C9U,wBAAA/G,MAAsC;AAACnB,MAAAA;AAAA7C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAElDM,KAAAf,CAAA,UAAA;AACfA,oBAAAA,MAAK2c,cAAA1b,KAAoB;EAAA,GAC1C/C,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AAFD,QAAA8f,eAAqBjd;AAEfK,MAAAA;AAAAlD,IAAAA,CAAAA,MAAA+b,gBAAA/b,EAAAsf,CAAAA,MAAAA,YAAAtf,EAAAkf,CAAAA,MAAAA,YAAAlf,EAAA,CAAA,MAAA0f,gBAAA1f,EAAAA,CAAAA,MAAAkQ,KAAAlQ,EAAA,CAAA,MAAAme,gBAGJjb,KAAAwK,CAAA,YAAA;;AACM5L,QAAAA,QAAKgB,QAAS,SAAO;AAAA,UACnB4c,iBAAY1b;AAAc;AAI9B,UAAA+b,gBAAoBL;AAAY,UAAA;AAE9BK,wBAAgBA,IAAAA,IAAQL,cAAcvB,YAAY,EAAA6B,SAAW;MAAA,QAAhD;MAAA;AAKXrZ,UAAAA,MAAAC,QAAcmV,YAAY,GAAA;AAAC,YAAA,CACxBA,aAAYlV,KAAAoZ,CAAAA,YAAmBA,QAAOC,KAAMH,aAAa,CAAC,GAAC;AAC9DF,4BACE3P,EAAE,gCAA8B;YAAA6O,QACtBZ;YAAYhd,SACX;UACV,CAAA,CACH,GACAW,QAAK2c,cAAA0B,eAA8B;AAAC;QAAA;MAAA,WAKtC,CAAChC,iBACA4B,cAAa3D,WAAY,GAAGkD,QAAQ,GAAG,KAAKS,kBAAkBT,WAAS;AAExEO,0BACE3P,EAAE,gCAA8B;UAAAoP;UAAAne,SAAsB;QAAA,CAAiB,CACzE;AAAC;MAAA;AAIH,YAAAif,YAAkBL,kBAAkB5B,eAAe,GAAGA,YAAY,MAAM4B;AAEvD/b,wBAAAA,MAAU,GAC3B2b,gBAAe3b,MAAU,GAEzBkb,SAASkB,SAAS,IAElBX,MAAAA,SAAQ7c,YAAR6c,gBAAAA,IAAQpG;IAAA;AAGNvX,YAAKgB,QAAS,aAChB+c,kBAAiB7b,MAAU,GAC3B2b,gBAAe3b,MAAU;EAE5BhE,GAAAA,EAAAA,CAAAA,IAAA+b,cAAA/b,EAAAA,CAAAA,IAAAsf,UAAAtf,EAAAA,CAAAA,IAAAkf,UAAAlf,EAAAA,CAAAA,IAAA0f,cAAA1f,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAAme,cAAAne,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAlDH,QAAAqgB,gBAAsBnd;AAoDrBG,MAAAA;AAAArD,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAE8Bc,KAAAA,MAAA;AACZW,sBAAAA,MAAU,GAC3B2b,gBAAe3b,MAAU;EAAA,GAC1BhE,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA;AAHD,QAAA+c,aAAmB1Z;AAGbC,MAAAA;AAAAtD,IAAAme,CAAAA,MAAAA,gBAAAne,EAAAA,EAAAA,MAAA+C,SAE0BO,KAAAA,MAAA;AAC9Buc,sBAAiB7b,MAAU;AAC3B,QAAAsc,cAAgBvd;AAAK,QAAA;AAEnBqd,oBAAYA,IAAAA,IAAQrd,OAAOob,YAAY,EAAA6B,SAAW;IAAA,QAAzC;IAAA;AAIXL,oBAAgBS,WAAS;EAC1BpgB,GAAAA,EAAAA,CAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAA+C,OAAA/C,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AATD,QAAAugB,cAAoBjd;AASKC,MAAAA;AAAAvD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEfgB,KAAAA,MAAA;AACSS,sBAAAA,MAAU,GAC3B2b,gBAAe3b,MAAU;EAAA,GAC1BhE,EAAAA,EAAAA,IAAAuD,MAAAA,KAAAvD,EAAA,EAAA;AAAA2L,MAAAA;AAAA3L,IAAAme,EAAAA,MAAAA,gBAAAne,EAAAA,EAAAA,MAAA+C,SAAE4I,KAAA,CAACwS,cAAcpb,KAAK,GAAC/C,EAAAA,EAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAA+C,OAAA/C,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA,OAHxBO,yBAAUgD,IAGPoI,EAAqB;AAAC,MAAAK,IAAAQ;AAAAxM,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEqCiK,MAAA;IAAAgU,MAAAC;EAAAA,GAAiBzgB,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA,GAAAgM,KAAjBQ;AAK3Cc,QAAAA,MAAAsS,iBAL4B5T,KAKAhI;AAAYwJ,MAAAA;AAAAxN,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAS9CiL,MAAA;IAAAkT,QAAA;EAAA,GAAW1gB,EAAAA,EAAAA,IAAAwN,OAAAA,MAAAxN,EAAA,EAAA;AAAAoO,MAAAA;AAAApO,IAAA0f,EAAAA,MAAAA,gBAAA1f,EAAAA,EAAAA,MAAAme,gBAAAne,EAAA,EAAA,MAAA+C,SAKXqL,MAAAsR,iBAAY1b,SAAiB,IAAAoa,IAAQrb,OAAOob,YAAY,EAAA6B,SAAW,IAAIN,cAAY1f,EAAAA,EAAAA,IAAA0f,cAAA1f,EAAAA,EAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAA+C,OAAA/C,EAAAA,EAAAA,IAAAoO,OAAAA,MAAApO,EAAA,EAAA;AAAAqO,MAAAA;AAAArO,SAAAA,EAAA,EAAA,MAAA4f,kBAAA5f,EAAAif,EAAAA,MAAAA,YAAAjf,EAAAA,EAAAA,MAAAugB,eAAAvgB,EAAA,EAAA,MAAAqgB,iBAAArgB,EAAAmf,EAAAA,MAAAA,WAAAnf,EAAAof,EAAAA,MAAAA,UAAApf,EAAA,EAAA,MAAAqf,UAAArf,EAAAsN,EAAAA,MAAAA,OAAAtN,EAAAA,EAAAA,MAAAoO,OAhB9FC,UAAAA,wBAAAA,6BAAAA,EACE,cAAC,wBAAA,WAAA,EACc,aAAAf,KACGsS,gBACNX,UACFlC,QAAS,YACRwD,SAAU,aACTT,UAAW,cACHO,kBAAAA,eACTlB,SACDC,QACD,OAAA5R,KACC,QAAA,GACHiS,KAAAA,UACEN,OAAAA,SACCE,QACD,OAAAjR,IAAAA,CACP,EAAA,CAAA,GACDpO,EAAAA,EAAAA,IAAA4f,gBAAA5f,EAAAA,EAAAA,IAAAif,UAAAjf,EAAAA,EAAAA,IAAAugB,aAAAvgB,EAAAA,EAAAA,IAAAqgB,eAAArgB,EAAAA,EAAAA,IAAAmf,SAAAnf,EAAAA,EAAAA,IAAAof,QAAApf,EAAAA,EAAAA,IAAAqf,QAAArf,EAAAA,EAAAA,IAAAsN,KAAAtN,EAAAA,EAAAA,IAAAoO,KAAApO,EAAAA,EAAAA,IAAAqO,OAAAA,MAAArO,EAAA,EAAA,GAlBHqO;AAkBG;AC1GP,IAAMsS,gBAAYC,oBAAK,MAAM,OAAO,yBAAa,CAAC;AAAlD,IAUMC,iBAAiB;AAVvB,IAWMC,oBAAoB;AAX1B,IAYMC,SAAS;AAZf,IAcMC,uBAAuBvd,GAAOwd,cAAc;;;;;YAKtCJ,cAAc;WACfA,cAAc;;AApBzB,IAuBMK,gBAAgB3D,OAAOC,OAAO2D,OAAO;AAvB3C,IAwBMC,aAAa7D,OAAOC,OAAO6D,IAAI;AAxBrC,IAyBMC,iBAAiB/D,OAAOC,OAAOwD,oBAAoB;AAzBzD,IA2BaO,uBAAmB/gB,oBAAK,SACnCT,OACA;AACM,QAAA;IACJyhB;IACAC;IACAC;IACAzD;IACAC;EAAAA,IACEne,OACE;IAACmQ;EAAAA,IAAKC,eAAeC,2BAA2B,GAChD;IAACuR,MAAMC;EAAAA,IAAaC,SAAAA,GACpBC,SAASC,UAAU;IAACC,YAAYC;EAAY,CAAA,GAC5CC,cAAcC,eACd,GAAA,CAACvgB,SAASwgB,UAAU,QAAIrX,wBAAS,IAAI,GACrC,CAACsX,UAAUC,WAAW,QAAIvX,wBAAS,KAAK,GACxC,CAACwX,WAAWC,YAAY,QAAIzX,wBAAS,KAAK,GAC1C,CAAC0X,QAAQC,SAAS,QAAI3X,wBAAwB,IAAI,GAClD4X,OAAON,YAAYE,aAAa3gB,SAChCR,UAAMwhB,uBACV,MACEH,SACII,sBACEnB,YACAe,QACAxE,sBACAjC,wBAAwBkC,WAAW,CACrC,IACA,MACN,CAACwD,YAAYxD,aAAaD,sBAAsBwE,MAAM,CACxD,GAEM,CAACphB,OAAOyhB,QAAQ,QAAI/X,wBAAkB,IAAI;AAC5C1J,MAAAA;AACIA,UAAAA;AAGF0hB,QAAAA,2BAAuBC,2BAAY,MAAM;AACnC,cAAA;MACRC,UAAU;MACVC,QAAQ;MACRjN,OAAO/F,EAAE,2CAA2C;QAAC/O,SAAS;MAAiB,CAAA;IAAA,CAChF;EAAA,GACA,CAACygB,WAAW1R,CAAC,CAAC,GAEXiT,2BAAuBH,2BAAY,YAAY;AAC/C,QAAA;AACFR,mBAAa,IAAI,GACjB,MAAMY,4BACJtB,QACA,uBACA,OAAO7V,SAAW,MAAc,KAAKoX,SAAS3E,MAC9CwD,2CAAahhB,EACf,GACAwhB,UAAU,IAAI;IAAA,SACPrhB,SAAO;AACdyhB,eAASzhB,OAAK;IAAA,UAAA;AAEdmhB,mBAAa,KAAK;IAAA;EACpB,GACC,CAACV,QAAQI,2CAAahhB,EAAE,CAAC,GACtBoiB,0BAAsBN,2BAAY,YAAY;AAC9C,QAAA;AACFV,kBAAY,IAAI;AAEhB,YAAMiB,mBAAmB,MAAMC,2BAC7B1B,QACA,uBACA,OAAO7V,SAAW,MAAc,KAAKoX,SAAS3E,MAC9CwD,2CAAahhB,EACf;AACAwhB,gBAAUa,iBAAiBd,MAAM;IAAA,SAC1BphB,SAAO;AACdyhB,eAASzhB,OAAK;IAAA,UAAA;AAEdihB,kBAAY,KAAK;IAAA;EACnB,GACC,CAACR,QAAQI,2CAAahhB,EAAE,CAAC,GAEtBuiB,oBAAgBT,2BAAY,MAAM;AAClC,QAAA;AACF,UAAI,CAAC5hB;AACG,cAAA,IAAI+C,MAAM,gBAAgB;AAElCuf,gBAAUC,UAAUC,UAAUxiB,IAAI4e,SAAS,CAAC,GAC5C4B,UAAU;QACRqB,UAAU;QACVC,QAAQ;QACRjN,OAAO/F,EAAE,8BAA8B;UAAC/O,SAAS;QAAU,CAAA;MAAA,CAC5D;IAAA,SACME,SAAO;AACdyhB,eAASzhB,OAAK;IAAA;EAEf,GAAA,CAACugB,WAAW1R,GAAG9O,GAAG,CAAC;AAEtBb,aAAAA,yBAAU,MAAM;AACd,QAAIsjB,aAAa,IAAIC,gBAAgB,GACjCC,WAAsB,CAAE;AACbC,mBAAAA,iBAAiBC,iBAAgCC,QAAqB;AAC7E,YAAA;QAACC;QAAQC;MAAAA,IAAY,MAAMtC,OAAOuC,MACtCC,wBACA,CAAA,GACA;QAACC,gBAAgB;QAAON;QAAiBO,KAAK;MAAA,CAChD;AACI7d,YAAMC,QAAQwd,QAAQ,MACxBL,WAAWK,WAERF,OAAOO,WACV/B,UAAUyB,MAAM;IAAA;AAGpB,UAAM1M,eAAeqK,OAAO4C,KAAKC,OAAAA,EAAShN,UAAU;MAClDjM,MAAO5J,CAAU,UAAA;AACXA,cAAM0C,SAAS,cACjBqf,WAAWe,MAAAA,GACXf,aAAa,IAAIC,gBAAAA,GACbhiB,MAAMH,KAAKkF,KAAM2d,CAAAA,SAAQT,SAAS9S,SAASuT,IAAG,CAAC,KACjDR,iBAAiBliB,MAAMZ,IAAI2iB,WAAWK,MAAM;MAGlD;MACA7iB,OAAOyhB;IAAAA,CACR;AAEgB,WAAA,iBAAA,MAAMe,WAAWK,MAAM,EAAEW,QAAQ,MAAMzC,WAAW,KAAK,CAAC,GAElE,MAAM;AACExK,mBAAAA,YAAAA,GACbiM,WAAWe,MAAM;IACnB;EACF,GAAG,CAAC9C,MAAM,CAAC,OAGR,wBAAA,YAAA,EACC,YACE,wBAAC,QACC,EAAA,cAAY5R,EAAE,uCAAuC,GACrD,MAAM4U,WACN,MAAK,SACL,cAAc,KAAA,CAElB,GACA,IAAG,cACH,UACG,wBAAA,MAAA,EAAK,OAAO;IAAChhB,UAAU;EAAA,GAAM,SAAS2d,4BAA4Bzd,SAAY,GAC5Eyd,UAAAA,gCAEG,yBAAA,6BAAA,EAAA,UAAA;QAAA,wBAAC,SAAA,EAAM,OAAO;MAAC7H,QAAQ;IAAS,GAC9B,cAAC,yBAAA,MAAA,EACC,SAAS,GACT,MAAM,GACN,MAAM,GACN,MAAM,GACN,OAAO;MACLmL,gBAAgB;MAChBC,YAAY;MACZC,qBAAqB;MACrBC,kBAAkB;IAEpB,GAAA,YAAY,GACZ,UAAU,GAEV,UAAA;UAAC,wBAAA,SAAA,EACC,SAAO,MACP,aAAA,wBACG,MAAK,EAAA,MAAM,GACThV,UAAAA,EAAE,4CAA4C;QAC7C/O,SAASC,MAAM,YAAY;MAAA,CAC5B,EAAA,CACH,GAEF,oBAAoB,CAAC,cAAc,GACnC,WAAU,UACV,QAAM,MAEN,cAAA,wBAAC,QAAA,EACC,SAASihB,YAAajhB,QAAQ,QAAQ,CAACmhB,WACvC,UAAUF,YAAYE,WACtB,eAAe3gB,SACf,UACG4f,8BAEGpgB,MACE+hB,uBACAG,sBAHFP,qBAAAA,CAIL,EAEL,CAAA;UAAA,wBACC,MAAK,EAAA,MAAM,GAAG,QAAO,UACnB7S,UAAAA,EAAE,0CAA0C;QAAC/O,SAAS;MAAa,CAAA,EAAA,CACtE;UAAA,wBACC,QAAI,CAAA,CAAA;UAAA,wBACJ,MAAK,EAAA,OAAK,MAAC,MAAM,GACf+O,UAAAA,EAAE,0CAA0C;QAAC/O,SAAS;MAAA,CAAc,EACvE,CAAA;IAAA,EAAA,CACF,EACF,CAAA;QACA,wBAAC,KAAA,EAAI,SAAS,GAAG,YAAY,GAC3B,cAAA,yBAAC,OAAM,EAAA,OAAO,GACZ,UAAA;UAAA,wBAAC,MAAA,EACC,MAAMwhB,QAAQ,CAACvhB,MAAM,gBAAgB4C,QACrC,OAAO;QACLmhB,UAAU;QACVC,aAAa;QACbC,SAAS;QACTL,YAAY;QACZD,gBAAgB;MAClB,GAEA,cAAA,wBAAC,iBACEpC,EAAAA,UAAAA,WAAAA,wBACE,eACC,EAAA,OAAK,MACL,SAAS;QAAC2C,SAAS;MAAA,GACnB,SAAS;QAACA,SAAS;MAAA,GACnB,MAAM;QAACA,SAAS;MAAC,EAAA,CAAE,IAEnBlkB,UACF,wBAAA,6BAAA,EACE,cAAA,yBAAC,wBAAS,EAAA,cAAW,wBAAA,SAAA,CAAO,CAAA,GAC1B,UAAA;YAAC,wBAAA,WAAA,EACC,OAAO8O,EAAE,oCAAoC;UAAC9O,KAAKA,IAAI4e,SAAS;QAAE,CAAA,GAClE,OAAO5e,IAAI4e,SAAS,GACpB,MAAMe,QACN,OAAM,wBACN,UAAUF,iBAAiBC,kBAAkB,CAAA;YAE/C,wBAAC,gBAAA,EACC,SAAS;UAACwE,SAAS;QAAA,GACnB,SAAS;UAACA,SAAS;QAAA,GACnB,MAAM;UAACA,SAAS;QAAA,EAAG,CAAA;MAAA,EAAA,CAEvB,EAAA,CACF,QAEC,wBAAA,YAAA,EACC,OAAK,MACL,MAAM,GACN,OAAO;QAACxhB,UAAU;QAASyhB,UAAU;QAAUC,WAAW;MAAA,GAC1D,SAAS;QAACF,SAAS;MAAA,GACnB,SAAS;QAACA,SAAS;MAAA,GACnB,MAAM;QAACA,SAAS;MAAA,GAEfpV,UAAAA,EAAE,wCAAwC,EAAA,CAC7C,EAAA,CAEJ,EACF,CAAA;UACA,wBAAC,MAAA,EAAK,OAAK,MAAC,MAAM,GACfA,UAAAA,EAAE,yCAAyC,EAC9C,CAAA;IAAA,EAAA,CACF,EACF,CAAA;QAAA,wBACC,aAAW,CAAA,CAAA;QACX,wBAAA,UAAA,EACC,UAAU,CAAC9O,OAAOmhB,WAClB,MAAMkD,UACN,SAAShC,eACT,MAAMvT,EAAE,kCAAkC,EAAE,CAAA;EAAA,EAEhD,CAAA,QAEC,wBAAA,MAAA,EAAK,SAAS,GAAG,MAAK,WAAU,QAAQ,GACvC,cAAC,wBAAA,MAAA,EAAK,OAAO;IAACqV,UAAU;EAAA,GACrBrV,UAAAA,EAAE,4BAA4B;IAAC/O,SAAS;EAAiB,CAAA,EAAA,CAC5D,EACF,CAAA,EAEJ,CAAA,GAEF,SAAS;IACPukB,eAAe;IACfC,WAAW;IACXC,QAAQ;EAAA,EAAA,CAEV;AAEN,CAAC;AACDrE,iBAAiBsE,cAAc;AC3T/B,IAAMC,uBAAuB/lB,CAAA,UAAA;AAAAC,QAAAA,QAAAC,iCAAA,GAAA,GAC3B;IAAA8lB;IAAAvE;IAAAC;IAAAuE;IAAAtE;IAAAzG;IAAAgL;IAAAC;IAAAnI;IAAAoI;IAAAC;IAAAlI;IAAAY;IAAAuH;IAAAlI;IAAAjD;IAAAoL;IAAAC;IAAA5K;EAAAA,IAoBI5b,OAEJ;IAAAmQ;EAAAA,IAAYC,eAAAC,2BAA0C;AAACjQ,MAAAA;AAAAH,IAAAqmB,CAAAA,MAAAA,eAAArmB,EAAAA,CAAAA,MAAAumB,YAGrDpmB,KAAAA,MAAMkmB,YAAYE,aAAa,YAAY,WAAW,SAAS,GAACvmB,EAAAA,CAAAA,IAAAqmB,aAAArmB,EAAAA,CAAAA,IAAAumB,UAAAvmB,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AADlE,QAAAwmB,qBAA2BrmB;AAG1BC,MAAAA;AAGQ+d,OAAAA,iBAAYkF,SAAAtE,SAAuB,KAAKZ;AADjD,QAAAH,wBAA8B5d;AAEZsC,MAAAA;AAAA1C,IAAAgmB,CAAAA,MAAAA,aAAAhmB,EAAA,CAAA,MAAAkmB,aAAAlmB,EAAAomB,CAAAA,MAAAA,mBAAApmB,EAAA,CAAA,MAAA8e,cAAA9e,EAAAA,CAAAA,MAAAme,gBAEIzb,KAAAA,MAAA;AACpBwjB,cAAS,MAAA;AACFF,gBAASpjB,YAGdwjB,gBAAeK,KAAA;QAAAjiB,MAAa;MAAgB,CAAA,GAI5CmM,OAAApP,OAAcykB,UAASpjB,SAAA;QAAA+Z,KAAgB,GAAGwB,YAAY,GAAGW,cAAc,GAAG;MAAA,CAAG;IAAA,CAC9E;EAAC,GACH9e,EAAAA,CAAAA,IAAAgmB,WAAAhmB,EAAAA,CAAAA,IAAAkmB,WAAAlmB,EAAAA,CAAAA,IAAAomB,iBAAApmB,EAAAA,CAAAA,IAAA8e,YAAA9e,EAAAA,CAAAA,IAAAme,cAAAne,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAXD0mB,QAAAA,gBAAsBhkB,IAatBikB,YAAkB9K,YAAYuK,iBAAe9lB,OAAqC,GAClFsmB,WAAiB/K,YAAYuK,iBAAejgB,QAAoC,GAChF0gB,eAAqBhL,YAAYuK,iBAAe/f,QAEhD,GACAygB,cAAoBjL,YAAYuK,iBAAepS,QAAiD,GAChG+S,kBAAwBlL,YACtBuK,iBAAelS,QAEjB;AAACrR,MAAAA;AAGC,QAAAmkB,aAAAA,IAAA5I,IAA2BU,cAAc,KAAKX,YAAY,GAC1D;IAAAG;IAAAC;EAAAA,IAA2B0I,0BAA0BD,UAAU;AAExD,OAAA,GAAG1I,QAAQ,GAAGC,MAAM;AAJ7BN,QAAAA,uBAA6Bpb,IAO7BqkB,6BAAmChL,MAAAA,GAMnCiL,iBAAuBtL,YAAYF,eAAavH,MAAiC;AAAClR,MAAAA;AAAAlD,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAG/BW,KAAA;IAAAiF,OAAQ;EAAA,GAAOnI,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AAAAqD,MAAAA;AAAArD,IAAAib,EAAAA,MAAAA,oBAAAjb,EAAAA,EAAAA,MAAAkQ,KAAAlQ,EAAA,EAAA,MAAAkb,mBAC7D7X,KAAA6X,uBACE,wBAAA,QAAA,EACa,cAAAhL,EAAE,kDAAkD,GAC1DkX,MAAAA,eACD,MAAA,SACIlM,SAAAA,iBACCD,UAAAA,kBACI,cAAA;IAAAoM,aACF,wBAAA,MAAA,EAAW,MAAA,GAAInX,UAAAA,EAAE,+CAA+C,EAAA,CAAE;IAAOoX,oBAAAA,CAC9D,cAAc;IAAA3B,WACxB;EAAA,EAAA,CAGhB,GAAA3lB,EAAAA,EAAAA,IAAAib,kBAAAjb,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAkb,iBAAAlb,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAAAtD,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAK+Be,KAAA;IAAAikB,YAAa;EAAA,GAASvnB,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA;AAIjCuD,QAAAA,KAAAwjB,kBAAkB,YAAY;AAAQpb,MAAAA;AAAA3L,IAAAkQ,EAAAA,MAAAA,KAAAlQ,EAAAA,EAAAA,MAAAuD,MADhDoI,KAAAuE,EAAE,+CAA6C;IAAA/O,SACrCoC;EAAAA,CACV,GAACvD,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAuD,IAAAvD,EAAAA,EAAAA,IAAA2L,MAAAA,KAAA3L,EAAA,EAAA;AAAAgM,MAAAA;AAAAhM,IAAAA,EAAAA,MAAA2L,MAJNK,SAAC,wBAAA,KAAA,EAAa,SAAC,GACb,cAAC,wBAAA,MAAA,EAAW,MAAC,GACVL,UAAAA,GAAAA,CAGH,EACF,CAAA,GAAM3L,EAAAA,EAAAA,IAAA2L,IAAA3L,EAAAA,EAAAA,IAAAgM,MAAAA,KAAAhM,EAAA,EAAA;AAAAwM,MAAAA;AAAAxM,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KACNiK,UAAAA,wBAAC,KAAc,EAAA,UAAA,GACb,cAAC,wBAAA,SAAA,EAAc,MAAA,CAAC,KAAK,GAAU,OAAA;IAAAgb,WAAA;IAAAC,cAAA;EAAA,EAAA,CAAiC,EAAA,CAClE,GAAMznB,EAAAA,EAAAA,IAAAwM,OAAAA,MAAAxM,EAAA,EAAA;AAAAsN,MAAAA;AAAAtN,IAAAA,EAAAA,MAAAgM,MAVRsB,UAAAA,yBAAC,MAAW,EAAA,OAAA,UAAgB,OAAAhK,IAC1B0I,UAAAA;IAAAA;IAOAQ;EAGF,EAAA,CAAA,GAAOxM,EAAAA,EAAAA,IAAAgM,IAAAhM,EAAAA,EAAAA,IAAAsN,OAAAA,MAAAtN,EAAA,EAAA;AAAAwN,MAAAA;AAAAxN,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEWiL,MAAAA,CAAC,cAAc,GAACxN,EAAAA,EAAAA,IAAAwN,OAAAA,MAAAxN,EAAA,EAAA;AAAAoO,MAAAA;AAAApO,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAS3B6L,MAAA;IAAAsZ,YAAA;IAAAC,cAAA;IAAA9N,YAGO;EAAA,GACb7Z,EAAAA,EAAAA,IAAAoO,OAAAA,MAAApO,EAAA,EAAA;AACKqO,QAAAA,MAAA0Y,kBAAkB,gBAAa/iB;AAAYuK,MAAAA;AAAAvO,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGnCgM,MAAA;IAAAqZ,QAAA;EAAA,GAAY5nB,EAAAA,EAAAA,IAAAuO,OAAAA,MAAAvO,EAAA,EAAA;AAEL,QAAAwO,MAAAA,CAACoY,UAGN/X,MAAA8X,aAAaR,uBAAuB;AAAWrX,MAAAA;AAAA9O,IAAA,EAAA,MAAA+mB,mBAAA/mB,EAAAwO,EAAAA,MAAAA,OAAAxO,EAAA6O,EAAAA,MAAAA,OAAA7O,EAAAA,EAAAA,MAAAsmB,iBAL7DxX,UAOM,wBAAA,OAAA,EAPM,OAAAP,KACV,cAAC,wBAAA,QAAA,EACgB,eAAAC,KACNuY,SAAc,iBACbT,UAAY,eACZ,UAAAzX,IAA+C,CAAA,EAAA,CAE7D,GAAM7O,EAAAA,EAAAA,IAAA+mB,iBAAA/mB,EAAAA,EAAAA,IAAAwO,KAAAxO,EAAAA,EAAAA,IAAA6O,KAAA7O,EAAAA,EAAAA,IAAAsmB,eAAAtmB,EAAAA,EAAAA,IAAA8O,OAAAA,MAAA9O,EAAA,EAAA;AAES,QAAA+O,MAAAA,CAACgY;AAAe/X,MAAAA;AAAAhP,IAAAA,EAAAA,MAAAkQ,KAC1BlB,MAAAkB,EAAE,0CAA0C,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAgP,OAAAA,MAAAhP,EAAA,EAAA;AAAAyP,MAAAA;AAAAzP,IAAA+O,EAAAA,MAAAA,OAAA/O,EAAAA,EAAAA,MAAAgP,OAFlDS,UAAC,wBAAA,KAAA,EACC,cAAC,wBAAA,MAAA,EAAY,OAAAV,KAAwB,MAAC,GAAS,QAAA,UAC5CC,UAAAA,IAAAA,CACH,EAAA,CACF,GAAMhP,EAAAA,EAAAA,IAAA+O,KAAA/O,EAAAA,EAAAA,IAAAgP,KAAAhP,EAAAA,EAAAA,IAAAyP,OAAAA,MAAAzP,EAAA,EAAA;AAAA0P,MAAAA;AAAA1P,IAAA8O,EAAAA,MAAAA,OAAA9O,EAAAA,EAAAA,MAAAyP,OAbRC,UAAC,yBAAA,MAAA,EAAW,OAAA,UAAc,KAAA,GACxBZ,UAAAA;IAAAA;IAQAW;EAAAA,EAKF,CAAA,GAAOzP,EAAAA,EAAAA,IAAA8O,KAAA9O,EAAAA,EAAAA,IAAAyP,KAAAzP,EAAAA,EAAAA,IAAA0P,OAAAA,MAAA1P,EAAA,EAAA;AAAA2P,MAAAA;AAAA3P,IAAAqO,EAAAA,MAAAA,OAAArO,EAAAA,EAAAA,MAAA0P,OA1BTC,UAAAA,wBAAC,MAAA,EACI,IAAA,SACE,MAAA,QACI,SAAC,GACD,SAAA,GACF,OAAAvB,KAKD,MAAAC,KAENqB,UAAAA,IAeF,CAAA,GAAO1P,EAAAA,EAAAA,IAAAqO,KAAArO,EAAAA,EAAAA,IAAA0P,KAAA1P,EAAAA,EAAAA,IAAA2P,OAAAA,MAAA3P,EAAA,EAAA;AAAA4P,MAAAA;AAAA5P,IAAAsN,EAAAA,MAAAA,OAAAtN,EAAAA,EAAAA,MAAA2P,OA/CTC,UAAC,wBAAA,SAAA,EACC,SAAM,MAEJ,SAAAtC,KAakB,oBAAAE,KACV,WAAA,UACV,QAAK,MAELmC,UA4BF,IAAA,CAAA,GAAU3P,EAAAA,EAAAA,IAAAsN,KAAAtN,EAAAA,EAAAA,IAAA2P,KAAA3P,EAAAA,EAAAA,IAAA4P,OAAAA,MAAA5P,EAAA,EAAA;AAAA6nB,MAAAA;AAAA7nB,IAAA4mB,EAAAA,MAAAA,YAAA5mB,EAAA,EAAA,MAAA2mB,aAAA3mB,EAAA6mB,EAAAA,MAAAA,gBAAA7mB,EAAA,EAAA,MAAA8mB,eAAA9mB,EAAAA,EAAAA,MAAAkQ,KAWK2X,MAAAjB,WACG1W,EAAE,sCAAsC,IACxCA,EAAE,wBAAsB;IAAA/O,SACbwlB,YACL,YACAE,eACE,eACAC,cACE,cACA;EACT,CAAA,GAAC9mB,EAAAA,EAAAA,IAAA4mB,UAAA5mB,EAAAA,EAAAA,IAAA2mB,WAAA3mB,EAAAA,EAAAA,IAAA6mB,cAAA7mB,EAAAA,EAAAA,IAAA8mB,aAAA9mB,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA6nB,OAAAA,MAAA7nB,EAAA,EAAA;AAAA8nB,MAAAA;AAAA9nB,IAAAA,EAAAA,MAAA6nB,OAXRC,UAAC,wBAAA,MAAA,EAAW,MAAA,GACTD,UAAAA,IAAAA,CAWH,GAAO7nB,EAAAA,EAAAA,IAAA6nB,KAAA7nB,EAAAA,EAAAA,IAAA8nB,OAAAA,MAAA9nB,EAAA,EAAA;AAAA+nB,MAAAA;AAAA/nB,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEWwlB,MAAAA,CAAC,YAAY,GAAC/nB,EAAAA,EAAAA,IAAA+nB,OAAAA,MAAA/nB,EAAA,EAAA;AAAAgoB,MAAAA;AAAAhoB,IAAAA,EAAAA,MAAAkQ,KAKpB8X,MAAA9X,EAAE,yCAAyC,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAAgoB,OAAAA,MAAAhoB,EAAA,EAAA;AAG/CioB,QAAAA,MAAAnB,eAAeD,gBAAgBM;AAAce,MAAAA;AAAAloB,IAAA0mB,EAAAA,MAAAA,iBAAA1mB,EAAAA,EAAAA,MAAAgoB,OAAAhoB,EAAA,EAAA,MAAAioB,OAJxDC,UAAAA,wBAAC,QACa,EAAA,cAAAF,KACNG,MAAUA,aACX,MAAA,SACI,SAAAF,KACAvB,SAAAA,eACK,cAAA,KAAA,CACd,GAAA1mB,EAAAA,EAAAA,IAAA0mB,eAAA1mB,EAAAA,EAAAA,IAAAgoB,KAAAhoB,EAAAA,EAAAA,IAAAioB,KAAAjoB,EAAAA,EAAAA,IAAAkoB,OAAAA,MAAAloB,EAAA,EAAA;AAAAooB,MAAAA;AAAApoB,IAAA8nB,EAAAA,MAAAA,OAAA9nB,EAAAA,EAAAA,MAAAkoB,OA7BNE,UAAAA,wBAAC,KAAa,EAAA,SAAC,GACb,cAAC,wBAAA,SAAA,EACC,SAAA,MAEE,SAAAN,KAckB,oBAAAC,KACV,WAAA,UACV,QAAA,MAEAG,UAAAA,IAAAA,CAQF,EACF,CAAA,GAAMloB,EAAAA,EAAAA,IAAA8nB,KAAA9nB,EAAAA,EAAAA,IAAAkoB,KAAAloB,EAAAA,EAAAA,IAAAooB,OAAAA,MAAApoB,EAAA,EAAA;AAAAqoB,MAAAA;AAAAroB,IAAA+d,EAAAA,MAAAA,aAAA/d,EAAA,EAAA,MAAAke,eAAAle,EAAAge,EAAAA,MAAAA,yBAAAhe,EAAA,EAAA,MAAAie,wBAAAje,EAAAA,EAAAA,MAAAme,gBAINkK,UAAAA,wBAAC,KAAa,EAAA,SAAA,GACZ,cAAA,wBAAC,mBACYtK,EAAAA,WACYC,uBACDC,sBACTC,aACCC,aAElB,CAAA,EAAA,CAAA,GAAMne,EAAAA,EAAAA,IAAA+d,WAAA/d,EAAAA,EAAAA,IAAAke,aAAAle,EAAAA,EAAAA,IAAAge,uBAAAhe,EAAAA,EAAAA,IAAAie,sBAAAje,EAAAA,EAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAAqoB,OAAAA,MAAAroB,EAAA,EAAA;AAAAsoB,MAAAA;AAAAtoB,IAAAimB,EAAAA,MAAAA,gBAAAjmB,EAAA,EAAA,MAAAie,wBAAAje,EAAA2b,EAAAA,MAAAA,iBAAA3b,EAAA,EAAA,MAAAooB,OAAApoB,EAAAA,EAAAA,MAAAqoB,OA/CZC,UAAC,wBAAA,KAAA,EAAU,MAAA,GACT,cAAC,wBAAA,sBAAA,EACgB3M,eAEb,QAAAyM,KAiCQnC,UAAAA,cAER,QAAAoC,KAUKpK,OAAAA,qBAEX,CAAA,EAAA,CAAA,GAAMje,EAAAA,EAAAA,IAAAimB,cAAAjmB,EAAAA,EAAAA,IAAAie,sBAAAje,EAAAA,EAAAA,IAAA2b,eAAA3b,EAAAA,EAAAA,IAAAooB,KAAApoB,EAAAA,EAAAA,IAAAqoB,KAAAroB,EAAAA,EAAAA,IAAAsoB,OAAAA,MAAAtoB,EAAA,EAAA;AAAAuoB,MAAAA;AAAAvoB,IAAAA,EAAAA,MAAAknB,8BAMGqB,MAAAC,CAAA,SAAA;AACCjkB,iCAAAA,MAAAkkB,YAAoB,wBAAwBvB;EAA0B,GAC3ElnB,EAAAA,EAAAA,IAAAknB,4BAAAlnB,EAAAA,EAAAA,IAAAuoB,OAAAA,MAAAvoB,EAAA,EAAA;AAIc0oB,QAAAA,MAAAnC,aAAa,YAAY,WAAW;AAAMoC,MAAAA;AAAA3oB,IAAAkQ,EAAAA,MAAAA,KAAAlQ,EAAAA,EAAAA,MAAA0oB,OADpDC,MAAAzY,EAAE,yCAAuC;IAAA/O,SAC/BunB;EAAAA,CACV,GAAC1oB,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA0oB,KAAA1oB,EAAAA,EAAAA,IAAA2oB,OAAAA,MAAA3oB,EAAA,EAAA;AAAA4oB,MAAAA;AAAA5oB,IAAAA,EAAAA,MAAA2oB,OAHJC,UAAC,wBAAA,MAAA,EAAW,MAAA,GACTD,UAAAA,IAAAA,CAGH,GAAO3oB,EAAAA,EAAAA,IAAA2oB,KAAA3oB,EAAAA,EAAAA,IAAA4oB,OAAAA,MAAA5oB,EAAA,EAAA;AAAA6oB,MAAAA;AAAA7oB,IAAA,EAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAEWsmB,MAAAA,CAAC,cAAc,GAAC7oB,EAAAA,EAAAA,IAAA6oB,OAAAA,MAAA7oB,EAAA,EAAA;AAAA8oB,MAAAA;AAAA9oB,IAAAA,EAAAA,MAAAkQ,KAOtB4Y,MAAA5Y,EAAE,0CAA0C,GAAClQ,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA8oB,OAAAA,MAAA9oB,EAAA,EAAA;AACnD+oB,QAAAA,MAAAxC,aAAa,YAASyC,mBAAAC;AAAiCC,MAAAA;AAAAlpB,IAAA,EAAA,MAAA8oB,OAAA9oB,EAAA+oB,EAAAA,MAAAA,OAAA/oB,EAAAwmB,EAAAA,MAAAA,sBAAAxmB,EAAAA,EAAAA,MAAAumB,YAJ/D2C,UAAAA,wBAAC,QACa,EAAA,eAAA,2BACG3C,iBAAAA,UACH,cAAAuC,KACN,MAAAC,KACD,MAAA,SACIvC,SAAAA,oBACK,cAAA,KAAA,CACd,GAAAxmB,EAAAA,EAAAA,IAAA8oB,KAAA9oB,EAAAA,EAAAA,IAAA+oB,KAAA/oB,EAAAA,EAAAA,IAAAwmB,oBAAAxmB,EAAAA,EAAAA,IAAAumB,UAAAvmB,EAAAA,EAAAA,IAAAkpB,OAAAA,MAAAlpB,EAAA,EAAA;AAAAmpB,MAAAA;AAAAnpB,IAAAuoB,EAAAA,MAAAA,OAAAvoB,EAAAA,EAAAA,MAAA4oB,OAAA5oB,EAAA,EAAA,MAAAkpB,OA1BNC,UAAAA,wBAAC,MAAW,EAAA,OAAA,UAAc,MAAA,QAAY,KAAC,GACrC,cAAA,wBAAC,SACC,EAAA,SAAA,MAEK,KAAAZ,KAIH,SAAAK,KAMkB,oBAAAC,KACV,WAAA,UACV,QAAA,MAEAK,UASF,IAAA,CAAA,EAAA,CACF,GAAOlpB,EAAAA,EAAAA,IAAAuoB,KAAAvoB,EAAAA,EAAAA,IAAA4oB,KAAA5oB,EAAAA,EAAAA,IAAAkpB,KAAAlpB,EAAAA,EAAAA,IAAAmpB,OAAAA,MAAAnpB,EAAA,EAAA;AAAAopB,MAAAA;AAAAppB,IAAAA,EAAAA,MAAA+lB,yBAAA/lB,EAAAwhB,EAAAA,MAAAA,+BAAAxhB,EAAAyhB,EAAAA,MAAAA,6BAAAzhB,EAAA,EAAA,MAAA0hB,cAAA1hB,EAAAA,EAAAA,MAAAke,eAAAle,EAAA,EAAA,MAAAie,wBAENmL,MAAArD,6BACE,wBAAA,MAAA,EAAW,OAAA,UAAc,MAAA,QAAY,KAAA,GACpC,cAAC,wBAAA,kBAAA,EAC8BvE,6BACFC,2BACLxD,sBACVyD,YACCxD,YAAW,CAAA,EAE5B,CAAA,GACDle,EAAAA,EAAAA,IAAA+lB,uBAAA/lB,EAAAA,EAAAA,IAAAwhB,6BAAAxhB,EAAAA,EAAAA,IAAAyhB,2BAAAzhB,EAAAA,EAAAA,IAAA0hB,YAAA1hB,EAAAA,EAAAA,IAAAke,aAAAle,EAAAA,EAAAA,IAAAie,sBAAAje,EAAAA,GAAAA,IAAAopB,OAAAA,MAAAppB,EAAA,GAAA;AAAAqpB,MAAAA;AAAA,SAAArpB,EAAA4P,GAAAA,MAAAA,OAAA5P,EAAA,GAAA,MAAAsoB,OAAAtoB,EAAAmpB,GAAAA,MAAAA,OAAAnpB,EAAA,GAAA,MAAAopB,OAAAppB,EAAAA,GAAAA,MAAAqD,MA/JHgmB,UAAC,yBAAA,MAAA,EAAW,OAAA,UAAc,KAAA,GAAa,UAAA,GAAU,OAAAnmB,IAC9CG,UAAAA;IAAAA;IAeDuM;IAkDA0Y;IAqDAa;IA8BCC;EAAAA,EAAAA,CAWH,GAAOppB,EAAAA,GAAAA,IAAA4P,KAAA5P,EAAAA,GAAAA,IAAAsoB,KAAAtoB,EAAAA,GAAAA,IAAAmpB,KAAAnpB,EAAAA,GAAAA,IAAAopB,KAAAppB,EAAAA,GAAAA,IAAAqD,IAAArD,EAAAA,GAAAA,IAAAqpB,OAAAA,MAAArpB,EAAA,GAAA,GAhKPqpB;AAgKO;AAKJ,SAAAC,cAAAvpB,OAAA;;AAAAC,QAAAA,QAAAC,iCAAA,CAAA,GAILspB,gBAAAjV,QAIAkV,mBAAwBzpB,WAAKkV,YAALlV,mBAAK+a;AAAmB3a,MAAAA;AAAAH,IAAAwpB,CAAAA,MAAAA,mBAAAxpB,EAAAA,CAAAA,MAAAD,SACjCI,KAAAqpB,sBACb,wBAAC,iBAAA,EAAA,GAAoBzpB,OAAsBwpB,cAAa,CAAA,IAExDA,cAAcxpB,KAAK,GACpBC,EAAAA,CAAAA,IAAAwpB,iBAAAxpB,EAAAA,CAAAA,IAAAD,OAAAC,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAJD,QAAAypB,SAAetpB;AAIdC,MAAAA;AAAAJ,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGmDnC,KAAA;IAAA+kB,UAAW;EAAA,GAAWnlB,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAA0C,MAAAA;AAAA1C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAC1CG,KAAA;IAAAgnB,WAAA;EAAA,GAAc1pB,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAA6C,MAAAA;AAAA,SAAA7C,EAAAA,CAAAA,MAAAypB,UAD5C5mB,SAAC,wBAAA,MAAA,EAAU,MAAA,QAAgB,SAAA,GAAG,cAAW,MAAS,OAAAzC,IAChD,cAAC,wBAAA,MAAA,EAAW,OAAA,UAAgB,OAAAsC,IAAAA,UAAAA,OAAAA,CAE5B,EACF,CAAA,GAAO1C,EAAAA,CAAAA,IAAAypB,QAAAzpB,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAJP6C;AAIO;AApBJ,SAAAyR,OAAA0D,SAAA;AAKI,aAAA,wBAAC,sBAAyBjY,EAAAA,GAAAA,QAAS,CAAA;AAAA;AApPjB,SAAAO,QAAAqC,OAAA;AA+C+BA,SAAAA,MAAKgnB,QAAS,SAAS;AAAC;AA/CvD,SAAAxjB,SAAAyjB,SAAA;AAgD8BjnB,SAAAA,QAAKgnB,QAAS,QAAQ;AAAC;AAhDrD,SAAAtjB,SAAAwjB,SAAA;AAAA,SAkDzBlnB,QAAKgnB,QAAA;IAAA9nB,QAAkB;EAAA,CAAa;AAAC;AAlDZ,SAAAmS,SAAA8V,SAAA;AAAA,SAoDiCnnB,QAAKgnB,QAAA;IAAA9nB,QAAkB;EAAA,CAAY;AAAC;AApDrE,SAAAqS,SAAA6V,SAAA;AAAA,SAuDdpnB,QAAKxB,QAAAG;AAAA;AAvDS,SAAA8S,OAAA4V,SAAA;AAuEkCrnB,SAAAA,QAAKsnB,OAAQ,MAAM;AAAC;AClCnF,IAAMC,aAAa3M,OAAOC,OAAOjI,IAAI;AAArC,IA2Ba4U,cAAU3pB,wBACrB4Q,0BAA4C,SAA0BrR,OAAOwc,cAAc;AACnF,QAAA;IACJkN;IACA/H;IACA0I;IACAjE;IACAjI;IACAqI;IACA8D;IACAjE;IACAzK;EAAAA,IACE5b,OAEE,CAACuqB,mBAAmBC,oBAAoB,QAAIxf,wBAAoC,IAAI,GACpFyf,iBAAiBxO,wBACrBsO,sBAAsB,OAAOpM,cAAcoM,iBAC7C,GACMxL,iBAAa8D,uBAAQ,MAAM;AACzBxhB,UAAAA,MAAM,IAAIgd,IAAIsD,UAAU;AAE9B,WAAKtgB,IAAIkQ,aAAapL,IAAImY,gCAAgC,KACxDjd,IAAIkQ,aAAalL,IAAIiY,kCAAkCmM,cAAc,IAGnEH,0BAA0BjpB,IAAIkQ,aAAapL,IAAIukB,oCAAoC,MAErFrpB,IAAIkQ,aAAalL,IACfskB,qCACA,cACF,GAGEL,0BAA0B,CAACjpB,IAAIkQ,aAAapL,IAAIukB,oCAAoC,KACtFrpB,IAAIkQ,aAAalL,IAAIqkB,sCAAsCJ,sBAAsB,GAG5EjpB;EACN,GAAA,CAACsgB,YAAY8I,gBAAgBH,sBAAsB,CAAC;AAEvD9pB,+BAAU,MAAM;AAIV6pB,0BAAsB,eAIxBG,qBAAsB/e,CAAAA,SAAUA,SAAS,OAAO0S,cAAc1S,IAAK;EAAA,GAEpE,CAAC4e,mBAAmBlM,WAAW,CAAC;AAE7B,QAAA;IAAChO;EAAAA,IAAKC,eAAeC,2BAA2B,GAChD;IAACwF;EAAAA,IAAWC,oBAAoB,GAChC8U,uBAAuBC,wBAAwB,GAC/CvZ,UAAM5O,sBAAiC,IAAI,GAE3CooB,oBAAAA,wBAAiB,eAAkB9qB,EAAAA,GAAAA,OAAO,WAAWsR,KAAK,SAASoY,OAAAA,CAAU;AAIjFlN,yCAAAA,cACA,MAAMlL,IAAIzO,OACZ;AAEM+jB,QAAAA,YAAY9K,YAChBuK,iBACCzjB,CAAAA,UAAUA,MAAMgnB,QAAQ,SAAS,KAAKhnB,MAAMgnB,QAAQ;IAAC9nB,QAAQ;EAAY,CAAA,CAC5E,GAEM,CAACipB,UAAUC,WAAW,QAAIhgB,wBAAS,KAAK,GACxC8b,eAAehL,YAAYuK,iBAAkBzjB,CAAAA,YACjDA,QAAMgnB,QAAQ;IAAC9nB,QAAQ;EAAA,CAAa,CACtC,GACM,CAACmpB,kBAAkBC,mBAAmB,QAAIlgB,wBAAS,KAAK,GACxDmgB,eAAevE,aAAaE,gBAAgBV,uBAAuB,cAEnE/P,kBAAc4M,2BAAY,MAAM;AAC/B3R,QAAIzO,YAITyO,IAAIzO,QAAQ+Z,MAAMmC,WAAWkB,SAAAA,GAE7BoG,gBAAgBK,KAAK;MAACjiB,MAAM;IAAA,CAAgB;EAAA,GAC3C,CAAC4hB,iBAAiBtH,UAAU,CAAC,GAC1BqM,2BAAuBnI,2BAAY,MAAM;AAC7CoI,sBAAkB,IAAI;EAAA,GACrB,CAAE,CAAA,GAEC,CAACC,gBAAgBD,iBAAiB,QAAIrgB,wBAAS,KAAK,GACpD,CAACugB,8BAA8BC,8BAA8B,QAAIxgB,wBAAS,KAAK;AACrFxK,+BAAU,MAAM;AACd,QAAIomB,EAAaE,aAAAA,kBAIbV,uBAAuB,gBAAgBA,uBAAuB,iBAAgB;AAC1EvhB,YAAAA,UAAUI,WAAW,MAAM;AAC/BumB,uCAA+B,IAAI;MAAA,GAClC,GAAK;AACD,aAAA,MAAMxmB,aAAaH,OAAO;IAAA;EACnC,GAEC,CAACuhB,oBAAoBQ,WAAWE,YAAY,CAAC,OAEhDtmB,yBAAU,MAAM;AACVomB,QAAAA,EAAAA,aAAaE,gBAAgB,CAACyE,+BASlC;AAAA,UANInF,uBAAuB,gBACzB8E,oBAAoB,KAAK,GACzBM,+BAA+B,KAAK,GACpCR,YAAY,KAAK,GACjBK,kBAAkB,KAAK,IAErBjF,uBAAuB,cAAc;AACjCvhB,cAAAA,YAAUI,WAAW,MAAM;AAC/B+lB,sBAAY,IAAI,GAEhBhW,QAAQ1T,MACN,gGACF;QAAA,GACCmqB,+BAA+B;AAC3B,eAAA,MAAMzmB,aAAaH,SAAO;MAAA;AAEnC,UAAIuhB,uBAAuB,gBAAgB;AACnCvhB,cAAAA,YAAUI,WAAW,MAAM;AACnB,sBAAA,IAAI,GAChBimB,oBAAoB,IAAI;QAAA,GACvBO,+BAA+B;AAC3B,eAAA,MAAMzmB,aAAaH,SAAO;MAAA;IACnC;EAAA,GAEC,CAAC+hB,WAAWR,oBAAoBU,cAAcyE,4BAA4B,CAAC;AAExEG,QAAAA,mBAAezI,2BAAY,MAAM;AACrCoD,oBAAgBK,KAAK;MAACjiB,MAAM;IAAA,CAAgB;EAAA,GAC3C,CAAC4hB,eAAe,CAAC,GAEdsF,+BAA2B9I,uBAAQ,OAEpC+D,aAAcR,uBAAuB,gBAAgB,CAACU,iBAAkB,CAACwE,gBAE3E,CAACA,gBAAgB1E,WAAWE,cAAcV,kBAAkB,CAAC,GAE1DwF,2BAAuBC;;QAE3B5I,2BAAY,MAAM,MAAM;IAAC,GAAG,CAAA,CAAE;IAC9B,MAAM6I,IAAIC,SAAS,8BAA8B;EAAA,GAE7CC,uBAAmBnJ,uBAAQ,MACxB;IACL8I,2BAA2B,eAAe;IAC1C/E,YAAY,cAAc;;IAE1BgF,uBAAuB,KAAKpF;IAC5B+E,gCAAgC,CAACD,iBAAiB,aAAa;EAAA,GAEhE,CACDM,sBACAN,gBACA1E,WACA+E,0BACAJ,8BACA/E,QAAQ,CACT,GAEK,CAACyF,iBAAiBC,kBAAkB,QAAIlhB,wBAASwb,QAAQ,GACzD,CAAC2F,aAAaC,cAAc,QAAIphB,wBAASqhB,eAAe7F,QAAQ,CAAC;AACvEhmB,+BAAU,MAAM;AACVorB,QAAAA,wBAAwBpF,aAAayF,iBAAiB;AACxD,YAAMK,SAASA,MAAM;AACnBJ,2BAAmB1F,QAAQ,GAC3B4F,eAAeC,eAAe7F,QAAQ,CAAC;MACzC;AAEE,OAACoE,wBACD,yBAAyB7U,YACzB,OAAOA,SAASwW,uBAAwB,aAExCxW,SAASwW,oBAAoB;;QAE3BD,QAAQA,UAAME,4BAAU,MAAMF,OAAAA,CAAQ;QACtCxrB,OAAO,CAAC,wBAAwB;MACjC,CAAA,IAEDwrB,OAAO;IAAA;EAAA,GAGV,CAACV,sBAAsBhB,sBAAsBqB,iBAAiBzF,QAAQ,CAAC;AAEpEiG,QAAAA,QAAQ3K,SAAS,GACjB9F,eAAeL,iBAAiBC,aAAa,GAC7C,CAAC8Q,aAAaC,cAAc,QAAI3hB,wBAAyB,KAAK,GAC9D,CAAC4hB,kBAAkB,QAAI5hB,wBAAS,oBAAI6hB,IAAa,CAAA,GACjDC,0BAA0BC,eAAgBC,CAA2B,mBAAA;AACzE,QAAIhR,aAAalV,KAAMmmB,CAAAA,UAAUA,MAAM9M,KAAK6M,cAAc,CAAC,GAAG;AAC5DL,qBAAeK,cAAc;AAC7B;IAAA;AAEEJ,uBAAmBlhB,IAAIshB,cAAc,MACzCJ,mBAAmBM,IAAIF,cAAc,GACrChY,QAAQC,KAAK,4CAA4C;MAAC+X;IAAAA,CAAe,GACzEP,MAAM7K,KAAK;MACTsB,UAAU;MACV/hB,IAAI,uCAAuC6rB,cAAc;MACzD7J,QAAQ;MACRgK,UAAUC,IAAAA;MACVlX,OAAO/F,EAAE,yCAAyC;MAClDxO,iBACG,wBAAA,WAAA,EACC,GACA,SAAQ,iDACR,YAAY;QAAC+T,MAAM;MAAA,GACnB,QAAQ;QACN0I,cAAcW,WAAWC;QACzBgO;MAAAA,EACA,CAAA;IAAA,CAGP;EAAA,CACF,GACKxS,WAAW6S,wBAAAA,GACXC,gBAAgBP,eAAgB1rB,CAAgB,UAAA;AACpD,QAAI,CAACqrB,YAAa;AAClB,UAAMa,UAAU,IAAIlP,IAAIhd,OAAKqrB,WAAW;AAC/B,aAAA,GAAGA,WAAW,GAAGa,QAAQhP,QAAQ,GAAGgP,QAAQ/O,MAAM,GAAG+O,QAAQC,IAAI,EAAE;EAAA,CAC7E;AACDhtB,aAAAA,yBAAU,MAAM;;AACd,QAAI,CAACksB;AACH;AAEIjrB,UAAAA,UAAS6P,SAAIzO,YAAJyO,mBAAamc;AAC5B,QAAI,CAAChsB;AACH;AAEF,UAAMqiB,aAAa4J,iBAAiB;MAACtP,cAAcsO;IAAAA,CAAY;AAC/D5I,eAAW6J,UAAUlsB,MAAM;AACrBtB,UAAAA,UAAU2jB,WAAW8J,cACzB;MACElS,MAAM;MACNmS,WAAW;MACXC,WAAW;IAAA,GAEbC,wBAA0E,EAAEC,QAAQ;MAClFhtB,QAAQitB,0BAAsD;IAAA,CAC/D,CACH;AAEQ3tB,YAAAA,GAAG,2BAA4BoF,CAAS,SAAA;AAC9C4nB,oBAAc5nB,KAAKrE,GAAG;IAAA,CACvB;AACK6sB,UAAAA,OAAO/tB,QAAQguB,MAAM;AAE3B,WAAO,MAAM;AACN,WAAA,GACLrK,WAAWsK,QAAQ;IACrB;EAAA,GACC,CAAC1B,WAAW,CAAC,OAChBlsB,yBAAU,MAAM;AACV4lB,QAAAA,uBAAuB,gBAAgBA,uBAAuB,gBAAgB;AAC1EiI,YAAAA,WAAWC,YAAY,MAAM;;AACjChd,wBAAIzO,YAAJyO,mBAAamc,kBAAbnc,mBAA4Bid;UAC1B;YAACC,QAAQ;YAAmB7kB,MAAM;YAAgBlF,MAAM;UAAqB;;;;UAI7E;;MAED,GAAA,GAAK,GAEFqf,eAAa,IAAIC,gBAAgB;AAChC/J,aAAAA,OAAAA,iBACL,WACA,CAAC;QAACtU,MAAAA;MAAAA,MAAiC;AAK/BA,kBACA,OAAOA,UAAS,YAChB,YAAYA,UACZA,OAAK8oB,WAAW,qBAChB,UAAU9oB,UACVA,OAAKjB,SAAS,2BACd,UAAUiB,UACV,OAAOA,OAAKA,QAAS,YACrBA,OAAKA,QACL,YAAYA,OAAKA,QACjB,OAAOA,OAAKA,KAAKsZ,UAAW,YAE5B8N,wBAAwBpnB,OAAKA,KAAKsZ,MAAM;MAAA,GAG5C;QAACmF,QAAQL,aAAWK;MACtB,CAAA,GAEO,MAAM;AACAU,qBAAAA,MAAAA,GACX4J,cAAcJ,QAAQ;MACxB;IAAA;EACF,GAEC,CAACjI,oBAAoB2E,QAAQ,CAAC,OAG/B,wBAAC,cAAa,EAAA,YAAYH,uBAAuB;IAACuC,UAAU;EAAC,IAAIlpB,QAC/D,cAAA,yBAAC,2BACE6mB,EAAAA,UAAAA;IAAAA;QACD,wBAAC,MAAA,EAAK,MAAM,GAAG,MAAK,eAClB,cAAA,yBAAC,MACC,EAAA,OAAM,UACN,QAAO,QACP,SAAQ,UACR,UAAUc,uBAAuBK,kBAAkBzF,cAAc,YAAY,IAAI,GACjF,QAAO,UACP,OAAO;MACLpB,UAAU;MACVvL,QAAQsR,eAAe,SAASlnB;IAGlC,GAAA,UAAA;UAAA,wBAAC,iBACE,EAAA,UAAA,CAACgnB,oBACF,CAACrE,aACD,CAACE;MAEDyE,gCACA,CAACD,qBACE,wBAAA,YAAA,EACC,SAAQ,WACR,SAAQ,WACR,MAAK,QACL,UAAUoD,iBACV,SAAQ,UACR,OAAM,UACN,OAAO;QACLC,OAAO;QACPvJ,UAAU;QACVwJ,gBAAgB7D,WACZ,4CACA;QACH,YAAyB;;QAE1B8D,sBAAsB9D,WAClB,4CACA;QACJ+D,kBAAkB;QAClBnO,QAAQ;MACV,GAEA,cAAC,yBAAA,MAAA,EACC,OAAO;QAAC,GAAGoO,MAAMvI,QAAQ;MAAA,GACzB,SAAQ,UACR,OAAM,UACN,WAAU,UACV,KAAK,GAEJuE,UAAAA;QACC,gBAAA,wBAAC,QACC,EAAA,UAAQ,MACR,MAAK,SACL,MAAM5a,EAAE,oCAAoC,GAC5C,OAAO;UAACoV,SAAS;QAAA,EAAA,CAEpB;YACD,wBAAC,MAAA,EACC,QAAQ,GACR,MAAMwF,WAAW,YAAY,WAC7B,SAAS,GACT,QAAQ,GAER,cAAA,yBAAC,MAAA,EAAK,SAAQ,UAAS,OAAM,UAAS,WAAU,UAAS,KAAK,GAC5D,UAAA;cAAC,wBAAA,SAAA,EAAQ,OAAK,KAAA,CAAA;cACd,wBAAC,MAAA,EAAK,OAAK,MAAC,MAAM,GACfA,UAAAA,WACG5a,EAAE,wBAAwB;YAAC/O,SAAS;UAAA,CAAU,IAC9C+O,EAAE,wBAAwB;YAAC/O,SAAS;UAAA,CAAa,EACvD,CAAA;QAAA,EAAA,CACF,EACF,CAAA;QACC2pB,gBACC;UAAC;UAAA;YAEC,MAAK;YACL,SAASK;YACT,MAAMjb,EAAE,oCAAoC;UAAA;QAAA;MAGlD,EAAA,CAAA,EACF,CAAA,KACGyW,aAAcR,uBAAuB,gBAAgB,CAACU,iBACzD,CAACwE,qBACA,wBAAA,YAAA,EACC,SAAQ,WACR,SAAQ,WACR,MAAK,QACL,UAAUoD,iBACV,SAAQ,UACR,OAAM,UACN,OAAO;QACLC,OAAO;QACPvJ,UAAU;;MAEZ,GAEA,cAAC,yBAAA,MAAA,EACC,OAAO;QAAC,GAAG2J,MAAMvI,QAAQ;MAAA,GACzB,SAAQ,UACR,OAAM,UACN,WAAU,UACV,KAAK,GAEL,UAAA;YAAC,wBAAA,SAAA,EAAQ,OAAK,KAAA,CAAA;YAAA,wBACb,MAAK,EAAA,OAAK,MAAC,MAAM,GACfrW,UAAAA,EAAE,wBAAwB;UAAC/O,SAAS;QAAA,CAAU,EACjD,CAAA;MAAA,EAAA,CACF,EAAA,CACF,IACE6pB,oBAAoB,CAACK,qBACvB,wBAAC,YAAA,EACC,SAAQ,WACR,SAAQ,WACR,MAAK,QACL,UAAU0D,eACV,SAAQ,UACR,OAAM,UACN,OAAO;QACLC,YAAY;QACZN,OAAO;QACPvJ,UAAU;MAAA,GAGZ,cAAA,wBAAC,WACC,EAAA,MAAM,GACN,SAASjV,EAAE,qCAAqC,GAChD,SAASkG,aACT,kBAAkB+U,sBAEjBvV,UAAAA,eAEIuQ,yBAAAA,6BAAAA,EAAAA,UAAAA;QAAAA,uBAAuB,mBACtB,wBAAC,MAAK,EAAA,SAAS,GAAG,QAAQ,GAAG,MAAK,YAChC,cAAA,yBAAC,OAAM,EAAA,OAAO,GACZ,UAAA;cAAA,wBAAC,OAAA,EAAM,OAAK,MAAC,MAAM,GAChBjW,UAAAA,EAAE,+CAA+C,EAAA,CACpD;cACC,wBAAA,MAAA,EAAK,MAAM,GACTA,UAAAA,EAAE,kBAAkB;YAAC/O,SAASglB;UAAAA,CAAmB,EACpD,CAAA;QAAA,EAAA,CACF,EACF,CAAA;QAGDiE,sBAAsB,mBACpB,wBAAA,MAAA,EAAK,SAAS,GAAG,QAAQ,GAAG,MAAK,YAChC,cAAC,yBAAA,OAAA,EAAM,OAAO,GACZ,UAAA;cAAA,wBAAC,OAAA,EAAM,OAAK,MAAC,MAAM,GAChBla,UAAAA,EAAE,8CAA8C,EAAA,CACnD;cACC,wBAAA,MAAA,EAAK,MAAM,GACTA,UAAAA,EAAE,kBAAkB;YAAC/O,SAASipB;UAAAA,CAAkB,EACnD,CAAA;QAAA,EAAA,CACF,EACF,CAAA;MAEJ,EAAA,CAAA,EAEJ,CAAA,EAAA,CACF,IACE,KACN,CAAA;UACA,wBAAC,QAAA,EACC,SAAS2B,kBACT,SAAS,CAAC,YAAY,GACtB,QAAQN,cACR,cAAcC,0BACd,KACA,KAAK5M,WAAWkB,SAAAA,GAChB,OAAOkM,aACP,UAAUE,eAAe,CAAA;IAAA,EAAA,CAE7B,EACF,CAAA;EAAA,EAAA,CACF,EACF,CAAA;AAEJ,CAAC,CACH;AACAjC,QAAQtE,cAAc;AAEtB,IAAMiJ,QAAQ;EACZG,SAAS;IACP9mB,OAAO;IACP0O,QAAQ;EACV;EACAqY,QAAQ;IACN/mB,OAAO;IACP0O,QAAQ;EAAA;AAEZ;AATA,IAWM4X,kBAAkB;EACtBtsB,SAAS;IAACmjB,SAAS;EAAC;EACpB9I,SAAS;IAAC8I,SAAS,CAAC,GAAG,GAAG,CAAC;EAAC;EAC5B6J,MAAM;IAAC7J,SAAS,CAAC,GAAG,GAAG,CAAC;EAAA;AAC1B;AAfA,IAiBMyJ,gBAAgB;EACpB5sB,SAAS;IAACmjB,SAAS;EAAC;EACpB9I,SAAS;IAAC8I,SAAS,CAAC,GAAG,GAAG,CAAC;EAAC;EAC5B6J,MAAM;IAAC7J,SAAS,CAAC,GAAG,GAAG,CAAC;EAAA;AAC1B;AArBA,IAuBM8G,iBAAiB;EACrB6C,SAAS;IACP,GAAGH,MAAMG;IACTG,WAAW;EACb;EACAF,QAAQ;IACN,GAAGJ,MAAMI;IACTE,WAAW;EACb;EACAJ,YAAY;IACV1J,SAAS;IACT+J,OAAO;EACT;EACArtB,MAAM;IACJqtB,OAAO;EACT;EACAntB,WAAW;IACTmtB,OAAO,CAAC,GAAG,GAAG,GAAG,IAAI;EACvB;EACAC,QAAQ;IACNhK,SAAS,CAAC,GAAG,GAAG,CAAC;IACjB+J,OAAO;EACT;EACAvE,UAAU;IACRxF,SAAS,CAAC,GAAG,GAAG,CAAC;EAAA;AAErB;AClnBO,SAASiK,iBAAiB;AAC/B,MAAIC,SAAS;AAEb,SAAO,IAAI1qB,SAAsB;AAC1B0qB,eAEHza,QAAQC,KAAK,GAAGlQ,IAAI,GACpB0qB,SAAS;EAEb;AACF;ACIA,IAAMC,qCAAqCF,eAAe;AAMnDG,SAAAA,mBAAAxR,aAAAyR,eAAA;AAAA3vB,QAAAA,QAAAC,iCAAA,CAAA;AAOL2vB,yBAAuB1R,WAAW;AAAC/d,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAE4BpC,KAAA,CAAA,GAAEH,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAjE,QAAA,CAAA6vB,WAAAC,YAAA,QAAkC/kB,wBAA6B5K,EAAE;AAACC,MAAAA;AAAAJ,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KACKnC,KAAA,CAAA,GAAEJ,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAzE,QAAA,CAAA+vB,eAAAC,gBAAA,QAA0CjlB,wBAA6B3K,EAAE,GAIzE6vB,aAAextB,sBAA2B,EAAE;AAACC,MAAAA;AAAA1C,IAAAA,CAAAA,MAAA2vB,iBAI3CjtB,KAAAA,CAAAI,KAAAotB,eAAArtB,QAAA;AACE,UAAAstB,aADkDttB,QAAsCmB,SAAAA,CAAAA,IAAtCnB,KACjBmI,OAAA1K,OAYhC;AAID8vB,KAFiBlS,kBAAgB,cAAc4R,eAAeE,kBAEtDK,CAAA,UAAA;AAEN,YAAA3kB,OAAA,CAAA;AAA+C,iBAC1CoK,aAAkBqa;AAChBra,aAAAA,UAAQhD,GAAA,IAAQgD;AAInBma,UAAAA,OAAMrtB,YAAa+sB,cAAa/sB,QAAAxB;AAC5BwB,eAAAA,OAAAA,UAAW+sB,cAAa/sB,QAAAxB,KAAA;UAAA,CACrB0B,GAAG,GAAG4I;QAAI;AAIrBF,YAAAA,OAAa6kB,MAAMvtB,GAAG;AAAC,iBAClBwtB,uBAAAA,SAAQ9kB,MAAME,IAAI,IAKhB2kB,QALiB;QAAA,GACXA;QAAK,CAAGvtB,GAAG,GAAG4I;MAAI;IAAA,CAKhC;EAAC,GACH1L,EAAAA,CAAAA,IAAA2vB,eAAA3vB,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAzCH,QAAAuwB,qBAA2B7tB;AA2C1BG,MAAAA;AAGC2tB,QAAAA,aAAmBtS,gBAAgB,cAAc2R,YAAYE;AAAa7sB,MAAAA;AAAAlD,MAAAA,EAAAA,CAAAA,MAAAwwB,YAAA;AAC1EC,UAAAA,kBAAwB9f,OAAAhH,OAAc6mB,UAAU,EAACtmB,OAAA/D,UAAAA,CAAAA,CAK5C;AAEEwK,SAAAA,OAAAhH,OAAc8mB,eAAe,GAACzwB,EAAAA,CAAAA,IAAAwwB,YAAAxwB,EAAAA,CAAAA,IAAAkD;EAAA;AAAAA,SAAAlD,EAAA,CAAA;AAA9BkD,OAAAA;AATT,QAAAmX,kBAAwBxX;AAUmBQ,MAAAA;AAAA,SAAArD,EAAAqa,CAAAA,MAAAA,mBAAAra,EAAAA,CAAAA,MAAAuwB,sBAEpCltB,KAAA,CAACgX,iBAAiBkW,kBAAkB,GAACvwB,EAAAA,CAAAA,IAAAqa,iBAAAra,EAAAA,CAAAA,IAAAuwB,oBAAAvwB,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA,GAArCqD;AAAqC;AAzEvC,SAAA8C,SAAA2G,KAAA4jB,SAAA;AAgED/f,SAAAA,OAAAhH,OAAc0mB,OAAK,EAACM,QAAAC,CAAA,QAAA;AACdA,QAAAA,IAAG9d,GAAA,IAAQ8d;EAChB,CAAA,GACM9jB;AAAG;AAnET,SAAAxM,QAAAuwB,gBAAA;AAoBK,SAAA,gBAAgBA,kBAAkBA,eAAcC,cAIlDrB,mCACE,4EACAoB,cACF,GAAC,SAGIA;AAAc;ACjC7B,SAASE,QAAcC,KAA0B7vB,SAAe;AAC9D,SAAO6vB,eAAeC,WAAWD,IAAI7vB,OAAO,IAAI6vB;AAClD;AAEA,SAASE,mBACPC,UACAhwB,SACoB;;AACpB,MAAIgwB,SAASC,SAAS;AACpB,UAAMpmB,UAASmmB,cAASC,QAAQjwB,OAAO,MAAxBgwB,mBAA2BnmB;AAC1C,WAAOA,SACH;IACJA,MAAM,qBACFhH;EAAAA;AAGN,SAAI,UAAUmtB,WACL;cACGA,SAAS3sB,IAAI,sBAGlB;IACLusB,QAAQI,SAASnmB,QAAQ7J,OAAO,CAAC;AACrC;AAEA,SAASkwB,oBACPF,UACAhwB,SACwB;;AACxB,SAAIgwB,SAASC,YACJD,cAASC,QAAQjwB,OAAO,MAAxBgwB,mBAA2B1gB,WAAUtP,QAAQsP,SAGlD,UAAU0gB,WACL,CAGFJ,IAAAA,QAAQI,SAAS1gB,QAAQtP,OAAO,KAAKA,QAAQsP;AACtD;AAEgB6gB,SAAAA,gBAAgBC,OAAanwB,KAA+C;AAC1F,QAAMowB,SAAS7qB,MAAMC,QAAQ2qB,KAAK,IAAIA,QAAQ,CAACA,KAAK;AAEpD,OAAKA,SAASC,QAAQ;AACpB,QAAIzS,SACAxM,OAAOgf;AAGX,QAAI,OAAOA,SAAU;AACf,UAAA;AACIE,cAAAA,WAAW,IAAIrT,IAAImT,KAAK;AACrBE,kBAAAA,SAAS1S,QAClBxM,OAAOkf,SAASnT;MAAAA,QACV;MAAA;AAMNS,QAAAA,EAAAA,WAAU3d,IAAI2d,WAAWA;AAEzB,UAAA;AAEIoF,cAAAA,SADUuN,MAA8Bnf,MAAM;UAACof,QAAQC;QAAAA,CAAmB,EACzDxwB,IAAIkd,QAAQ;AACnC,YAAI6F,QAAQ;AAEJ,gBAAA;YAAC1T;YAAQ8B,MAAAA;UAAAA,IAAQ4R;AAChB,iBAAA;YAACpF,QAAAA;YAAQtO;YAAQ8B,MAAAA;UAAI;QAAA;MAC9B,QACU;AACV,cAAM,IAAIpO,MAAM,IAAIotB,KAAK,gCAAgC;MAAA;EAC3D;AAGJ;AAEO,SAAAM,gBAAA9xB,OAAA;;AAAAC,QAAAA,QAAAC,iCAAA,EAAA,GAOL;IAAAsa;IAAAuX;IAAAvf;IAAA4L;IAAA4T,WAAA5xB;EAAAA,IAA0EJ;AAAKK,MAAAA;AAAAJ,IAAAA,CAAAA,MAAAG,MAAvBC,KAAAD,OAAc6D,SAAAA,CAAd7D,IAAAA,IAAcH,EAAAA,CAAAA,IAAAG,IAAAH,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAAd,QAAA+xB,YAAA3xB,IACxD;IAAAuC,OAAAsP;EAAA,IAA6BE,UAAAA,GAC7B;IAAAoF;EAAAA,IAA2BC,eAAe;AAAC9U,MAAAA;AAAA1C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAClBG,KAAA;IAAAsf,YAAAC;EAAAA,GAAyBjiB,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAAlD8hB,QAAAA,SAAeC,UAAUrf,EAAyB;AAACG,MAAAA;AAAA7C,IAAAuS,CAAAA,MAAAA,QAAAvS,EAAAA,CAAAA,MAAAiS,eAEjDpP,KAAA0P,UAAQN,uBAAWV,kBAAXU,mBAAWW,KAAAtS,aAAX2R,mBAAkE,OAAI,IAAEjS,EAAAA,CAAAA,IAAAuS,MAAAvS,EAAAA,CAAAA,IAAAiS,aAAAjS,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA;AADlFgyB,QAAAA,cACEnvB,IAEF,CAAA8S,mBAAAsc,oBAAA,QAAkDlnB,wBAAA/G,MAElD,GACAkuB,wBAA0BzvB,sBAAAuB,MAAoC;AAACd,MAAAA;AAAAlD,IAAAua,CAAAA,MAAAA,YAAAva,EAAAA,CAAAA,MAAA8xB,qBAEzB5uB,KAAAA,CAAA0tB,KAAAxvB,QAAA;;AAAA,KAChC,CAACwvB,OAAOsB,kBAAiBtvB,YAAaguB,IAAG9d,SAC3Cmf,qBAAoB;MAAAnc,UACR8a;MAAGre,MACPnR,IAAGkd;IAAAA,CACV,GACD4T,kBAAiBtvB,UAAWguB,2BAAG9d,OAQ3Bgf,MAAAA,kBAAiBK,GAAA,EAAM,MAAvBL,gBAAAA,IAAwB5wB,UAAS4wB,MAAAA,kBAAiBK,GAAM,EAAA,MAAvBL,gBAAAA,IAAwB5wB,QAC3DqZ,qCAAQ;MAAArZ,IACF0vB,2BAAG9d;MAAAtO,MACDosB,2BAAG5d;IAAAA;EAIhBhT,GAAAA,EAAAA,CAAAA,IAAAua,UAAAva,EAAAA,CAAAA,IAAA8xB,mBAAA9xB,EAAAA,CAAAA,IAAAkD,MAAAA,KAAAlD,EAAA,CAAA;AArBDoyB,QAAAA,iBAAuBtF,eAAe5pB,EAqBrC;AAACG,MAAAA;AAAArD,IAAAA,CAAAA,MAAA8hB,UAAA9hB,EAAAoyB,EAAAA,MAAAA,kBAAApyB,EAAAuX,EAAAA,MAAAA,oBAAAvX,EAAA,EAAA,MAAAgyB,eAAAhyB,EAAAA,EAAAA,MAAA+xB,aAAA/xB,EAAA,EAAA,MAAAme,gBAEQ9a,KAAAA,MAAA;AACR,UAAAgvB,QAAAjU,IAAAA,IAAoB4T,aAAa7T,YAAY;AAAC,QAE1C4T,UAASrpB,QAAA;AACPyb,UAAAA;AAKS,iBACRgN,YAAkBY,WAAS;AAC9B,cAAA5wB,UAAgBmwB,gBAAgBH,SAAQI,OAAQnwB,KAAG;AAAC,YAChDD,SAAO;AACTgjB,mBAAAA;YAAAA;YAAAA;UAAAA;AAAM;QAAA;MAAA;AAAA,UAKNA,QAAM;AACR,cAAAmO,QAAcpB,mBAAmB/M,OAAMgN,UAAWhN,OAAMhjB,OAAQ,GAChEsP,SAAe4gB,oBAAoBlN,OAAMgN,UAAWhN,OAAMhjB,OAAQ;AAAC,YAC/DmxB,OAAK;AACP,gBAAAzO,aAAAA,IAAAC,gBAAA,GACA7O,UAAA;YAAAiJ,aACe3G;YAAgB2M,QACrBL,WAAUK;YAAAM,KACb;UAAmB;AAG1B1C,iBAAAA,OAAMuC,MAC6BiO,OAAO7hB,QAAQwE,OAAO,EAACsd,KAAAC,CACzCJ,UAAAA,eAAexB,OAAKxvB,KAAG,CAAC,EAACqxB,MAAAtZ,CAAA,MAAA;AAElCA,yBAAChV,SAAqBgV,EAACsC,SAAU,iBACrCwW,qBAAoB;cAAAnc,UAAA9R;cAAAuO,MAA6BnR,MAAGkd;YAAAA,CAAU,GAC9D4T,kBAAiBtvB,UAAAoB;UAClB,CAAA,GAAC,MAAA;AAEF6f,uBAAUe,MAAO;UAAC;QAAA;MAAA;IAAA;AAKN5gB,yBAAAA,MAAU,GAC9BkuB,kBAAiBtvB,UAAAoB;EAElBhE,GAAAA,EAAAA,CAAAA,IAAA8hB,QAAA9hB,EAAAA,EAAAA,IAAAoyB,gBAAApyB,EAAAA,EAAAA,IAAAuX,kBAAAvX,EAAAA,EAAAA,IAAAgyB,aAAAhyB,EAAAA,EAAAA,IAAA+xB,WAAA/xB,EAAAA,EAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAAqD,MAAAA,KAAArD,EAAA,EAAA;AAAAsD,MAAAA;AAAAtD,SAAAA,EAAA8hB,EAAAA,MAAAA,UAAA9hB,EAAA,EAAA,MAAAuX,oBAAAvX,EAAAgyB,EAAAA,MAAAA,eAAAhyB,EAAA,EAAA,MAAA+xB,aAAA/xB,EAAAA,EAAAA,MAAAme,gBAAE7a,KAAA,CAACwe,QAAQvK,kBAAkBya,aAAaD,WAAW5T,YAAY,GAACne,EAAAA,EAAAA,IAAA8hB,QAAA9hB,EAAAA,EAAAA,IAAAuX,kBAAAvX,EAAAA,EAAAA,IAAAgyB,aAAAhyB,EAAAA,EAAAA,IAAA+xB,WAAA/xB,EAAAA,EAAAA,IAAAme,cAAAne,EAAAA,EAAAA,IAAAsD,MAAAA,KAAAtD,EAAA,EAAA,OA9CnEO,yBAAU8C,IA8CPC,EAAgE,GAE5DqS;AAAiB;AA1FnB,SAAArV,QAAAH,IAAA;AAYsC2C,QAAAA,CAAAA,GAAA,IAAA3C;AAAK,SAAK2C,QAAQ;AAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGjE,SAAS4vB,QAAQC,OAA+C;;AACrE,MAAIA,UAAU3uB;AACZ;AAGF,QAAM4uB,YAAWhB,wBAAmBe,KAAK,MAAxBf,mBAA2BiB,MAAM;AAE9CD,SAAAA,SAAS,CAAC,MAAM,YAClBA,SAASE,MAAAA,GAGJF,SAAS5sB,KAAK,GAAG;AAC1B;AAEO,SAAS+sB,UAAUC,SAAiD;AACzE,MAAIA,YAAYhvB;AAIhB,WAAOivB,WAAWjT,SAASkT,gBAAgBtB,mBAAmBoB,OAAO,CAAC,CAAC;AACzE;AAEO,SAASG,iBAAiBxwB,OAAyD;AACjF,SAAA;IACLzB,IAAIwxB,QAAQ/vB,MAAMzB,EAAE;IACpBqR,MAAMwgB,UAAUpwB,MAAM4P,IAAI;IAC1B/N,MAAM7B,MAAM6B;EACd;AACF;ACjBA,SAAS4uB,YAAoEliB,KAAW;AACtF,SAAOP,OAAOyB,YACZzB,OAAOC,QAAQM,GAAG,EAAElG,OAClB,CAAC,CAAGjI,EAAAA,KAAK,MAAMA,UAAUiB,UAAajB,UAAU,MAAMA,UAAU,IAClE,CACF;AACF;AAEO,SAASswB,UAAU;EACxBC;EACAC;EACAthB;EACAI;EACAsd;AASF,GAME;AACMlf,QAAAA,aAASmS,uBAAwC,MAAM;AACrD,UAAA;MAAC1hB;MAAIqR;MAAM/N;IAAAA,IAAQ2uB,iBAAiBlhB,WAAW;AAE9C,WAAA;MACL/Q;MACAsD;MACA+N;MACA8E,SAAShF,mBAAmBgF,WAAWic,kBAAkBtT,SAAS;MAClE9B,aAAa7L,mBAAmB6L;MAChCqI,UAAUlU,mBAAmBkU;MAC7BnT,SAASf,mBAAmBe;MAC5BogB,KAAKnhB,mBAAmBmhB;MACxBC,OAAOphB,mBAAmBohB;MAC1B7hB,UAAUS,mBAAmBT;MAC7B6E,gBAAgBpE,mBAAmBoE;MACnCid,MAAMrhB,mBAAmBqhB;;MAEzBC,SAASthB,mBAAmBshB;MAC5BC,aAAavhB,mBAAmBuhB;;MAEhCC,SAASxhB,mBAAmBwhB;MAC5BC,qBAAqBzhB,mBAAmByhB;IAC1C;EAAA,GACC,CAAC7hB,aAAaI,oBAAoBihB,iBAAiB,CAAC,GAEjDvhB,sBAAkB6Q,uBAAqC,MAC5CwQ,YAAY;IACzBhgB,SAAS3C,OAAO2C;IAChBb,MAAM9B,OAAO8B;IACbihB,KAAK/iB,OAAO+iB;IACZC,OAAOhjB,OAAOgjB;IACd7hB,UAAUnB,OAAOmB;IACjB6E,gBAAgBhG,OAAOgG;IACvBid,MAAMjjB,OAAOijB;;IAEbC,SAASljB,OAAOkjB;IAChBC,aAAanjB,OAAOmjB;;IAEpBC,SAASpjB,OAAOojB;IAChBC,qBAAqBrjB,OAAOqjB;EAC7B,CAAA,GAEA,CACDrjB,OAAOqjB,qBACPrjB,OAAOojB,SACPpjB,OAAO2C,SACP3C,OAAOmjB,aACPnjB,OAAO8B,MACP9B,OAAOkjB,SACPljB,OAAO+iB,KACP/iB,OAAOgjB,OACPhjB,OAAOmB,UACPnB,OAAOgG,gBACPhG,OAAOijB,IAAI,CACZ,GAEKpiB,mBAAesR,uBAAkC,MACtCwQ,YAAY;IACzBlV,aAAazN,OAAOyN;IACpB7G,SAAS5G,OAAO4G;IAChBkP,UAAU9V,OAAO8V;EAClB,CAAA,GAEA,CAAC9V,OAAOyN,aAAazN,OAAO4G,SAAS5G,OAAO8V,QAAQ,CAAC,GAElDwN,qBAAiBtxB,sBAAOwP,WAAW;AAEzC1R,+BAAU,MAAM;AACdwzB,mBAAenxB,UAAUqP;EAAAA,GACxB,CAACA,WAAW,CAAC;AAEhB,QAAM,CAAC6f,mBAAmBkC,oBAAoB,QAAIjpB,wBAAwB,CAACkH,WAAW,CAAC;AA+ChF,SAAA;IACLsI,cA9CeyI,2BACf,CAACiR,WAAWC,kBAAkB,CAAA,GAAIC,iBAAiB;AAE7CF,gBAAU/yB,OAAI+yB,UAAU/yB,KAAK6R,eAAekhB,UAAU/yB,EAAE;AAGtD,YAAA;QAACqQ,eAAec;QAAoB,GAAGJ;MAAAA,IAAe8hB,eAAenxB,SAGrEwxB,qBAAqB/hB,wBAAsB,CAAA,GAAInI,OAAO,CAAC4C,KAAK,CAAChK,KAAKC,KAAK,OAC3E+J,IAAIhK,GAAG,IAAkCC,OAClC+J,MACN,CAA0B,CAAA,GAGvBnK,QAAqBywB,YAAY;QACrC,GAAGnhB;QACH,GAAGgiB;MAAAA,CACJ,GAGKI,cAAcjB,YAAY;QAC9B,GAAGgB;QACH,GAAGF;MAAAA,CACJ;AAGGjiB,oBAAY/Q,OAAOyB,MAAMzB,OAC3B,OAAOmzB,YAAYziB,UACnB,OAAOyiB,YAAY5d,iBAGrB9T,MAAM4O,gBAAgBZ,OAAOC,QAAQyjB,WAAW,EAAEnqB,OAChD,CAAC4C,OAAK,CAAChK,OAAKC,OAAK,MAAM,CAAC,GAAG+J,OAAK,CAAChK,OAAKC,OAAK,CAAC,GAC5C,CAAA,CACF;AAEA,YAAMsZ,UAAU8X,gBAAgBE,YAAYhd,YAAYsY,cAAc/sB,QAAQxB;AAExDoK,2BAAAA,CAAAA,SAAS,CAAC,GAAGA,MAAM7I,KAAK,CAAC,GAC/C4wB,eAAe5wB,OAAO;QAAC0Z;MAAAA,CAAQ;IAAA,GAEjC,CAACkX,gBAAgB5D,aAAa,CAChC;IAIEmC;IACArhB;IACAa;IACAS;EACF;AACF;ACtJO,IAAMuiB,YAAYzQ,CAAA,eAAA;AAAA7jB,QAAAA,QAAAC,iCAAA,EAAA,GAOvB,CAAAs0B,QAAAC,SAAA,QAA4BzpB,wBAAAzK,OAAqC;AAACH,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGzCpC,KAAAiB,CAAA,QAAA;AACvB,UAAAqzB,SAAexoB,OAAAyoB,KAAYtzB,KAAK,QAAQ;AACpCqzB,cACFD,UAAShpB,CAAW,SAAA,IAAAohB,IAAQphB,IAAI,EAAAyhB,IAAMwH,MAAM,CAAC;EAAA,GAEhDz0B,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AALD,QAAA00B,OAAav0B;AAKP,MAAAC,IAAAsC;AAAA1C,IAAA6jB,CAAAA,MAAAA,cAAA7jB,EAAAA,CAAAA,MAAAu0B,UAGIn0B,KAAAA,MAAA;AACR,UAAAu0B,SAAA,CAAA;AAAoC,QAChCJ,OAAMK,QAAS/Q;AAAU,iBAEtBgR,YAAgBN;AACfE,oBAAU,YAAYA,YAAWA,CAAAA,SAAMK,UACzCH,OAAMhT,KAAMkC,WAAU6J,UAAW+G,QAAM,CAAC;AAAC,WAAA,MAAA;AAK7CE,aAAMhE,QAAAxqB,QAA2B;IAAC;EAEnCzD,GAAAA,KAAA,CAACmhB,YAAY0Q,MAAM,GAACv0B,EAAAA,CAAAA,IAAA6jB,YAAA7jB,EAAAA,CAAAA,IAAAu0B,QAAAv0B,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAbvBO,yBAAUH,IAaPsC,EAAoB;AAAC,MAAAG,IAAAK;AAAAlD,IAAAA,CAAAA,MAAAu0B,UAGd1xB,KAAAA,MAAA;AAAA,QACJ0xB,OAAMK,MAAA;AACRxG,YAAAA,WAAiBC,YAAA,MAAA;AACfyG,cAAAA,SAAAA,oBAAAlI,IAAA;AAAgC,mBAC3BmI,YAAgBR;AACfE,sBAAU,YAAYA,YAAUA,SAAMK,UACxCA,OAAM7H,IAAKwH,QAAM;AAGjBK,eAAMF,QACRJ,UAAS3oB,CAAA,WAAA;AACPH,gBAAAA,OAAA,IAAAkhB,IAAqBphB,MAAI;AAAC,qBACrBwpB,YAAgBF;AACnBppB,iBAAIK,OAAQ0oB,QAAM;AAEb/oB,iBAAAA;QAAAA,CACR;MAAA,GAACupB,oBAEiB;AAAC,aAAA,MAAA;AAGtBzG,sBAAcJ,QAAQ;MAAC;IAAA;EAAA,GAI1BlrB,KAAAA,CAACqxB,MAAM,GAACv0B,EAAAA,CAAAA,IAAAu0B,QAAAv0B,EAAAA,CAAAA,IAAA6C,IAAA7C,EAAAA,CAAAA,IAAAkD,OAAAL,KAAA7C,EAAA,CAAA,GAAAkD,KAAAlD,EAAA,CAAA,QAzBXO,yBAAUsC,IAyBPK,EAAQ;AAACG,MAAAA;AAAA,SAAArD,EAAAA,CAAAA,MAAAu0B,UAELlxB,KAAA;IAAAkxB;IAAAG;EAAc10B,GAAAA,EAAAA,CAAAA,IAAAu0B,QAAAv0B,EAAAA,CAAAA,IAAAqD,MAAAA,KAAArD,EAAA,CAAA,GAAdqD;AAAc;AA7DE,SAAA/C,UAAA;AAAA,SAAA,oBAAAssB,IAAA;AAAA;AAAA,SAAAzmB,SAAA+uB,OAAA;AAAA,SA6BOA,MAAM;AAAC;AC1ChC,SAAAC,6BAAA;AACL,QAAA;IAAA5d;IAAA6d,yBAAAj1B;IAAAk1B;EAAAA,IAAkF7d,eAAe;AAGrE,SAD1B6d,oBAAoB9d,mBAFGpX,OAAkC6D,SAAR,WAA1B7D;AAIP;ACQb,SAAAm1B,YAAA;AAAAt1B,QAAAA,QAAAC,iCAAA,CAAA;AAAAE,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGHpC,KAAA0K,oBAAAA,IAAAA,GAAoE7K,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AADtE,QAAA,CAAAu1B,WAAAC,YAAA,QAAkCzqB,wBAChC5K,EACF;AAACC,MAAAA;AAAA,OAAA;AAIC,UAAAuJ,SAAehD,MAAA+C,KAAW6rB,UAAS5rB,OAAAA,CAAS;AAExCA,QAAAA,OAAMiJ,KAAAtS,OAA0C,GAAC;AAC5C,WAAA;AAAW6X,YAAAA;IAAAA;AAGpBsd,UAAAA,cAAoB9rB,OAAMqB,OAAA7E,QAA6C;AAAC,QACpEsvB,YAAW/sB,QAAA;AACbtI,WAAOq1B,YAAW5uB,KAAAR,QAAuC,IAAI,eAAe;AAAc8R,YAAAA;IAAAA;AAGrF,SAAA;EAAA;AAZT,QAAAud,aAAmBt1B;AAaJsC,MAAAA;AAAA1C,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAGwBG,KAAAZ,CAAA,UAAA;AACrC0zB,iBAAYhqB,CAAA,SAAA;;AACVE,YAAAA,OAAA,IAAAb,IAAqBW,IAAI;AAAC,UACtB1J,MAAKohB,WAAY;AAEfnX,aAAAA,OAAQjK,MAAK6zB,UAAW;WAAC;AAG7B,cAAAC,mBACElqB,UAAIxF,IAAKpE,MAAK6zB,UAAW,MAAzBjqB,mBAA0BmqB,iBAAkB/zB,MAAKohB,WAAY,aAC/D4S,WAAeh0B,MAAKohB,WAAY,gBAAgB,eAAephB,MAAKohB;AAChE9c,aAAAA,IAAKtE,MAAK6zB,YAAA;UAAAzS,QAAcA;UAAM2S,cAAEA;QAAAA,CAAa;MAAA;AAE5CnqB,aAAAA;IAAAA,CACR;EAAA,GACF1L,EAAAA,CAAAA,IAAA0C,MAAAA,KAAA1C,EAAA,CAAA;AAfD,QAAA+1B,qBAA2BrzB;AAerBG,MAAAA;AAAA7C,SAAAA,EAAAA,CAAAA,MAAA01B,cAGC7yB,KAAA,CAAC6yB,YAAYK,kBAAkB,GAAC/1B,EAAAA,CAAAA,IAAA01B,YAAA11B,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAAhC6C;AAAgC;AAzClC,SAAAwD,SAAAlG,IAAA;AAgBwB,QAAA;IAAA01B;EAAAA,IAAA11B;AAAc,SAAA,CAAM01B;AAAY;AAhBxD,SAAA1vB,SAAAhG,IAAA;AAcgC,QAAA;IAAA+iB,QAAA8S;EAAAA,IAAA71B;AAAQ,SAAK+iB,aAAW;AAAY;AAdpE,SAAA5iB,QAAAH,IAAA;AAUc,QAAA;IAAA+iB;EAAAA,IAAA/iB;AAAQ,SAAK+iB,WAAW;AAAW;ACsCxD,IAAM+S,kBAAcrV,oBAAK,MAAM,OAAO,2BAAsB,CAAC;AAA7D,IACMsV,2BAAuBtV,oBAAK,MAAM,OAAO,oCAAiC,CAAC;AADjF,IAEMuV,kCAA8BvV,oBAAK,MAAM,OAAO,2CAAsC,CAAC;AAF7F,IAGMwV,6BAAyBxV,oBAAK,MAAM,OAAO,sCAA0B,CAAC;AAH5E,IAIMyV,kCAA8BzV,oBAAK,MAAM,OAAO,2CAAsC,CAAC;AAJ7F,IAKM0V,wBAAoB1V,oBAAK,MAAM,OAAO,iCAAqC,CAAC;AALlF,IAMM2V,2BAAuB3V,oBAAK,MAAM,OAAO,oCAAwB,CAAC;AANxE,IAQMrQ,aAAY9M,GAAO8R,IAAI;;;AAI7B,SAAwBihB,iBAAiBz2B,OAOnB;;AACd,QAAA;IACJyhB;IACAC;IACAgV;IACApM;IACAiJ;IACA3X;EAAAA,IACE5b,OAEEgc,eAAeL,iBAAiBC,aAAa,GAC7CwC,eAAeU,gBAAgBlD,aAAa,GAE5C+a,cAAaD,UAAKxhB,YAALwhB,mBAAcC,YAC3Bjb,OAAOgb,KAAKhb,QAAQkb,mBACpB;IAAC/b;IAAoBgc;EAAAA,IAAmBF,cAAc,CAAA,GAEtD;IAACnc,UAAUgZ;IAAgB5wB,OAAOsP;EAAeE,IAAAA,UAGjDE,GAAAA,qBAAqBC,UAAU3B,OAAOyB,YAAYH,YAAYV,iBAAiB,CAAE,CAAA,CAAC,GAClF2M,cAAciX,2BAEdpP,GAAAA,wBAAwBlK,YAC5BF,eACChZ,CAAUA,UAAAA;;AAAAA,aAAAA,MAAAA,MAAMxB,QAAQ01B,gBAAdl0B,gBAAAA,IAA2Bm0B,iBAAgB;GACxD,GAEM,CAAClhB,OAAO,QAAI7K,wBAAS,MAAM;;AACzBgsB,UAAAA,UAASN,MAAAA,KAAKxhB,YAALwhB,gBAAAA,IAAc7gB;AAE7B,WAAI,OAAOmhB,UAAW,aAAmBA,OAAAA,IACrC,OAAOA,UAAW,YAAkBA,SAEjC,OAAO9qB,SAAW,OAAeA,OAAOoX,SAAS2T,aAAa;EAAA,CACtE,GAEKhR,gBAAYvjB,sBAA0B,IAAI,GAE1C,CAACohB,YAAYoT,aAAa,QAAIlsB,wBAC9B,GAAA,CAACmsB,sBAAsBC,uBAAuB,QAAIpsB,wBACtD,IACF,GAEM4kB,oBAAgBltB,sBAAmB;IACvCwT,OAAOjS;IACP5C,KAAK4C;EAAAA,CACN,GAEK;IACJuW,UAAUC;IACVsX;IACArhB;IACAa;IACAS;EAAAA,IACEshB,UAAU;IACZC;IACAC;IACAthB;IACAI;IACAsd;EAAAA,CACD,GAGKpV,eAAWqI,uBAAQ,MAAMle,SAA+B8V,WAAW,EAAE,GAAG,CAACA,SAAS,CAAC,GAEnF4L,kBAAkBgR,YAAYz2B,mBAAmB,GAEjD4lB,eAAW3D,uBAAQ,MAAOnS,OAAO8V,WAAW,WAAW,WAAY,CAAC9V,OAAO8V,QAAQ,CAAC,GAEpF,CAAClM,iBAAiBkW,kBAAkB,IAAIb,mBAAmBxR,aAAayR,aAAa,GAErF0H,YAAYC,eAAa,GACzBC,UAAUC,WAAW,GAErB7hB,oBAAoBkc,gBAAgB;;IAExCtX,UAAUC;IACVsX;IACAvf,MAAM9B,OAAO4G;IACb8G;IACA4T,YAAW0E,gBAAKxhB,YAALwhB,mBAAcrF,YAAdqF,mBAAuBgB;EAAAA,CACnC,GAEK,CAACtR,oBAAoBuR,qBAAqB,IAAIpC,UAAAA,GAC9C,CAAClL,mBAAmBuN,oBAAoB,IAAIrC,UAC5C,GAAA,CAACsC,sBAAsBC,uBAAuB,IAAIvC,UAAAA,GAElD;IAACZ,MAAM/V;EAAe,IAAI2V,UAAUzQ,UAAU,GAE9C8C,YAAY9K,YAAYuK,iBAAkBzjB,CAAUA,YAAAA,QAAMgnB,QAAQ,SAAS,CAAC;AAElFppB,+BAAU,MAAM;;AACRiB,UAAAA,UAASwkB,MAAAA,UAAUpjB,YAAVojB,gBAAAA,IAAmBwH;AAE9B,QAAA,CAAChsB,UAAUmlB,UAAW;AAE1B,UAAM9C,eAAa4J,iBAAiB;MAACtP;IAAAA,CAAa;AAClD0F,WAAAA,aAAW6J,UAAUlsB,MAAM,GAC3By1B,cAAcpT,YAAU,GAEjB,MAAM;AACAsK,mBAAAA,QAAAA,GACX8I,cAAcjzB,MAAS;IACzB;EAAA,GACC,CAACma,cAAcwI,SAAS,CAAC;AAEtBmR,QAAAA,iBAAiBhL,eACrB,CAACmH,WAAWC,iBAAiBC,iBAC3B5Z,SAAS0Z,WAAWC,iBAAiBC,YAAY,CACrD;AACA5zB,+BAAU,MAAM;AACd,QAAI,CAACsjB,WAAY;AAEX3jB,UAAAA,UAAU2jB,WAAW8J,cACzB;MACElS,MAAM;MACNmS,WAAW;MACXC,WAAW;IAAA,GAEbC,wBAA0E,EAAEC,QAAQ;MAClFhtB,QAAQitB,0BAAsD;IAAA,CAC/D,CACH;AAEQ3tB,YAAAA,GAAG,wBAAyBoF,CAAS,SAAA;AACrC,cAAQA,QACdqyB,eAAe;QACbtzB,MAAMiB,KAAKjB;QACXtD,IAAIuE,KAAKvE;QACTqR,MAAM9M,KAAK8M;MAAAA,CACZ;IACF,CAAA,GAEDrS,QAAQG,GAAG,2BAA4BoF,CAAS,WAAA;AACxC,YAAA;QAACwQ;MAAAA,IAASxQ;AAChB,UAAIrE,MAAMqE,OAAKrE;AAIX,UAAA,CAACA,IAAIgb,WAAW,MAAM;AACpB,YAAA;AACFhb,gBAAM,IAAIgd,IAAIhd,KAAK+c,YAAY,EAAE6B,SAAS;QAAA,QACpC;QAAA;AAKN2P,UAAAA,cAAc/sB,QAAQxB,QAAQA;AAC5B,YAAA;AAEI,gBAAA,CAAC22B,kBAAkBxZ,MAAM,IAAInd,IAAIyxB,MAAM,GAAG,GAC1CvhB,iBAAe,IAAI0mB,gBAAgBzZ,MAAM;AAClCxS,yBAAAA,OAAO0e,oCAAoC,GACxDnZ,eAAavF,OAAO2e,mCAAmC,GACvDoN,eACE,CAAA,GACA;YAACzgB,SAAS,GAAG0gB,gBAAgB,GAAGzmB,eAAasjB,OAAO,IAAI,MAAM,EAAE,GAAGtjB,cAAY;UAAA,CACjF;QAAA,QACM;AACNwmB,yBAAe,CAAA,GAAI;YAACzgB,SAASjW;UAAAA,CAAI;QAAA;AAGrCuuB,oBAAc/sB,UAAU;QAACqT;QAAO7U;MAAG;IACpC,CAAA,GAEDlB,QAAQG,GAAG,uBAAwBoF,CAAS,WAAA;AAC5B7C,oBAAAA,QAAQqT,QAAQxQ,OAAKwQ;IACpC,CAAA,GAED/V,QAAQG,GAAG,yBAA0BoF,CAAS,WAAA;AAC5C2gB,sBAAgBK,KAAK;QAACjiB,MAAM;QAAkCzC,SAAS0D,OAAK1D;MAAAA,CAAQ;IACrF,CAAA,GAED7B,QAAQG,GAAG,4BAA6BoF,CAAS,WAAA;AAC/C8qB;QACE;;QAEA9qB,OAAKyY;QACLzY,OAAK0qB;MACP;IACD,CAAA,GAGDjwB,QAAQG,GAAG,6BAA8BoF,CAAS,WAAA;AAC5CA,aAAKgvB,WAAW,WAClB1vB,aAAakzB,WAAWr1B,OAAO,IACtB6C,OAAKgvB,WAAW,cACzBrO,gBAAgBK,KAAK;QAACjiB,MAAM;MAAA,CAAiB;IAEhD,CAAA,GAEDtE,QAAQG,GAAG,4BAA4B,MAAM;AAC3C+lB,sBAAgBK,KAAK;QAACjiB,MAAM;MAAA,CAAgB;IAAA,CAC7C,GAEDtE,QAAQg4B,SAASR,qBAAqB;AAEhCzJ,UAAAA,OAAO/tB,QAAQguB,MAAM;AACHhuB,WAAAA,wBAAAA,OAAO,GACxB,MAAM;AACN,WAAA,GACLi3B,wBAAwB,IAAI;IAC9B;EAAA,GACC,CAACtT,YAAYuC,iBAAiBmK,oBAAoBmH,uBAAuBvZ,YAAY,CAAC,OAEzF5d,yBAAU,MAAM;AACd,QAAI,CAACsjB,WAAY;AACX3jB,UAAAA,YAAU2jB,WAAW8J,cACzB;MACElS,MAAM;MACNoS,WAAW;MACXD,WAAW;IAAA,GAEbE,wBAAoD,EAAEC,QAAQ;MAC5DhtB,QAAQitB,0BAA0B;IAAA,CACnC,CACH;AAEA9tB,WAAAA,UAAQg4B,SAASL,uBAAuB,GAExC33B,UAAQG,GAAG,yBAA0BoF,CAAS,WAAA;AACxCA,aAAK4xB,cAAcA,aAAa5xB,OAAK8xB,YAAYA,WACnDhH;QACE;;QAEA9qB,OAAKyY;QACLzY,OAAK0qB;MACP;IAAA,CAEH,GAEMjwB,UAAQguB,MAAM;EAAA,GACpB,CAACrK,YAAY0T,SAASF,WAAW9G,oBAAoBsH,yBAAyB1Z,YAAY,CAAC;AAExFga,QAAAA,sBAAkBnV,2BACrBoV,CAAmB,aAAA;AAET,aAAA;MAAC7lB,MAAM0gB,WAAWjT,SAASoY,QAAQ;IAAA,GAAI,CAAA,GAAI,IAAI;EAAA,GAE1D,CAAC7d,QAAQ,CACX,GAEM8d,wBAAoBrV,2BACvBoV,CAAqB,eAAA;AACdh3B,UAAAA,QAAM,IAAIgd,IAAIga,YAAUja,YAAY,GACpC9G,UAAUjW,MAAI4e,SAAS;AACzBvP,WAAO4G,YAAYA,YAGnB1Q,MAAMC,QAAQmV,YAAY,IACxBA,aAAalV,KAAMoZ,CAAAA,YAAYA,QAAQC,KAAK7I,OAAO,CAAC,KACtDkD,SAAS,CAAA,GAAI;MAAClD;IAAQ,CAAA,IAEfjW,MAAI2d,WAAWZ,gBACxB5D,SAAS,CAAA,GAAI;MAAClD;IAAAA,CAAQ;EAE1B,GACA,CAAC8G,cAAc1N,OAAO4G,SAAS0E,cAAcxB,QAAQ,CACvD,GAEM+d,4BAAwBtV,2BAC3BjR,CAAiD,sBAAA;AACvC,aAAA,CAAA,GAAIA,iBAAe;EAAA,GAE9B,CAACwI,QAAQ,CACX;AAGAha,+BAAU,MAAM;AACVkQ,WAAOvP,MAAMuP,OAAO8B,OACtB2kB,6DAAsBl0B,KAAK,sBAAsB;MAAC9B,IAAIuP,OAAOvP;MAAIqR,MAAM9B,OAAO8B;IAAAA,KAE9E2kB,6DAAsBl0B,KAAK;EAAmB,GAE/C,CAACyN,OAAOvP,IAAIuP,OAAO8B,MAAM2kB,oBAAoB,CAAC,OAGjD32B,yBAAU,MAAM;AAEZovB,QAAAA,cAAc/sB,QAAQxB,OACtBqP,OAAO4G,WACPsY,cAAc/sB,QAAQxB,QAAQqP,OAAO4G,SACrC;AACI,UAAA;AACF,cAAMkhB,cAAc,IAAIna,IAAIuR,cAAc/sB,QAAQxB,KAAK+c,YAAY,EAAEY,QAC/DyZ,gBAAgB,IAAIpa,IAAI3N,OAAO4G,SAAS8G,YAAY,EAAEY;AAC5D,YAAIwZ,gBAAgBC;AAClB;MAAA,QAEI;MAAA;AAKR,UADA7I,cAAc/sB,QAAQxB,MAAMqP,OAAO4G,SAC/B8O,uBAAuB,aAAa;AAItC,YAAI/kB,QAAMqP,OAAO4G;AACbjW,YAAAA,MAAIgb,WAAW,MAAM;AACnB,cAAA;AACF,kBAAMqc,SAAS,IAAIra,IAAI3N,OAAO4G,SAAS8G,YAAY;AACnD/c,oBAAMq3B,OAAOna,WAAWma,OAAOla,SAASka,OAAOlL;UAAAA,QACzC;UAAA;AAIV2J,qEAAsBl0B,KAAK,yBAAyB;UAClD5B,KAAAA;UACAoD,MAAM;QAAA;MACP;IACH;EACF,GACC,CAAC2hB,oBAAoBhI,cAAc1N,OAAO4G,SAAS6f,oBAAoB,CAAC;AAE3E,QAAM5Q,oBAAgBtD,2BACpB,MAAMkU,6DAAsBl0B,KAAK,gCACjC,CAACk0B,oBAAoB,CACvB,GAEM,CAACwB,mBAAmBxe,oBAAoB,QAAInP,wBAEhD,IAAI;AAENxK,+BAAU,MAAM;AACd,UAAMo4B,cAAexf,CAAqB,MAAA;AACpCyf,eAASzf,CAAC,KACZmN,cAAc;IAAA,GAGZuS,gBAAiB1f,CAAqB,QAAA;AACtCyf,eAASzf,GAAC,KACZmN,cAAAA,GAGEwS,SAAS,CAAC,OAAO,IAAI,GAAG3f,GAAC,KAC3BmN,cAAc;IAElB;AACOvM,WAAAA,OAAAA,iBAAiB,WAAW8e,aAAa,GAChD5sB,OAAO8N,iBAAiB,SAAS4e,WAAW,GACrC,MAAM;AACX1sB,aAAO+N,oBAAoB,WAAW6e,aAAa,GACnD5sB,OAAO+N,oBAAoB,SAAS2e,WAAW;IACjD;EAAA,GACC,CAACrS,aAAa,CAAC;AAElB,QAAM,CAACyS,iBAAiBC,kBAAkB,QAAIjuB,wBAAgC,IAAI,GAE5E,CAAC;IAACkQ;IAAkBC;EAAAA,GAAkB+d,qBAAqB,IAAIte,yBAAyB;IAC5FC;EAAAA,CACD,GAEKqd,iBAAax1B,sBAAeuB,MAAS,GACrC0iB,oBAAgB1D,2BACnB1K,CAAyB,aAAA;AAExB,QADA8N,gBAAgBK,KAAK;MAACjiB,MAAM;IAAiB,CAAA,GACzC0yB,sBAAsB;AAEbt0B,iBAAAA,UAAUqJ,OAAOjH,WAAWsT,UAAU,GAAG,GACpD4e,qBAAqBl0B,KAAK,wBAAwB;QAChDyxB,QAAQ;QACRyE,oBACEtB,yBAAyB,eAAexN,sBAAsB;MAAA,CACjE;AACD;IAAA;AAEO,aAAA;EAEX,GAAA,CAACA,mBAAmBhE,iBAAiBwR,sBAAsBV,oBAAoB,CACjF,GAEMiC,YAAYC,aAAAA,GAEZjf,uBAAmB6I,2BACvB,CAAC;IAAC9hB;IAAIsD;IAAM+N;EAAAA,MAAU;AACpB,QAAIod,cAAc/sB,QAAQxB;AACjB,aAAA;QACL6U,OAAO0Z,cAAc/sB,QAAQqT,SAAS0Z,cAAc/sB,QAAQxB;QAC5Dqa,MAAM;QACNhL,QAAQ;UACNvP;UACAqR;UACA/N;UACA4O,SAASimB;UACTF,WAAWA,UAAU1d;UACrB6d,MAAMC;UACNliB,SAAS5G,OAAO4G;QAAAA;MAEpB;EAAA,GAIJ,CAAC5G,OAAO4G,SAAS8hB,UAAU1d,IAAI,CACjC,GAEM4K,kBAAcrD,2BACjBtX,CAA+B,SAAA;AAI9B6O,aAAS,CAAA,GAAI;MAACgM,UADG7a,SAAS,YAAY1H,SAAY;IAAA,GACzB,IAAI;EAAA,GAE/B,CAACuW,QAAQ,CACX;AAEA,aAEI,yBAAA,6BAAA,EAAA,UAAA;QAAC,wBAAA,sBAAA,EACC,SACA,MACA,UACA,QACA,cACA,iBAEA,cAAA,wBAAC,8BAA6B,EAAA,UAC5B,cAAC,wBAAA,4BAAA,EAA2B,QAC1B,cAAC,wBAAA,qBAAA,EAAoB,SAAS2c,sBAC5B,cAAC,wBAAA3mB,YAAA,EAAU,eAAY,qBAAoB,QAAO,QAChD,cAAA,yBAAC,QACC,EAAA,UAAA;UAAA,wBAAC,uBAAqB,CAAA,CAAA;UACtB,wBAAC,OACC,EAAA,IAAG,WACH,UAAU,KACV,aAAa0K,mBAAmB,KAAK,IACrC,OAAO,GAEP,cAAA,wBAAC,MAAK,EAAA,WAAU,UAAS,MAAM,GAAG,QAAO,QAAO,KAAK+d,oBACnD,cAAA,wBAAC,yBAAwB,EAAA,SAASD,iBAChC,cAAA;QAAC;QAAA;UAIC;UACA;UACA;UACA,QAAQnC;UACR,YAAYtD;UACZ;UACA;UACA,cAAc+E;UACd,WAAW3R;UACX,WAAW/H;UACX;UACA,YAAYlO,OAAO4G;UACnB;UACA,KAAK2O;UACL;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QAAA;QAtBK7H;MAAAA,EAwBT,CAAA,EACF,CAAA,EAAA,CACF;UAAA,wBACC,qBACC,EAAA,YAAY1N,OAAOvP,IACnB,iBACA,cAAcuP,OAAOjM,MACrB,kBACA,mBACA,aAAa2zB,iBACb,mBAAmBG,uBACnB,cACA,sBACA,gBAAiC,CAAA;IAAA,EAAA,CAErC,EACF,CAAA,EAAA,CACF,EACF,CAAA,EAAA,CACF,EACF,CAAA;QAAA,yBACC,wBACEzU,EAAAA,UAAAA;MACC,kBAAA,wBAAC,aAAA,EACC,YACA,aACA,cAAc6U,mBACd,mBAAmBnI,oBACnB,qBAAqBoH,qBAExB,CAAA;MACAT,wBAAwBzmB,OAAOvP,MAAMuP,OAAOjM,YAAAA,wBAC1C,6BACC,EAAA,SAAS0yB,sBACT,IAAIzmB,OAAOvP,IACX,MAAMuP,OAAOjM,MACb,mBACA,qBAAA,CAEH;MACA0yB,4BACC,wBAAC,mBAAkB,EAAA,SAASA,sBAAsB,YAAA,CACnD;MACAA,wBAAwB7c,gBAAgB3R,SAAS,SAChD,wBAAC,6BAAA,EACC,SAASwuB,sBACT,aACA,MAAM7c,gBAET,CAAA;MACA6c,4BACC,wBAAC,sBAAqB,EAAA,SAASA,sBAAsB,YAAA,CACtD;MACAA,4BAAwB,wBAACp3B,uBAAoB,EAAA,SAASo3B,qBAAwB,CAAA;MAC9EA,4BACC,wBAAC,wBAAuB,EAAA,SAASA,sBAAsB,YAAA,CACxD;MACAA,4BAAwB,wBAAC,sBAAqB,EAAA,SAASA,qBAAwB,CAAA;IAAA,EAClF,CAAA;EAAA,EAAA,CACF;AAEJ;AAGA,SAAS0B,SAAS92B,OAA+B;AAC/C,SAAOA,MAAMgB,QAAQ;AACvB;AAGA,IAAM02B,SACJ,OAAOvtB,SAAU,OAAe,uBAAuBiU,KAAKjU,OAAOyX,UAAU+V,QAAQ;AADvF,IAEMC,YAA2E;EAC/EC,KAAK;EACLC,MAAM;EACNC,KAAKL,SAAS,YAAY;EAC1B1G,OAAO;AACT;AAEA,SAASgG,SAASgB,MAAgBh4B,OAA+B;AAC/D,SAAOg4B,KAAKC,MAAOj3B,CACb42B,QAAAA,UAAU52B,GAAG,IACRhB,MAAM43B,UAAU52B,GAAG,CAAC,IAEtBhB,MAAMgB,QAAQA,IAAIk3B,YAAAA,CAC1B;AACH;ACjnBO,SAASC,+BAA+B;EAC7CnY;EACAoY;AAIF,GAGG;AACMC,SAAAA,YAAY,YACV,MAAMC,oBAAoBtY,QAAQ,uBAAuBuB,SAAS3E,MAAMwb,aAAa,CAC7F;AACH;ACbO,SAASG,4BAA4B;EAC1CvY;AAGF,GAAqC;AACnC,SAAOqY,YAAY,YACVrY,OAAOuC,MACZC,wBACA,CAAA,GACA;IAACE,KAAK;EAAA,CACR,CACD;AACH;ACPO,SAAS8V,gCAAgC;EAC9CxY;EACAyY;AACO,GAA2C;AAClD,SAAOJ,YAAiC,OAAO;IAACK;EAAAA,MAAW;AACnD,UAAA;MAAC9Y;IAAAA,IAAc8Y;AAYrB,QAPI,OAAOC,aAAe,OACxB,MAAM,OAAO,mCAAqB,GAMhC,CAACF;AACH,aAAO,CAAC,IAAIE,WAAW/Y,WAAW3C,MAAM,CAAC;AAG3C,UAAM2b,gBACJ,OAAOH,eAAgB,aACnB,MAAMA,YAAY;MAACzY;MAAQ/C;MAAQ2C;IAAW,CAAA,IAC9C6Y,aAEAI,eADWh0B,MAAMC,QAAQ8zB,aAAa,IAAIA,gBAAgB,CAACA,aAAa,GACjD50B,IAAK/C,CAAU,UAAA;AACpC63B,YAAAA,aAAa,IAAIH,WAAW13B,KAAK;AACvC,UAAI63B,WAAW5D,aAAa;AACpB,cAAA,IAAI7yB,MACR,iFACF;AAEKy2B,aAAAA;IAAAA,CACR;AAID,WAAKD,YAAY9zB,KAAMoZ,CAAAA,YAAYA,QAAQC,KAAKwB,WAAW3C,MAAM,CAAC,IAI3D4b,cAHE,CAAC,GAAGA,aAAa,IAAIF,WAAW/Y,WAAW3C,MAAM,CAAC;EAAA,CAI5D;AACH;AC/CO,SAAS8b,6BAA6B;EAC3C/Y;EACAgZ;EACAC;EACA7c;AAMF,GAAgE;AAC9D,SAAOic,YACL,OAAO;IAACK;EAAAA,MAAyD;AACzD,UAAA;MAACzb,QAAAA;IAAAA,IAAUsE;AAIb,QAAA,OAAO0X,oBAAqB,YAAY;AACpC54B,YAAAA,UAAU,MAAM44B,iBAAiB;QACrCjZ;QACAgZ;;QAEAvX,kBAAkB;QAClByX,0BAA0Bhf,wBAAwBkC,WAAW;QAC7D+c,oBAAoBT,MAAMS;MAAAA,CAC3B;AACM,aAAA,IAAI7c,IAAIjc,SAAS4c,OAAM;IAAA;AAMhC,QAAI,CAACgc;AACI,aAAA,IAAI3c,IAAI,KAAKW,OAAM;AAK5B,QAAI,OAAOgc,oBAAqB;AACvB,aAAA,IAAI3c,IAAI2c,kBAAkBhc,OAAM;AAGrC,QAAA,OAAOgc,iBAAiB54B,WAAY,YAAY;AAC5CA,YAAAA,UAAU,MAAM44B,iBAAiB54B,QAAQ;QAC7C2f;QACA/C,QAAAA;MAAAA,CACD;AACM,aAAA,IAAIX,IAAIjc,SAAS4c,OAAM;IAAA;AAGhC,WAAI,OAAOgc,iBAAiB54B,WAAY,WAC/B,IAAIic,IAAI2c,iBAAiB54B,SAAS4c,OAAM,IAG1C,IAAIX,IAAI2c,iBAAiB1jB,WAAW,KAAK0jB,iBAAiBhc,UAAUA,OAAM;EAAA,CAErF;AACF;AChDO,SAASmc,8BAA8B;EAC5CpZ;EACAiZ;AACO,GAA4D;AACnE,SAAOZ,YAAkD,OAAO;IAACK;EAAAA,MAAW;AACpE,UAAA;MAACrc;IAAAA,IAAgBqc;AAKnB,QAAA,OAAOO,oBAAqB,aAAYA,qDAAkBI;AACrD,aAAA;QACLC,QAAQL,iBAAiBI,UAAUC;QACnCtE,aAAaiE,iBAAiBI,UAAUrE,eAAe;MACzD;AAOA,QAAA,CAACiE,oBACD,OAAOA,oBAAqB,YAC5B,OAAOA,oBAAqB,cAC5B,CAACA,iBAAiBlE;AAEX,aAAA;AAMT,UAAMA,cACJ,OAAOkE,iBAAiBlE,eAAgB,aACpC,MAAMkE,iBAAiBlE,YAAY;MAAC/U;MAAQ/C;MAAQZ;IAAAA,CAAa,IACjE4c,iBAAiBlE;AAEnBA,WAAAA,gBAAgB,QACX,QAMF;MACLuE,QAAQvE,YAAYuE;MACpBtE,aAAaD,YAAYC,eAAe;IAC1C;EAAA,CACD;AACH;AC1CO,SAASuE,iCAAiC;EAC/CvZ;EACAgZ;EACAC;EACA7c;AAMF,GAAuD;AACrD,SAAOic,YAA6C,OAAO;IAACK;EAAAA,MAAW;AAC/D,UAAA;MAACjX;MAAkB+X;MAAqB5Z;IAAAA,IAAc8Y;AAKxD,QAAA,OAAOO,oBAAqB,YAAY;AACpC54B,YAAAA,UAAU,MAAM44B,iBAAiB;QACrCjZ;QACAgZ;QACAvX;QACAyX,0BAA0Bhf,wBAAwBkC,WAAW;QAC7D+c,oBAAoBvZ,WAAW1B,SAAS;MAAA,CACzC;AACM,aAAA,IAAI5B,IAAIjc,SAASuf,UAAU;IAAA;AAMpC,QAAI,CAAC4Z;AACG,YAAA,IAAIn3B,MAAM,gCAAgC;AAGlD,UAAM/C,MAAM,IAAIgd,IAAIkd,oBAAoBF,QAAQ1Z,UAAU;AAE1DtgB,WAAAA,IAAIkQ,aAAalL,IAAIm1B,6BAA6BhY,gBAAgB,GAClEniB,IAAIkQ,aAAalL,IAAIiY,kCAAkCrC,wBAAwBkC,WAAW,CAAC,GACvFwD,WAAWpD,aAAald,IAAIkd,YAC9Bld,IAAIkQ,aAAalL,IACfo1B,+BACA,GAAG9Z,WAAWpD,QAAQ,GAAGoD,WAAWnD,MAAM,GAAGmD,WAAW6L,IAAI,EAC9D,GAGKnsB;EAAAA,CACR;AACH;ACpEaq6B,IAAAA,wCAAwCtB,YAGnD,OAAO;EAACK;AAAK,MAAM;AACb,QAAA;IAACS;IAAoBvZ;IAAY3F;EAAAA,IAAgBye;AAKvD,MAAI,CAACS;AACIvZ,WAAAA;AAML,MAAA;AACF,UAAMga,wBAAwB,IAAItd,IAAI6c,oBAAoBvZ,WAAW3C,MAAM;AACtEhD,WAAAA,aAAalV,KAAMoZ,CAAYA,YAAAA,QAAQC,KAAKwb,sBAAsB3c,MAAM,CAAC,IAGvE2c,wBAFEha;EAAAA,QAGG;AACLA,WAAAA;EAAAA;AAEX,CAAC;AAzBY+Z,IC0CAE,+BAA+B;EAAC7oB,KAAK8oB;EAAmB5oB,OAAO6oB;AAAmB;AD1ClFJ,IC2CAK,2BAA2B;EACtChpB,KAAK,UAAU0F,WAAAA,CAAM;EACrBxF,OAAOkE;AACT;AD9CaukB,ICgDAM,oBAAoBn7B,MAAM;EACrCC,OAAO,CAAC;EAMRC,SAAS;IACP,mCAAmCk7B,IACjC,gHACF;IACA,+BAA+Bz6B,OAAO;MACpC05B,oBAAoBA,CAACgB,GAAGxrB,WACtBA,OAAOwqB;IAAAA,CACV;IACD,gBAAgB15B,OAAO;MACrBF,OAAOA,CAAC46B,GAAGxrB,WACFA,OAAOpP,iBAAiB8C,QAC3BsM,OAAOpP,QACP,IAAI8C,MAAMsM,OAAOX,SAAS;QAACosB,OAAOzrB,OAAOpP;MAAM,CAAA;IAEtD,CAAA;EACH;EACAN,QAAQ;IACN,oBAAoBo7B,eAA4D,MAC9EC,WACE,MACE,IAAIj4B,MACF,uLACF,CACJ,CACF;IACA,uBAAuBg2B,YAAsD,MAC3EkC,QAAQC,OACN,IAAIn4B,MACF,8IACF,CACF,CACF;IACA,0BAA0Bg2B,YAA6C,MACrEkC,QAAQC,OACN,IAAIn4B,MACF,mJACF,CACF,CACF;IACA,yCAAyCs3B;IACzC,wBAAwBtB,YAAmE,MACzFkC,QAAQC,OACN,IAAIn4B,MACF,gJACF,CACF,CACF;IACA,yBAAyBg2B,YAGtB,YACDkC,QAAQC,OACN,IAAIn4B,MACF,kJACF,CACF,CACF;IACA,8BAA8Bg2B,YAA2B,YACvDkC,QAAQC,OACN,IAAIn4B,MACF,4JACF,CACF,CACF;IACA,4BAA4Bg2B,YAA6C,MACvEkC,QAAQC,OACN,IAAIn4B,MACF,wJACF,CACF,CACF;EACF;EACAnD,QAAQ;IACN,2BAA2Bu7B,CAAC;MAACp7B;IAAAA,MACpBq7B,CAAAA,EACLr7B,QAAQs7B,wCACNt7B,QAAQu7B,sCACRv7B,QAAQw7B,wCACRx7B,QAAQy7B;IAGd,+BAA+BC,CAAC;MAAC17B;MAASW;IAAAA,MAAW;AACnD,UAAI,CAACX,QAAQ2d,cAAc,CAAChd,MAAMm5B;AACzB,eAAA;AAEL,UAAA;AACF,cAAMS,wBAAwB,IAAItd,IAAItc,MAAMm5B,oBAAoB95B,QAAQ2d,UAAU;AAC3E3d,eAAAA,QAAQ2d,WAAWC,WAAW2c,sBAAsB3c;MAAAA,QACrD;AACC,eAAA;MAAA;IAEX;IACA,6BAA6B+d,CAAC;MAAC37B;IAAAA,MAAAA;;AACtBA,4BAAQy7B,+BAARz7B,mBAAoC47B,aAAY;;IAGzD,wCAAwCC,CAAC;MAAC77B;IAAAA,GAAUsP,WAAAA;;AAC9CA,wBAAW,QACN,UAEFtP,aAAQy7B,+BAARz7B,mBAAoC47B,aAAY;;IAEzD,sCAAsCE,CAAC;MAAC97B;IAAAA,GAAUsP,WAAAA;;AAC5CA,wBAAW,QACN,UAEFtP,aAAQu7B,uCAARv7B,mBAA4C47B,aAAY;;IAEjE,wCAAwCG,CAAC;MAAC/7B;IAAO,GAAGsP,WAAAA;;AAC9CA,wBAAW,QACN,UAGPtP,aAAQu7B,uCAARv7B,mBAA4C47B,aAAY,WACxD57B,aAAQy7B,+BAARz7B,mBAAoC47B,aAAY;;EAGtD;EACAI,QAAQ;IACNC,eAAeA,CAAC;MAACj8B;IAAAA,MAAa;;AACxB,UAAA,GAACA,aAAQoiB,qBAARpiB,mBAA0Bk8B;AACtB,eAAA;AAEHC,YAAAA,MAAMC,KAAKD,IAAI,GACfD,YAAYl8B,QAAQoiB,iBAAiB8Z,UAAUG,QAAQ;AAC7D,aAAOp2B,KAAKE,IAAI+1B,YAAYC,KAAK,CAAC;IAAA;EACpC;AAEJ,CAAC,EAAEr8B,cAAc;;;EAGfC,IAAI;EACJC,SAASA,CAAC;IAACq5B;EAAAA,OAAY;IACrB9Y,YAAY;IACZ5C,YAAY;IACZzd,OAAO;IACP0a,cAAc;IACdkf,oBAAoBT,MAAMS;IAC1B1X,kBAAkB;IAClBkZ,sCAAsC;IACtCC,oCAAoC;IACpCC,sCAAsC;IACtCC,4BAA4B;IAC5B/F,aAAa;EAAA;EAGf4G,QAAQ,CACN;IACE9gB,KAAK;IACL6d,OAAOA,OAAO;MAACkD,qBAAqB;MAAQ5nB,UAAU6lB;IAAAA;IACtDgC,SAAS;MACPn8B,QAAQ;MACRV,SAAS;QACP0D,MAAM;QACNiM,QAAQA,CAAC;UAAC3O;QAAAA,OAAY;UACpBgO,SAAS;UACTzO,OAAOS,MAAMT;QACf;MAAA;IAEJ;IACAu8B,YAAY;MACV98B,SAASS,OAAO;QACdm7B,oCAAoCA,CAAC;UAAC56B;QAAAA,MAAWA,MAAMsW,SAASjX,WAAW;MAC5E,CAAA;IAAA;EACH,GAEF;IACEwb,KAAK;IACL6d,OAAOA,OAAO;MAACkD,qBAAqB;MAAU5nB,UAAU6lB;IAAAA;IACxDgC,SAAS;MACPn8B,QAAQ;MACRV,SAAS;QACP0D,MAAM;QACNiM,QAAQA,CAAC;UAAC3O;QAAAA,OAAY;UACpBgO,SAAS;UACTzO,OAAOS,MAAMT;QACf;MAAA;IAEJ;IACAu8B,YAAY;MACV98B,SAASS,OAAO;QACdk7B,sCAAsCA,CAAC;UAAC36B;QAAAA,MAAWA,MAAMsW,SAASjX,WAAW;MAC9E,CAAA;IAAA;EACH,GAEF;IACEwb,KAAK;IACL6d,OAAOA,OAAO;MAACkD,qBAAqB;MAAU5nB,UAAU6lB;IAAAA;IACxDgC,SAAS;MACPn8B,QAAQ;MACRV,SAAS;QACP0D,MAAM;QACNiM,QAAQA,CAAC;UAAC3O;QAAAA,OAAY;UACpBgO,SAAS;UACTzO,OAAOS,MAAMT;QACf;MAAA;IAEJ;IACAu8B,YAAY;MACV98B,SAASS,OAAO;QACdo7B,sCAAsCA,CAAC;UAAC76B;QAAAA,MAAWA,MAAMsW,SAASjX,WAAW;MAC9E,CAAA;IAAA;EACH,GAEF;IACEwb,KAAK;IACL6d,OAAOA,OAAO;MAACkD,qBAAqB;MAAU5nB,UAAUgmB;IAAAA;IACxD6B,SAAS;MACPn8B,QAAQ;MACRV,SAAS;QACP0D,MAAM;QACNiM,QAAQA,CAAC;UAAC3O;QAAAA,OAAY;UACpBgO,SAAS;UACTzO,OAAOS,MAAMT;QACf;MAAA;IAEJ;IACAu8B,YAAY;MACV98B,SAASS,OAAO;QACdq7B,4BAA4BA,CAAC;UAAC96B;QAAAA,MAAWA,MAAMsW,SAASjX,WAAW;MACpE,CAAA;IAAA;EACH,CACD;EAGHd,IAAI;IACF,4BAA4B;MAC1BS,SAAS;QACP0D,MAAM;QACNiM,QAAQA,CAAC;UAAC3O;QAAAA,OAAY;UAACm5B,oBAAoBn5B,MAAMm5B;QAAkB;MAAA;IACrE;EAEJ;EAEAx5B,QAAQ;IACNo8B,qBAAqB;MACnBC,QAAQ;QACNC,OAAO;QACPv8B,QAAQ;MACV;MACAG,MAAM;IACR;IAEAq8B,qBAAqB;MACnBP,QAAQ;QACN9gB,KAAK;QACL6d,OAAOA,CAAC;UAACr5B;QAAAA,OAAc;UAAC85B,oBAAoB95B,QAAQ85B;QAAAA;QACpD0C,SAAS;UACPn8B,QAAQ;UACRV,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cACpBgO,SAAS;cACTzO,OAAOS,MAAMT;YACf;UAAA;QAEJ;QACA48B,QAAQ;UACNz8B,QAAQ;UACRV,SAASS,OAAO;YAACmgB,YAAYA,CAAC;cAAC5f;YAAAA,MAAWA,MAAMo8B;UAAO,CAAA;QAAA;MAE3D;MAEAv8B,MAAM;IACR;IAEAN,OAAO;MACLmD,MAAM;MACN7C,MAAM;IACR;IAEAw8B,wBAAwB;MACtBV,QAAQ;QACN9gB,KAAK;QACL6d,OAAOA,CAAC;UAACr5B;QAAAA,OAAc;UAACugB,YAAYvgB,QAAQugB;QAAAA;QAC5Cic,SAAS;UACPn8B,QAAQ;UACRV,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cACpBgO,SAAS;cACTzO,OAAOS,MAAMT;YACf;UAAA;QAEJ;QACA48B,QAAQ;UACNz8B,QAAQ;UACRV,SAASS,OAAO;YAACwa,cAAcA,CAAC;cAACja;YAAAA,MAAWA,MAAMo8B;UAAO,CAAA;QAAA;MAE7D;MACAv8B,MAAM,CAAC,MAAM;IACf;IAEAy8B,oCAAoC;MAClCl9B,IAAI;MACJu8B,QAAQ;QACN9gB,KAAK;QACL6d,OAAOA,CAAC;UAACr5B;QAAAA,OAAc;UACrBugB,YAAYvgB,QAAQugB;UACpB3F,cAAc5a,QAAQ4a;UACtBkf,oBAAoB95B,QAAQ85B;QAAAA;QAE9B0C,SAAS;UACPn8B,QAAQ;UACRV,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cACpBgO,SAAS;cACTzO,OAAOS,MAAMT;YACf;UAAA;QAEJ;QACA48B,QAAQ;UACNz8B,QAAQ;UACRV,SAASS,OAAO;YAACmgB,YAAYA,CAAC;cAAC5f;YAAAA,MAAWA,MAAMo8B;UAAO,CAAA;QAAA;MAE3D;MACAv8B,MAAM,CAAC,MAAM;IACf;IAEA08B,sBAAsB;MACpBh+B,IAAI;QACF,4BAA4B;UAC1B09B,OAAO;UACPj9B,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cAACm5B,oBAAoBn5B,MAAMm5B;YAAkB;UACrE;UACAz5B,QAAQ;UACR88B,SAAS;QAAA;MAEb;MACAb,QAAQ;QACN9gB,KAAK;QACL6d,OAAOA,CAAC;UAACr5B;QAAAA,OAAc;UAACgd,cAAchd,QAAQugB,WAAY3C;QAAAA;QAC1D4e,SAAS;UACPn8B,QAAQ;UACRV,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cACpBgO,SAAS;cACTzO,OAAOS,MAAMT;YACf;UAAA;QAEJ;QACA48B,QAAQ,CACN;UACEF,OAAO;YACLv5B,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,MAAWA,MAAMo8B;UAC7B;UACAp9B,SAASS,OAAO;YACds1B,aAAaA,CAAC;cAAC/0B;YAAAA,MAAWA,MAAMo8B;UAAAA,CACjC;UACD18B,QAAQ;QAAA,GAEV;UACEu8B,OAAO;YACLv5B,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,MAAWA,MAAMo8B;UAC7B;UACAp9B,SAASS,OAAO;YACds1B,aAAaA,CAAC;cAAC/0B;YAAAA,MAAWA,MAAMo8B;UAAAA,CACjC;UACD18B,QAAQ;QAAA,GAEV;UACEu8B,OAAO;YACLv5B,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,MAAWA,MAAMo8B;UAC7B;UACAp9B,SAAS,CACPS,OAAO;YACLud,YAAYA,CAAC;cAAC3d;YAAAA,MAAaA,QAAQugB;UACpC,CAAA,GACD,iCAAiC;UAEnClgB,QAAQ;QAAA,GAEV;UACEV,SAASS,OAAO;YACdud,YAAYA,CAAC;cAAC3d;YAAAA,MAAaA,QAAQugB;UAAAA,CACpC;UACDlgB,QAAQ;QACT,CAAA;MAEL;MACAG,MAAM,CAAC,MAAM;IACf;IAEA48B,SAAS;MACPl+B,IAAI;QACF,4BAA4B;UAC1B09B,OAAO;UACPj9B,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cAACm5B,oBAAoBn5B,MAAMm5B;YAAkB;UACrE;UACAz5B,QAAQ;UACR88B,SAAS;QAAA;MACX;IAEJ;IAEAzH,aAAa;MACXx2B,IAAI;QACF,4BAA4B;UAC1B09B,OAAO;UACPj9B,SAAS;YACP0D,MAAM;YACNiM,QAAQA,CAAC;cAAC3O;YAAAA,OAAY;cAACm5B,oBAAoBn5B,MAAMm5B;YAAkB;UACrE;UACAz5B,QAAQ;UACR88B,SAAS;QAAA;MAEb;MAEA78B,QAAQ;QACN24B,qBAAqB;UACnBqD,QAAQ;YACN9gB,KAAK;YACLghB,SAAS;cACPn8B,QAAQ;cACRV,SAAS;gBACP0D,MAAM;gBACNiM,QAAQA,CAAC;kBAAC3O;gBAAAA,OAAY;kBACpBgO,SAAS;kBACTzO,OAAOS,MAAMT;gBACf;cAAA;YAEJ;YACA48B,QAAQ;cACNz8B,QAAQ;cACRV,SAASS,OAAO;gBAACgiB,kBAAkBA,CAAC;kBAACzhB;gBAAAA,MAAWA,MAAMo8B;cAAO,CAAA;YAAA;UAEjE;UACAv8B,MAAM,CAAC,MAAM;QACf;QACA68B,iBAAiB;UACff,QAAQ;YACN9gB,KAAK;YACLghB,SAAS;cACPn8B,QAAQ;cACRV,SAAS;gBACP0D,MAAM;gBACNiM,QAAQA,CAAC;kBAAC3O;gBAAAA,OAAY;kBACpBgO,SAAS;kBACTzO,OAAOS,MAAMT;gBACf;cAAA;YAEJ;YACA48B,QAAQ;cACNz8B,QAAQ;cACRV,SAASS,OAAO;gBACdgiB,kBAAkBA,CAAC;kBAACzhB;gBAAAA,OAAY;kBAC9B2gB,QAAQ3gB,MAAMo8B;kBACdb,WAAW,IAAIE,KAAKA,KAAKD,IAAAA,IAAQ,MAAO,KAAK,KAAK,KAAK,EAAE;gBAC3D;cACD,CAAA;YAAA;UAEL;UACA37B,MAAM,CAAC,MAAM;QACf;QACA88B,mBAAmB;UACjBhB,QAAQ;YACN9gB,KAAK;YACL6d,OAAOA,CAAC;cAACr5B;YAAAA,OAAc;cACrBugB,YAAYvgB,QAAQugB;cACpB4Z,qBAAqBn6B,QAAQ01B;cAC7BtT,kBAAkBpiB,QAAQoiB,iBAAkBd;YAAAA;YAE9Ckb,SAAS;cACPn8B,QAAQ;cACRV,SAAS;gBACP0D,MAAM;gBACNiM,QAAQA,CAAC;kBAAC3O;gBAAAA,OAAY;kBACpBgO,SAAS;kBACTzO,OAAOS,MAAMT;gBACf;cAAA;YAEJ;YACA48B,QAAQ;cACNz8B,QAAQ;cACRV,SAASS,OAAO;gBAACud,YAAYA,CAAC;kBAAChd;gBAAAA,MAAWA,MAAMo8B;cAAO,CAAA;YAAA;UAE3D;UACAv8B,MAAM,CAAC,MAAM;QACf;QACAN,OAAO;UACLmD,MAAM;UACN7C,MAAM,CAAC,OAAO;QAChB;QACA48B,SAAS;UACPG,OAAO;YACLtB,eAAe;cACbW,OAAO;cACPj9B,SAASS,OAAO;gBAACgiB,kBAAkB;cAAA,CAAK;cACxC/hB,QAAQ;cACR88B,SAAS;YAAA;UACX;QACF;MAEJ;MACAn8B,SAAS;IAAA;EAEb;EAEAA,SAAS;AACX,CAAC;ACniBMw8B,SAAAA,sBAAA5D,kBAAAR,aAAA;;AAAA,QAAAv6B,QAAAC,iCAAA,EAAA,GAIL2+B,cAAoBC,eAAe;AAAC1+B,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KACXpC,KAAA;IAAA6hB,YAAAC;EAAAA,GAAyBjiB,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAlD,QAAA8hB,SAAeC,UAAU5hB,EAAyB,GAElD+5B,iBADoB/X,oBAAe,MAAfA,mBACajhB,IAEjC45B,mBADkBvb,8BACcC,MADdD,mBACcC,oBADdD,mBACcD,aAA+B,KAC/Dwf,SAAe3sB,UAAU;AAAC/R,MAAAA;AAAAJ,IAAA8+B,CAAAA,MAAAA,OAAAn8B,MAAA4O,iBAECnR,KAAAA,IAD3B43B,gBAA+C8G,OAAMn8B,MAAA4O,aAAA,EACRrL,IAAK,SAAS,GAAClG,EAAA8+B,CAAAA,IAAAA,OAAAn8B,MAAA4O,eAAAvR,EAAAA,CAAAA,IAAAI,MAAAA,KAAAJ,EAAA,CAAA;AAA5D,QAAAi7B,qBAA2B76B,IAC3B;IAAAuhB,MAAAC;EAAA,IAA0BC,SAAAA,GAC1B;IAAA3R;EAAYC,IAAAA,eAAAC,2BAA0C,GACtD8N,cAAoBiX,2BAA2B;AAACzyB,MAAAA;AAAA,MAAA1C,EAAA,CAAA,MAAAu6B,eAAAv6B,EAAA8hB,CAAAA,MAAAA,UAAA9hB,EAAAA,CAAAA,MAAAk6B,iBAAAl6B,EAAA,CAAA,MAAA4+B,eAAA5+B,EAAAke,CAAAA,MAAAA,eAAAle,EAAA+6B,CAAAA,MAAAA,oBAAA/6B,EAAA,CAAA,MAAA4hB,aAAA5hB,EAAA86B,EAAAA,MAAAA,kBAAA96B,EAAAA,EAAAA,MAAAkQ,GAAA;AAAArN,QAAAA;AAAA7C,MAAA4hB,EAAAA,MAAAA,aAAA5hB,EAAAA,EAAAA,MAAAkQ,KAKPrN,MAAAA,MACjC+e,UAAS;MAAA1gB,IACH;MAAmC+hB,UAAA;MAAAC,QAE/B;MAAOgK,UAAAC,IAAAA;MAAAlX,OAER/F,EAAE,mCAAmC;IAAA,CAC7C,GAAClQ,EAAAA,EAAAA,IAAA4hB,WAAA5hB,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA6C,OAAAA,MAAA7C,EAAA,EAAA;AAAAkD,QAAAA;AAAAlD,MAAAA,EAAAA,MAAA4+B,eAyB+B17B,MAAAG,CAAAA,QAAA;AAAC,YAAA;QAAAm3B;MAAAA,IAAAn3B;AAAO,aACzCu7B,YAAWG,wBAAyBvE,MAAKkD,qBAAsBlD,MAAK1kB,QAAS;IAAC9V,GAAAA,EAAAA,EAAAA,IAAA4+B,aAAA5+B,EAAAA,EAAAA,IAAAkD,OAAAA,MAAAlD,EAAA,EAAA,GAnCpF0C,KAAAq5B,kBAAAhO,QAAA;MAAAjtB,SAAA;QAAA,mCAEuC+B;MAO/B;MAAA9B,QAAA;QAAA,yBAGqBk5B,+BAAA;UAAAnY;UAAAoY;QAAAA,CAAsD;QAAC,8BAClDG,4BAAA;UAAAvY;QAAAA,CAAoC;QAAC,0BACzCwY,gCAAA;UAAAxY;UAAAyY;QAAAA,CAGzB;QAAC,uBACqBM,6BAAA;UAAA/Y;UAAAgZ;UAAAC;UAAA7c;QAAAA,CAKtB;QAAC,wBACsBgd,8BAAA;UAAApZ;UAAAiZ;QAAAA,CAGvB;QAAC,4BAC0BM,iCAAA;UAAAvZ;UAAAgZ;UAAAC;UAAA7c;QAAAA,CAK3B;QAAC,oBACkBie,eAAej5B,GAEnC;MAAA;IAAC,CAEJ,GAAClD,EAAAA,CAAAA,IAAAu6B,aAAAv6B,EAAAA,CAAAA,IAAA8hB,QAAA9hB,EAAAA,CAAAA,IAAAk6B,eAAAl6B,EAAAA,CAAAA,IAAA4+B,aAAA5+B,EAAAA,CAAAA,IAAAke,aAAAle,EAAAA,CAAAA,IAAA+6B,kBAAA/6B,EAAAA,CAAAA,IAAA4hB,WAAA5hB,EAAAA,EAAAA,IAAA86B,gBAAA96B,EAAAA,EAAAA,IAAAkQ,GAAAlQ,EAAAA,EAAAA,IAAA0C;EAAA;AAAAA,SAAA1C,EAAA,EAAA;AAAA6C,MAAAA;AAAA7C,IAAAA,EAAAA,MAAAi7B,sBACFp4B,KAAA;IAAA23B,OAAA;MAAAS;IAAAA;EAAA,GAA6Bj7B,EAAAA,EAAAA,IAAAi7B,oBAAAj7B,EAAAA,EAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,EAAA;AAxC/Bg/B,QAAAA,WAAiB5H,YACf10B,IAuCAG,EACF;AAAC,MAAAK,IAAAG;AAAArD,IAAAg/B,EAAAA,MAAAA,YAAAh/B,EAAAA,EAAAA,MAAAi7B,sBAKS/3B,KAAAA,MAAA;AACR87B,aAAQvY,KAAA;MAAAjiB,MAAa;MAA0By2B;IAAAA,CAAqB;EACnE53B,GAAAA,KAAA,CAAC27B,UAAU/D,kBAAkB,GAACj7B,EAAAA,EAAAA,IAAAg/B,UAAAh/B,EAAAA,EAAAA,IAAAi7B,oBAAAj7B,EAAAA,EAAAA,IAAAkD,IAAAlD,EAAAA,EAAAA,IAAAqD,OAAAH,KAAAlD,EAAA,EAAA,GAAAqD,KAAArD,EAAA,EAAA,QAFjCO,yBAAU2C,IAEPG,EAA8B;AAEjChC,QAAAA,QAAcwa,YAAYmjB,UAAQ1+B,OAGlC;AAGIe,MAAAA;AAAaA,UAAAA;AAEV29B,SAAAA;AAAQ;AA3EV,SAAA1+B,QAAAqC,OAAA;AAqEHA,SAAAA,MAAKugB,WAAY,UAAUvgB,MAAKtB,QAASsB,MAAKsnB,OAAQ,OAAO,IAAItnB,MAAKxB,QAAAE,QAAqB;AAAA;AC/ExF,SAAA49B,mCAAAtjB,eAAA;AAAA3b,QAAAA,QAAAC,iCAAA,CAAA,GACL;IAAAiQ;EAAAA,IAAYC,eAAAC,2BAA0C,GACtD;IAAAuR,MAAAC;EAAAA,IAA0BC,SAAAA,GAC1Bid,SAAe3sB,UAAU;AAAChS,MAAAA;AAAAH,IAAA8+B,CAAAA,MAAAA,OAAAn8B,MAAA4O,iBAECpR,KAAAA,IAD3B63B,gBAA+C8G,OAAMn8B,MAAA4O,aAAA,EACRrL,IAAK,SAAS,GAAClG,EAAA8+B,CAAAA,IAAAA,OAAAn8B,MAAA4O,eAAAvR,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAA5Di7B,QAAAA,qBAA2B96B,IAE3B4b,eAAqBF,YAAYF,eAAarb,OAAuC,GACrF4+B,gBAAsBrjB,YAAYF,eAAaxV,QAA6C;AAAC,MAAA/F,IAAAsC;AAAA1C,IAAA+b,CAAAA,MAAAA,gBAAA/b,EAAA,CAAA,MAAAk/B,iBAAAl/B,EAAAi7B,CAAAA,MAAAA,sBAAAj7B,EAAA,CAAA,MAAA4hB,aAAA5hB,EAAAA,CAAAA,MAAAkQ,KACnF9P,KAAAA,MAAA;AAAA,QACJ,CAACuG,MAAAC,QAAcmV,YAAY,KAAC,CAAKkf,sBAAkB,CAAKiE;AAAa;AACzE,UAAAC,aAAAA,IAAA/gB,IAA2B6c,oBAAoBiE,aAAa,EAAAngB;AACvDhD,iBAAYlV,KAAAoZ,CAAmBA,YAAAA,QAAOC,KAAMif,UAAU,CAAC,KAC1Dvd,UAAS;MAAAqB,UAAA;MAAA/hB,IAEH,uCAAuCi+B,UAAU;MAAEjc,QAC/C;MAAOgK,UAAAC,IAAAA;MAAAlX,OAER/F,EAAE,gDAAgD;MAACxO,iBAEvD,wBAAA,WAAA,EACIwO,GACK,SAAA,wDACI,YAAA;QAAAuF,MAAO;MAAA,GACX,QAAA;QAAAwlB;QAAAmE,eAESD;MAAAA,EAChB,CAAA;IAAA,CAGN;EAAA,GAEFz8B,KAAA,CAACqZ,cAAcmjB,eAAejE,oBAAoBrZ,WAAW1R,CAAC,GAAClQ,EAAAA,CAAAA,IAAA+b,cAAA/b,EAAAA,CAAAA,IAAAk/B,eAAAl/B,EAAAA,CAAAA,IAAAi7B,oBAAAj7B,EAAAA,CAAAA,IAAA4hB,WAAA5hB,EAAAA,CAAAA,IAAAkQ,GAAAlQ,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QAvBlEO,yBAAUH,IAuBPsC,EAA+D;AAAC;AAhC9D,SAAAyD,SAAAyjB,SAAA;;AAQuDjnB,UAAAA,aAAKxB,QAAA2d,eAALnc,mBAAKoc;AAAA;AAR5D,SAAAze,QAAAqC,OAAA;AAAA,SAOsDA,MAAKxB,QAAA4a;AAAA;ACR3D,SAAAsjB,wBAAA;AAAAr/B,QAAAA,QAAAC,iCAAA,CAAA;AAAAE,MAAAA;AAAAH,IAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAIoBpC,KAAA;IAAA6hB,YAAAC;EAAAA,GAAyBjiB,EAAAA,CAAAA,IAAAG,MAAAA,KAAAH,EAAA,CAAA;AAAlD,QAAA8hB,SAAeC,UAAU5hB,EAAyB,GAClDm/B,CAAAA,kCAAAC,KAAA,QAAkDC,0BAAAl/B,SAEhD,SACF,GACA,CAAAm/B,8BAAAC,+BAAA,QAAwE30B,wBAAAA,IAExE;AAAC,MAAA3K,IAAAsC;AAAA1C,IAAAA,CAAAA,MAAA8hB,UAES1hB,KAAAA,MAAA;AACRwX,UAAAA,cAAoB+nB,iCAAiC7d,QAAMW,CAAA,WAAA;AACzBA,sCAAAA,MAAM,GACtC8c,MAAM;IAAA,CACP;AAAC,WACW3nB,MAAAA,YAAY;EAAC,GACzBlV,KAAAA,CAACof,MAAM,GAAC9hB,EAAAA,CAAAA,IAAA8hB,QAAA9hB,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,OAAAtC,KAAAJ,EAAA,CAAA,GAAA0C,KAAA1C,EAAA,CAAA,QANXO,yBAAUH,IAMPsC,EAAQ;AAACG,MAAAA;AAAA,SAAA7C,EAAAs/B,CAAAA,MAAAA,oCAAAt/B,EAAAA,CAAAA,MAAAy/B,gCAEL58B,KAAA,CAAC48B,8BAA8BH,gCAAgC,GAACt/B,EAAAA,CAAAA,IAAAs/B,kCAAAt/B,EAAAA,CAAAA,IAAAy/B,8BAAAz/B,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAAhE6C;AAAgE;AArBlE,SAAAvC,UAAA;AAMG,SAAA;AAAO;ACJjB,SAAes/B,4BAAAz/B,IAAA;;AAAAH,QAAAA,QAAAC,iCAAA,CAAA,GAAqC;IAAAw2B;EAAAA,IAAAt2B,IAKlDwb,gBAAsBgjB,uBAAsBlI,UAAIxhB,YAAJwhB,mBAAI3X,aAAsB2X,UAAIxhB,YAAJwhB,mBAAI1a,YAAsB;AAChGkjB,qCAAmCtjB,aAAa;AAEhD,QAAA8gB,uCAA6C5gB,YAC3CF,eAAarb,KAEf,GACAq8B,uCAA6C9gB,YAC3CF,eAAaxV,MAEf,GACAu2B,qCAA2C7gB,YACzCF,eAAatV,MAEf,GACAu2B,6BAAmC/gB,YACjCF,eAAa3H,MAEf,GACA5S,MAAYya,YAAYF,eAAazH,MAAqC,GAE1E,CAAAmW,wBAAAiV,gCAAA,IAAmED,sBAAsB;AAGvF,MAAA,CAACj+B,OACDk+B,qCAAqC,aAAA,CACpC7C,wCACD,OAAOA,qCAAoCM,UAAa,OACvDJ,CAAAA,wCACD,OAAOA,qCAAoCI,UAAa,OAAW,CAClEH,8BACAF,CAAAA,sCACD,OAAOA,mCAAkCK,UAAa,OACtD,OAAOH,2BAA0BG,UAAa,KAAW;AAAA38B,QAAAA;AAAA,WAAAJ,EAAA,CAAA,MAAAsC,OAAAC,IAAA,2BAAA,KAElDnC,UAAA,wBAAC,qBAAsB,CAAA,CAAA,GAAAJ,EAAAA,CAAAA,IAAAI,OAAAA,MAAAJ,EAAA,CAAA,GAAvBI;EAAAA;AASHA,QAAAA,MAAAq8B,6FAAoCM,aAAAA,SACpCJ,6FAAoCI,aAAkB,MAE7Br6B,MAAAg6B,yFAAkCK,aAAkB;AAAAl6B,MAAAA;AAAA,SAAA7C,EAAAA,CAAAA,MAAA2b,iBAAA3b,EAAAI,CAAAA,MAAAA,MAAAJ,EAAA0C,CAAAA,MAAAA,MAAA1C,EAAA,CAAA,MAAAy2B,QAAAz2B,EAAAA,CAAAA,MAAAoB,OAAApB,EAAA,CAAA,MAAAqqB,0BARjFxnB,SAAC,wBAAA,kBAAA,EACO4zB,MACar1B,mBAAE,KACGipB,wBAEtB,6BAAAjqB,IAGyB,2BAAAsC,IACZiZ,cACf,CAAA,GAAA3b,EAAAA,CAAAA,IAAA2b,eAAA3b,EAAAA,CAAAA,IAAAI,IAAAJ,EAAAA,CAAAA,IAAA0C,IAAA1C,EAAAA,CAAAA,IAAAy2B,MAAAz2B,EAAAA,CAAAA,IAAAoB,KAAApB,EAAAA,CAAAA,IAAAqqB,wBAAArqB,EAAAA,CAAAA,IAAA6C,MAAAA,KAAA7C,EAAA,CAAA,GAVF6C;AAUE;AAtDS,SAAAqR,OAAA6V,SAAA;AAAA,SAwBqCpnB,QAAKxB,QAAA2d;AAAA;AAxB1C,SAAA9K,OAAA8V,SAAA;AAAA,SAsBAnnB,QAAKxB,QAAAy7B;AAAA;AAtBL,SAAAv2B,OAAAwjB,SAAA;AAAA,SAkBAlnB,QAAKxB,QAAAu7B;AAAA;AAlBL,SAAAv2B,OAAAyjB,SAAA;AAAA,SAcAjnB,QAAKxB,QAAAw7B;AAAA;AAdL,SAAAr8B,MAAAqC,OAAA;AAAA,SAUAA,MAAKxB,QAAAs7B;AAAA;",
  "names": ["c", "URL", "URL", "v4_default", "c", "URL", "_id", "_type", "parse", "value", "_a", "result", "char", "prefix", "i", "parse", "tag", "PostMessageFeatures", "props", "$", "_c", "comlink", "t0", "t1", "on", "_temp", "useEffect", "memo", "features", "optimistic", "presentationMachine", "setup", "types", "actions", "actors", "guards", "createMachine", "id", "context", "url", "error", "visualEditingOverlaysEnabled", "assign", "target", "states", "description", "tags", "loading", "loaded", "event", "enabled", "idle", "refreshing", "reloading", "initial", "SharedStateProvider", "children", "Symbol", "for", "sharedState", "useRef", "t2", "state", "current", "t3", "key", "value", "post", "setValue", "t4", "key_0", "removeValue", "t5", "t6", "t7", "Root", "styled", "div", "Panel", "defaultSize", "minWidth", "maxWidth", "order", "undefined", "useContext", "PresentationPanelsContext", "Error", "getPanelStyle", "registerElement", "unregisterElement", "style", "type", "useLayoutEffect", "debounce", "fn", "timeout", "timer", "args", "clearTimeout", "setTimeout", "apply", "itemKey", "getStoredItem", "JSON", "parse", "localStorage", "getItem", "setStoredItem", "data", "setItem", "stringify", "getKeyForPanels", "panels", "map", "panel", "join", "usePanelsStorage", "get", "_temp2", "set", "_temp3", "setDebounced", "panels_0", "widths", "stored_0", "stored", "Array", "isArray", "some", "val", "getNextWidth", "nextWidth", "containerWidth", "maxWidthPx", "minWidthPx", "Math", "min", "max", "getNextWidths", "delta", "panelBefore", "panelAfter", "panelsState", "initialDragState", "prevWidths", "initialWidths", "nextWidths", "pivotPanel", "index", "findIndex", "width", "abs", "deltaApplied", "deltaRemaining", "toPrecision", "localeCompare", "numeric", "length", "getPanelWidth", "getOffset", "handleElement", "initialOffset", "initialHandleElementRect", "pointerOffset", "clientX", "elementOffset", "getBoundingClientRect", "left", "isPanel", "element", "isResizer", "getSortedElements", "elements", "from", "values", "sort", "a", "b", "validateWidths", "widthsToValidate", "total", "reduce", "remainingWidth", "toFixed", "getDefaultWidths", "panelsWithoutWidth", "remainingWidthTotal", "widthsWithNulls", "defaultWidth", "PanelsWrapper", "Panels", "panelsEl", "Map", "setElements", "useState", "filter", "setWidths", "activeResizer", "setActiveResizer", "panelsRef", "flexGrow", "pointerEvents", "id_0", "prev", "has", "next", "t8", "id_1", "prev_0", "next_0", "delete", "t9", "window", "innerWidth", "dragOffset", "resizerIndex", "resizerRect", "startX", "dragRef", "t10", "id_2", "elementsArr", "el", "resizer", "resizeElement", "acc", "el_0", "i", "acc_0", "el_1", "i_0", "pageX", "startDragging", "t11", "stopDragging", "t12", "id_3", "event_0", "preventDefault", "stopPropagation", "resizer_0", "resizeElement_0", "offset", "rect", "prevWidth", "i_1", "drag", "t13", "t14", "storage", "t15", "t16", "widths_0", "storedWidths", "validatedStoredWidths", "defaultWidths", "t17", "t18", "t19", "t20", "resizeObserver", "ResizeObserver", "prevWidths_0", "nextWidths_0", "prevWidth_0", "i_2", "observe", "disconnect", "t21", "t22", "t23", "t24", "ErrorCard", "message", "onContinueAnyway", "onRetry", "restProps", "t", "useTranslation", "presentationLocaleNamespace", "retryButton", "continueAnywayButton", "Container", "encodeQueryString", "params", "parts", "Object", "entries", "resolveQueryStringFromParams", "nextParams", "allowed", "safeNextParams", "includes", "obj", "BackLink", "forwardRef", "ref", "searchParams", "_searchParams", "ReferenceChildLink", "documentId", "documentType", "parentRefPath", "template", "PresentationPaneRouterProvider", "onStructureParams", "structureParams", "refs", "routerState", "resolvePathFromState", "useRouter", "fromEntries", "routerSearchParams", "useUnique", "path", "qs", "createPathWithParams", "childLinkProps", "childId", "find", "r", "_id", "getPublishedId", "_type", "backLinkProps", "childLinkProps_0", "nextParams_0", "inspect", "groupIndex", "siblingIndex", "payload", "hasGroupSiblings", "groupLength", "routerPanesState", "ChildLink", "ParameterizedLink", "closeCurrentAndAfter", "handleEditReference", "replaceCurrent", "_temp4", "closeCurrent", "_temp5", "duplicateCurrent", "_temp6", "setView", "_temp7", "setParams", "setPayload", "_temp8", "navigateIntent", "_temp9", "intentName", "intentParams", "options_0", "console", "warn", "options", "viewId", "pane_0", "pane", "RootLayout", "PaneLayout", "Flex", "WrappedCode", "Code", "DocumentListPane", "mainDocumentState", "devMode", "usePresentationTool", "document", "ids", "schemaTypeName", "title", "errorParams", "setErrorParams", "handleRetry", "StructureDocumentListPane", "r_0", "DocumentPane", "onFocusPath", "templateParams", "decodeJsonParams", "templateParameters", "paneDocumentNode", "height", "StructureDocumentPane", "DocumentPanel", "StructureToolProvider", "usePreviewState", "schemaType", "documentPreviewStore", "useDocumentPreviewStore", "preview", "setPreview", "perspectiveStack", "usePerspective", "subscription", "getPreviewStateObservable", "subscribe", "unsubscribe", "ContentEditor", "schema", "useSchema", "props_0", "MainDocumentLink", "previewState", "bb0", "snapshot", "getPreviewValueWithFallback", "fallback", "usePanelId", "uuid", "panelId", "Resizer", "ResizerInner", "$disabled", "PanelResizer", "propId", "disabled", "isDragging", "nativeEvent", "onMouseDown", "e", "onDrag", "blur", "onDragStop", "resetDocumentStyles", "bodyStyle", "body", "documentStyle", "documentElement", "cursor", "userSelect", "removeProperty", "addEventListener", "removeEventListener", "PresentationContentWrapper", "setDisplayedDocument", "getCommentIntent", "PresentationContent", "documentsOnPage", "PresentationNavigateProvider", "navigate", "_navigate", "useLocalState", "defaultValue", "usePresentationNavigator", "unstable_navigator", "navigatorProvided", "component", "_navigatorEnabled", "setNavigatorEnabled", "navigatorEnabled", "toggleNavigator", "Component", "NavigatorComponent", "navigatorDisabled", "Navigator", "PresentationParamsProvider", "PresentationProvider", "name", "useAllowPatterns", "previewUrlRef", "allowPatterns", "useSelector", "TypeError", "allowOrigins", "encodeStudioPerspective", "studioPerspective", "useId", "useReactId", "startsWith", "replace", "IFrame", "forwardedRef", "animate", "onLoad", "preventClick", "src", "variants", "useImperativeHandle", "instance", "handleBlur", "activeElement", "dispatchEvent", "MouseEvent", "bubbles", "cancelable", "viewTransitionName", "IFrameElement", "motion", "create", "iframe", "IFrameOverlay", "Box", "GlobalViewTransition", "createGlobalStyle", "OpenPreviewButton", "openPopup", "previewLocationOrigin", "previewLocationRoute", "perspective", "targetOrigin", "URL", "urlSearchParamPreviewPerspective", "pathname", "search", "openPreviewLink", "currentTarget", "href", "handleOpenPopup", "LaunchIcon", "useTargetOrigin", "previewUrl", "origin", "PreviewLocationInput", "fontSize", "onChange", "padding", "prefix", "suffix", "basePath", "useActiveWorkspace", "activeWorkspace", "inputRef", "sessionValue", "setSessionValue", "customValidity", "setCustomValidity", "handleChange", "absoluteValue", "toString", "pattern", "test", "reportValidity", "nextValue", "handleKeyDown", "nextValue_0", "handleClear", "icon", "ResetIcon", "zIndex", "QRCodeSVG", "lazy", "QrCodeLogoSize", "QrCodeLogoPadding", "QrSize", "StyledSanityMonogram", "SanityMonogram", "MotionSpinner", "Spinner", "MotionText", "Text", "MotionMonogram", "SharePreviewMenu", "canToggleSharePreviewAccess", "canUseSharedPreviewAccess", "initialUrl", "push", "pushToast", "useToast", "client", "useClient", "apiVersion", "API_VERSION", "currentUser", "useCurrentUser", "setLoading", "enabling", "setEnabling", "disabling", "setDisabling", "secret", "setSecret", "busy", "useMemo", "setSecretSearchParams", "setError", "handleUnableToToggle", "useCallback", "closable", "status", "handleDisableSharing", "disablePreviewAccessSharing", "location", "handleEnableSharing", "previewUrlSecret", "enablePreviewAccessSharing", "handleCopyUrl", "navigator", "clipboard", "writeText", "controller", "AbortController", "usedTags", "fetchShareSecret", "lastLiveEventId", "signal", "result", "syncTags", "fetch", "fetchSharedAccessQuery", "filterResponse", "tag", "aborted", "live", "events", "abort", "finally", "ShareIcon", "justifyContent", "alignItems", "gridTemplateColumns", "gridTemplateRows", "position", "aspectRatio", "display", "opacity", "textWrap", "textAlign", "CopyIcon", "constrainSize", "placement", "portal", "displayName", "PreviewHeaderDefault", "canSharePreviewAccess", "iframeRef", "onPathChange", "onRefresh", "overlaysConnection", "presentationRef", "setViewport", "toggleOverlay", "viewport", "toggleViewportSize", "send", "handleRefresh", "isLoading", "isLoaded", "isRefreshing", "isReloading", "overlaysEnabled", "previewURL", "withoutSecretSearchParams", "perspectiveToggleTooltipId", "previewUrlBusy", "PanelLeftIcon", "content", "fallbackPlacements", "whiteSpace", "marginTop", "marginBottom", "lineHeight", "borderRadius", "margin", "t25", "t26", "t27", "t28", "t29", "t30", "RefreshIcon", "t31", "t32", "t33", "t34", "node", "setProperty", "t35", "t36", "t37", "t38", "t39", "t40", "MobileDeviceIcon", "DesktopIcon", "t41", "t42", "t43", "t44", "PreviewHeader", "renderDefault", "HeaderComponent", "header", "minHeight", "matches", "state_0", "state_1", "state_2", "state_3", "state_4", "hasTag", "MotionFlex", "Preview", "loadersConnection", "vercelProtectionBypass", "stablePerspective", "setStablePerspective", "urlPerspective", "urlSearchParamVercelProtectionBypass", "urlSearchParamVercelSetBypassCookie", "prefersReducedMotion", "usePrefersReducedMotion", "previewHeader", "timedOut", "setTimedOut", "somethingIsWrong", "setSomethingIsWrong", "iframeIsBusy", "handleContinueAnyway", "setContinueAnyway", "continueAnyway", "showOverlaysConnectionStatus", "setShowOverlaysConnectionState", "MAX_TIME_TO_OVERLAYS_CONNECTION", "onIFrameLoad", "preventIframeInteraction", "canUseViewTransition", "useSyncExternalStore", "CSS", "supports", "iframeAnimations", "currentViewport", "setCurrentViewport", "iframeStyle", "setIframeStyle", "iframeVariants", "update", "startViewTransition", "flushSync", "toast", "checkOrigin", "setCheckOrigin", "reportedMismatches", "Set", "reportMismatchingOrigin", "useEffectEvent", "reportedOrigin", "allow", "add", "duration", "Infinity", "usePresentationNavigate", "navigateEvent", "nextUrl", "hash", "contentWindow", "createController", "addTarget", "createChannel", "heartbeat", "connectTo", "createConnectionMachine", "provide", "createCompatibilityActors", "stop", "start", "destroy", "interval", "setInterval", "postMessage", "domain", "clearInterval", "spinnerVariants", "inset", "backdropFilter", "WebkitBackdropFilter", "WebkitTransition", "sizes", "errorVariants", "background", "desktop", "mobile", "exit", "boxShadow", "scale", "active", "defineWarnOnce", "warned", "warnOnceAboutCrossDatasetReference", "useDocumentsOnPage", "frameStateRef", "validateApiPerspective", "published", "setPublished", "previewDrafts", "setPreviewDrafts", "urlRef", "perspective_0", "documents", "setCache", "cache", "isEqual", "setDocumentsOnPage", "keyedCache", "uniqueDocuments", "cache_0", "forEach", "doc", "sourceDocument", "_projectId", "fnOrObj", "arg", "Function", "getQueryFromResult", "resolver", "resolve", "getParamsFromResult", "getRouteContext", "route", "routes", "absolute", "match", "decode", "decodeURIComponent", "useMainDocument", "navigationHistory", "resolvers", "relativeUrl", "setMainDocumentState", "mainDocumentIdRef", "at", "handleResponse", "url_0", "query", "then", "doc_0", "catch", "parseId", "rawId", "segments", "split", "shift", "parsePath", "rawPath", "studioPath", "urlStringToPath", "parseRouterState", "pruneObject", "useParams", "initialPreviewUrl", "routerNavigate", "rev", "since", "view", "pathKey", "instruction", "comment", "changesInspectorTab", "routerStateRef", "setNavigationHistory", "nextState", "nextSearchState", "forceReplace", "routerSearchState", "searchState", "usePopups", "popups", "setPopups", "source", "open", "unsubs", "size", "source_0", "closed", "source_1", "source_2", "POPUP_CHECK_INTERVAL", "unsub", "usePresentationPerspective", "selectedPerspectiveName", "selectedReleaseId", "useStatus", "statusMap", "setStatusMap", "handshaking", "memoStatus", "connection", "hasConnected_0", "hasConnected", "status_1", "setStatusFromEvent", "status_0", "LiveQueries", "PostMessageDocuments", "PostMessageRefreshMutations", "PostMessagePerspective", "PostMessagePreviewSnapshots", "PostMessageSchema", "PostMessageTelemetry", "PresentationTool", "tool", "components", "DEFAULT_TOOL_NAME", "unstable_header", "previewMode", "shareAccess", "option", "hostname", "setController", "visualEditingComlink", "setVisualEditingComlink", "useActorRef", "projectId", "useProjectId", "dataset", "useDataset", "mainDocuments", "setOverlaysConnection", "setLoadersConnection", "previewKitConnection", "setPreviewKitConnection", "handleNavigate", "urlWithoutSearch", "URLSearchParams", "refreshRef", "onStatus", "handleFocusPath", "nextPath", "handlePreviewPath", "handleStructureParams", "frameOrigin", "previewOrigin", "newUrl", "displayedDocument", "handleKeyUp", "isAltKey", "handleKeydown", "isHotkey", "boundaryElement", "setBoundaryElement", "PresentationNavigator", "livePreviewEnabled", "workspace", "useWorkspace", "COMMENTS_INSPECTOR_NAME", "mode", "EDIT_INTENT_MODE", "IS_MAC", "platform", "MODIFIERS", "alt", "ctrl", "mod", "keys", "every", "toUpperCase", "defineCreatePreviewSecretActor", "currentUserId", "fromPromise", "createPreviewSecret", "defineReadSharedSecretActor", "defineResolveAllowPatternsActor", "allowOption", "input", "URLPattern", "maybePatterns", "urlPatterns", "urlPattern", "defineResolveInitialUrlActor", "studioBasePath", "previewUrlOption", "studioPreviewPerspective", "previewSearchParam", "defineResolvePreviewModeActor", "draftMode", "enable", "defineResolvePreviewModeUrlActor", "resolvedPreviewMode", "urlSearchParamPreviewSecret", "urlSearchParamPreviewPathname", "resolveUrlFromPreviewSearchParamActor", "previewSearchParamUrl", "shareAccessSingletonDocument", "schemaIdSingleton", "schemaTypeSingleton", "previewUrlSecretDocument", "previewUrlMachine", "log", "_", "cause", "fromObservable", "throwError", "Promise", "reject", "has checked permissions", "Boolean", "previewAccessSharingCreatePermission", "previewAccessSharingReadPermission", "previewAccessSharingUpdatePermission", "previewUrlSecretPermission", "search param has new origin", "can create preview secret", "granted", "has preview mode with created secret", "has preview mode with share access", "has preview mode without permissions", "delays", "expiredSecret", "expiresAt", "now", "Date", "getTime", "invoke", "checkPermissionName", "onError", "onSnapshot", "checkingPermissions", "always", "guard", "resolvingInitialUrl", "onDone", "output", "resolvingAllowPatterns", "resolvingUrlFromPreviewSearchParam", "resolvingPreviewMode", "reenter", "success", "readShareAccess", "resolvePreviewUrl", "after", "usePreviewUrlActorRef", "grantsStore", "useGrantsStore", "router", "checkDocumentPermission", "actorRef", "useReportInvalidPreviewSearchParam", "currentOrigin", "nextOrigin", "blockedOrigin", "useVercelBypassSecret", "vercelProtectionBypassReadyState", "ready", "useReducer", "vercelProtectionBypassSecret", "setVercelProtectionBypassSecret", "subcribeToVercelProtectionBypass", "PresentationToolGrantsCheck"]
}
