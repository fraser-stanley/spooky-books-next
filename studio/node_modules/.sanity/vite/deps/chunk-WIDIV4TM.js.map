{
  "version": 3,
  "sources": ["../../../@sanity/presentation-comlink/src/comlinkCompatibility.ts", "../../../@sanity/presentation-comlink/src/isMaybePresentation.ts"],
  "sourcesContent": ["import {\n  createListenLogic,\n  createRequestMachine,\n  DOMAIN,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n  type InternalMessageType,\n  type Message,\n  type ProtocolMessage,\n  type RequestMachineContext,\n} from '@sanity/comlink'\nimport type {\n  LoaderControllerMsg,\n  LoaderNodeMsg,\n  PreviewKitNodeMsg,\n  VisualEditingControllerMsg,\n  VisualEditingNodeMsg,\n} from './types'\n\ntype ComlinkMessageType =\n  | InternalMessageType\n  | (\n      | LoaderControllerMsg\n      | LoaderNodeMsg\n      | PreviewKitNodeMsg\n      | VisualEditingControllerMsg\n      | VisualEditingNodeMsg\n    )['type']\n\ntype ChannelsMessageType =\n  | 'handshake/syn'\n  | 'handshake/syn-ack'\n  | 'handshake/ack'\n  | 'channel/response'\n  | 'channel/heartbeat'\n  | 'channel/disconnect'\n  | 'overlay/focus'\n  | 'overlay/navigate'\n  | 'overlay/toggle'\n  | 'presentation/toggleOverlay'\n\nconst channelsToComlinkMap: {[key in ChannelsMessageType]: ComlinkMessageType} = {\n  'handshake/syn': MSG_HANDSHAKE_SYN,\n  'handshake/syn-ack': MSG_HANDSHAKE_SYN_ACK,\n  'handshake/ack': MSG_HANDSHAKE_ACK,\n  'channel/response': MSG_RESPONSE,\n  'channel/heartbeat': MSG_HEARTBEAT,\n  'channel/disconnect': MSG_DISCONNECT,\n  'overlay/focus': 'visual-editing/focus',\n  'overlay/navigate': 'visual-editing/navigate',\n  'overlay/toggle': 'visual-editing/toggle',\n  'presentation/toggleOverlay': 'presentation/toggle-overlay',\n}\n\nconst comlinkToChannelsMap: {[key in ComlinkMessageType]?: ChannelsMessageType} = {\n  [MSG_HANDSHAKE_SYN]: 'handshake/syn',\n  [MSG_HANDSHAKE_SYN_ACK]: 'handshake/syn-ack',\n  [MSG_HANDSHAKE_ACK]: 'handshake/ack',\n  [MSG_RESPONSE]: 'channel/response',\n  [MSG_HEARTBEAT]: 'channel/heartbeat',\n  [MSG_DISCONNECT]: 'channel/disconnect',\n  'visual-editing/focus': 'overlay/focus',\n  'visual-editing/navigate': 'overlay/navigate',\n  'visual-editing/toggle': 'overlay/toggle',\n  'presentation/toggle-overlay': 'presentation/toggleOverlay',\n}\n\ntype ChannelMsg = Omit<ProtocolMessage, 'channelId'> & {connectionId: string}\n\nconst convertToComlinkEvent = (event: MessageEvent): MessageEvent<ProtocolMessage> => {\n  const {data} = event\n\n  if (\n    data &&\n    typeof data === 'object' &&\n    'domain' in data &&\n    'type' in data &&\n    'from' in data &&\n    'to' in data\n  ) {\n    if (data.domain === 'sanity/channels') {\n      data.domain = DOMAIN\n    }\n\n    if (data.to === 'overlays') {\n      data.to = 'visual-editing'\n    }\n\n    if (data.from === 'overlays') {\n      data.from = 'visual-editing'\n    }\n\n    data.channelId = data.connectionId\n    delete data.connectionId\n\n    data.type = channelsToComlinkMap[data.type as ChannelsMessageType] ?? data.type\n  }\n\n  return event\n}\n\nconst convertToChannelsMessage = (comlinkMessage: ProtocolMessage): ChannelMsg => {\n  const {channelId, ...rest} = comlinkMessage\n  const message = {...rest, connectionId: channelId} as ChannelMsg\n\n  if (message.domain === DOMAIN) {\n    message.domain = 'sanity/channels'\n  }\n\n  if (message.to === 'visual-editing') {\n    message.to = 'overlays'\n  }\n\n  if (message.from === 'visual-editing') {\n    message.from = 'overlays'\n  }\n\n  message.type = comlinkToChannelsMap[message.type as ComlinkMessageType] ?? message.type\n\n  if (message.type === 'channel/response' && message.responseTo && !message.data) {\n    message.data = {responseTo: message.responseTo}\n  }\n\n  if (\n    message.type === 'handshake/syn' ||\n    message.type === 'handshake/syn-ack' ||\n    message.type === 'handshake/ack'\n  ) {\n    message.data = {id: message.connectionId}\n  }\n\n  return message\n}\n\nconst sendAsChannelsMessage = <S extends Message>(\n  {context}: {context: RequestMachineContext<S>},\n  params: {message: ProtocolMessage},\n): void => {\n  const {sources, targetOrigin} = context\n\n  const message = convertToChannelsMessage(params.message)\n\n  sources.forEach((source) => {\n    source.postMessage(message, {targetOrigin})\n  })\n}\n\nexport {\n  type ListenInput,\n  type Message,\n  type MessageData,\n  type MessageType,\n  MSG_RESPONSE,\n  type ProtocolMessage,\n  type RequestMachineContext,\n  type ResponseMessage,\n} from '@sanity/comlink'\n\nexport const createCompatibilityActors = <\n  T extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine<T>().provide({\n    actions: {\n      'send message': sendAsChannelsMessage,\n    },\n  }),\n})\n", "export function isMaybePreviewIframe(): boolean {\n  return window.self !== window.top\n}\nexport function isMaybePreviewWindow(): boolean {\n  return Boolean(window.opener)\n}\nexport function isMaybePresentation(): boolean {\n  return isMaybePreviewIframe() || isMaybePreviewWindow()\n}\n"],
  "mappings": ";;;;;;;;;;;;;AA6CA,IAAM,uBAA2E;EAC/E,iBAAiB;EACjB,qBAAqB;EACrB,iBAAiB;EACjB,oBAAoB;EACpB,qBAAqB;EACrB,sBAAsB;EACtB,iBAAiB;EACjB,oBAAoB;EACpB,kBAAkB;EAClB,8BAA8B;AAChC;AAXA,IAaM,uBAA4E;EAChF,CAAC,iBAAiB,GAAG;EACrB,CAAC,qBAAqB,GAAG;EACzB,CAAC,iBAAiB,GAAG;EACrB,CAAC,YAAY,GAAG;EAChB,CAAC,aAAa,GAAG;EACjB,CAAC,cAAc,GAAG;EAClB,wBAAwB;EACxB,2BAA2B;EAC3B,yBAAyB;EACzB,+BAA+B;AACjC;AAxBA,IA4BM,wBAAwB,CAAC,UAAuD;AAC9E,QAAA,EAAC,KAAA,IAAQ;AAGb,SAAA,QACA,OAAO,QAAS,YAChB,YAAY,QACZ,UAAU,QACV,UAAU,QACV,QAAQ,SAEJ,KAAK,WAAW,sBAClB,KAAK,SAAS,SAGZ,KAAK,OAAO,eACd,KAAK,KAAK,mBAGR,KAAK,SAAS,eAChB,KAAK,OAAO,mBAGd,KAAK,YAAY,KAAK,cACtB,OAAO,KAAK,cAEZ,KAAK,OAAO,qBAAqB,KAAK,IAA2B,KAAK,KAAK,OAGtE;AACT;AA1DA,IA4DM,2BAA2B,CAAC,mBAAgD;AAC1E,QAAA,EAAC,WAAW,GAAG,KAAA,IAAQ,gBACvB,UAAU,EAAC,GAAG,MAAM,cAAc,UAAS;AAE7C,SAAA,QAAQ,WAAW,WACrB,QAAQ,SAAS,oBAGf,QAAQ,OAAO,qBACjB,QAAQ,KAAK,aAGX,QAAQ,SAAS,qBACnB,QAAQ,OAAO,aAGjB,QAAQ,OAAO,qBAAqB,QAAQ,IAA0B,KAAK,QAAQ,MAE/E,QAAQ,SAAS,sBAAsB,QAAQ,cAAc,CAAC,QAAQ,SACxE,QAAQ,OAAO,EAAC,YAAY,QAAQ,WAAU,KAI9C,QAAQ,SAAS,mBACjB,QAAQ,SAAS,uBACjB,QAAQ,SAAS,qBAEjB,QAAQ,OAAO,EAAC,IAAI,QAAQ,aAAA,IAGvB;AACT;AA3FA,IA6FM,wBAAwB,CAC5B,EAAC,QAAA,GACD,WACS;AACH,QAAA,EAAC,SAAS,aAAA,IAAgB,SAE1B,UAAU,yBAAyB,OAAO,OAAO;AAE/C,UAAA,QAAQ,CAAC,WAAW;AAC1B,WAAO,YAAY,SAAS,EAAC,aAAA,CAAa;EAAA,CAC3C;AACH;AAxGA,IAqHa,4BAA4B,OAGjC;EACN,QAAQ,kBAAkB,qBAAqB;EAC/C,gBAAgB,qBAAwB,EAAE,QAAQ;IAChD,SAAS;MACP,gBAAgB;IAAA;EAEnB,CAAA;AACH;",
  "names": []
}
